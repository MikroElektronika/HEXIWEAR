;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/5/2016 3:02:29 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2002  	537067516
0x0004	0x1AA10000  	6817
0x0008	0x03FD0000  	1021
0x000C	0x03FD0000  	1021
0x0010	0x03FD0000  	1021
0x0014	0x03FD0000  	1021
0x0018	0x03FD0000  	1021
0x001C	0x03FD0000  	1021
0x0020	0x03FD0000  	1021
0x0024	0x03FD0000  	1021
0x0028	0x03FD0000  	1021
0x002C	0x03FD0000  	1021
0x0030	0x03FD0000  	1021
0x0034	0x03FD0000  	1021
0x0038	0x03FD0000  	1021
0x003C	0x03FD0000  	1021
0x0040	0x03FD0000  	1021
0x0044	0x03FD0000  	1021
0x0048	0x03FD0000  	1021
0x004C	0x03FD0000  	1021
0x0050	0x03FD0000  	1021
0x0054	0x03FD0000  	1021
0x0058	0x03FD0000  	1021
0x005C	0x03FD0000  	1021
0x0060	0x03FD0000  	1021
0x0064	0x03FD0000  	1021
0x0068	0x03FD0000  	1021
0x006C	0x03FD0000  	1021
0x0070	0x03FD0000  	1021
0x0074	0x03FD0000  	1021
0x0078	0x03FD0000  	1021
0x007C	0x03FD0000  	1021
0x0080	0x03FD0000  	1021
0x0084	0x03FD0000  	1021
0x0088	0x03FD0000  	1021
0x008C	0x03FD0000  	1021
0x0090	0x03FD0000  	1021
0x0094	0x03FD0000  	1021
0x0098	0x03FD0000  	1021
0x009C	0x03FD0000  	1021
0x00A0	0x03FD0000  	1021
0x00A4	0x03FD0000  	1021
0x00A8	0x03FD0000  	1021
0x00AC	0x03FD0000  	1021
0x00B0	0x03FD0000  	1021
0x00B4	0x03FD0000  	1021
0x00B8	0x03FD0000  	1021
0x00BC	0x03FD0000  	1021
0x00C0	0x03FD0000  	1021
0x00C4	0x03FD0000  	1021
0x00C8	0x03FD0000  	1021
0x00CC	0x03FD0000  	1021
0x00D0	0x03FD0000  	1021
0x00D4	0x03FD0000  	1021
0x00D8	0x03FD0000  	1021
0x00DC	0x03FD0000  	1021
0x00E0	0x03FD0000  	1021
0x00E4	0x03FD0000  	1021
0x00E8	0x03FD0000  	1021
0x00EC	0x03FD0000  	1021
0x00F0	0x03FD0000  	1021
0x00F4	0x03FD0000  	1021
0x00F8	0x03FD0000  	1021
0x00FC	0x03FD0000  	1021
0x0100	0x03FD0000  	1021
0x0104	0x03FD0000  	1021
0x0108	0x03FD0000  	1021
0x010C	0x03FD0000  	1021
0x0110	0x03FD0000  	1021
0x0114	0x03FD0000  	1021
0x0118	0x03FD0000  	1021
0x011C	0x03FD0000  	1021
0x0120	0x03FD0000  	1021
0x0124	0x03FD0000  	1021
0x0128	0x03FD0000  	1021
0x012C	0x03FD0000  	1021
0x0130	0x03FD0000  	1021
0x0134	0x03FD0000  	1021
0x0138	0x03FD0000  	1021
0x013C	0x03FD0000  	1021
0x0140	0x03FD0000  	1021
0x0144	0x03FD0000  	1021
0x0148	0x03FD0000  	1021
0x014C	0x03FD0000  	1021
0x0150	0x03FD0000  	1021
0x0154	0x03FD0000  	1021
0x0158	0x03FD0000  	1021
0x015C	0x03FD0000  	1021
0x0160	0x03FD0000  	1021
0x0164	0x03FD0000  	1021
0x0168	0x03FD0000  	1021
0x016C	0x03FD0000  	1021
0x0170	0x03FD0000  	1021
0x0174	0x03FD0000  	1021
0x0178	0x03FD0000  	1021
0x017C	0x03FD0000  	1021
0x0180	0x03FD0000  	1021
0x0184	0x03FD0000  	1021
0x0188	0x03FD0000  	1021
0x018C	0x03FD0000  	1021
0x0190	0x03FD0000  	1021
0x0194	0x03FD0000  	1021
; end of ____SysVT
_main:
;HEXIWEAR_Alcohol_Click.c, 211 :: 		void main()
0x1AA0	0xF000F82A  BL	6904
0x1AA4	0xF7FFFFEA  BL	6780
0x1AA8	0xF005FAE4  BL	28788
0x1AAC	0xF7FFFFF0  BL	6800
0x1AB0	0xF005FAA0  BL	28660
;HEXIWEAR_Alcohol_Click.c, 213 :: 		InitModules();
0x1AB4	0xF7FFFFB6  BL	_InitModules+0
;HEXIWEAR_Alcohol_Click.c, 215 :: 		while(1)
L_main5:
;HEXIWEAR_Alcohol_Click.c, 217 :: 		ReadSensor();
0x1AB8	0xF7FFFF9A  BL	_ReadSensor+0
;HEXIWEAR_Alcohol_Click.c, 218 :: 		CalculatePPM();
0x1ABC	0xF7FFFF46  BL	_CalculatePPM+0
;HEXIWEAR_Alcohol_Click.c, 219 :: 		DisplayAlcoholValue( floor(ppm) );
0x1AC0	0x480C    LDR	R0, [PC, #48]
0x1AC2	0xED100A00  VLDR.32	S0, [R0, #0]
0x1AC6	0xF7FEFEDB  BL	_floor+0
0x1ACA	0xEEBC0A40  VCVT.U32.F32	S0, S0
0x1ACE	0xEE100A10  VMOV	R0, S0
0x1AD2	0xB280    UXTH	R0, R0
0x1AD4	0xF7FFFEDA  BL	_DisplayAlcoholValue+0
;HEXIWEAR_Alcohol_Click.c, 220 :: 		Delay_ms(500);
0x1AD8	0xF64247FE  MOVW	R7, #11518
0x1ADC	0xF2C01731  MOVT	R7, #305
0x1AE0	0xBF00    NOP
0x1AE2	0xBF00    NOP
L_main7:
0x1AE4	0x1E7F    SUBS	R7, R7, #1
0x1AE6	0xD1FD    BNE	L_main7
0x1AE8	0xBF00    NOP
0x1AEA	0xBF00    NOP
0x1AEC	0xBF00    NOP
;HEXIWEAR_Alcohol_Click.c, 221 :: 		}
0x1AEE	0xE7E3    B	L_main5
;HEXIWEAR_Alcohol_Click.c, 222 :: 		}
L_end_main:
L__main_end_loop:
0x1AF0	0xE7FE    B	L__main_end_loop
0x1AF2	0xBF00    NOP
0x1AF4	0x00181FFF  	_ppm+0
; end of _main
___CC2DW:
;__Lib_System.c, 273 :: 		void __CC2DW() {
;__Lib_System.c, 275 :: 		L_loopDW:
L_loopDW:
;__Lib_System.c, 276 :: 		LDRB.W       R9, [R12], #1
0x187C	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System.c, 277 :: 		STRB.W       R9, [R11], #1
0x1880	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System.c, 278 :: 		CMP.W        R11, R10
0x1884	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System.c, 279 :: 		BNE L_loopDW
0x1888	0xD1F8    BNE	L_loopDW
;__Lib_System.c, 281 :: 		}
L_end___CC2DW:
0x188A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System.c, 315 :: 		void __FillZeros(){
;__Lib_System.c, 317 :: 		MOV.W R9, #0
0x1914	0xF04F0900  MOV	R9, #0
;__Lib_System.c, 318 :: 		MOV.W R12, #0
0x1918	0xF04F0C00  MOV	R12, #0
;__Lib_System.c, 319 :: 		CMP.W   SP, R10
0x191C	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System.c, 320 :: 		BGT  L_loopFZs
0x1920	0xDC04    BGT	L_loopFZs
;__Lib_System.c, 321 :: 		CMP.W   SP, R11
0x1922	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System.c, 322 :: 		BLT  L_loopFZs
0x1926	0xDB01    BLT	L_loopFZs
;__Lib_System.c, 323 :: 		MOV R12, R10
0x1928	0x46D4    MOV	R12, R10
;__Lib_System.c, 324 :: 		MOV R10, SP
0x192A	0x46EA    MOV	R10, SP
;__Lib_System.c, 325 :: 		L_loopFZs:
L_loopFZs:
;__Lib_System.c, 326 :: 		STR.W       R9, [R11], #4
0x192C	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System.c, 327 :: 		CMP.W        R11, R10
0x1930	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System.c, 328 :: 		BNE L_loopFZs
0x1934	0xD1FA    BNE	L_loopFZs
;__Lib_System.c, 329 :: 		CMP.W   R12, R10
0x1936	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System.c, 330 :: 		BLE   L_norep
0x193A	0xDD05    BLE	L_norep
;__Lib_System.c, 331 :: 		MOV   R10, R12
0x193C	0x46E2    MOV	R10, R12
;__Lib_System.c, 332 :: 		LDR   R11, [R9]
0x193E	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System.c, 333 :: 		ADD   R11, R11,#4
0x1942	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System.c, 334 :: 		B  L_loopFZs
0x1946	0xE7F1    B	L_loopFZs
;__Lib_System.c, 335 :: 		L_norep:
L_norep:
;__Lib_System.c, 337 :: 		}
L_end___FillZeros:
0x1948	0x4770    BX	LR
; end of ___FillZeros
_InitModules:
;HEXIWEAR_Alcohol_Click.c, 116 :: 		void InitModules(void)
0x1A24	0xB081    SUB	SP, SP, #4
0x1A26	0xF8CDE000  STR	LR, [SP, #0]
;HEXIWEAR_Alcohol_Click.c, 121 :: 		OLED_Init();
0x1A2A	0xF7FFFC6B  BL	_OLED_Init+0
;HEXIWEAR_Alcohol_Click.c, 122 :: 		OLED_DrawImage(&alcohol_bmp, 0, 0);
0x1A2E	0x4810    LDR	R0, [PC, #64]
0x1A30	0x2200    MOVS	R2, #0
0x1A32	0x2100    MOVS	R1, #0
0x1A34	0xF7FFFE70  BL	_OLED_DrawImage+0
;HEXIWEAR_Alcohol_Click.c, 124 :: 		OLED_SetFont( guiFont_Tahoma_8_Regular, OLED_COLOR_BLACK, 0 );
0x1A38	0x480E    LDR	R0, [PC, #56]
0x1A3A	0x2200    MOVS	R2, #0
0x1A3C	0xF2400100  MOVW	R1, #0
0x1A40	0xF7FFFE12  BL	_OLED_SetFont+0
;HEXIWEAR_Alcohol_Click.c, 125 :: 		OLED_WriteText( ppmText, 25, 75 );
0x1A44	0x224B    MOVS	R2, #75
0x1A46	0x2119    MOVS	R1, #25
0x1A48	0x480B    LDR	R0, [PC, #44]
0x1A4A	0xF7FFFEED  BL	_OLED_WriteText+0
;HEXIWEAR_Alcohol_Click.c, 127 :: 		ADC0_Init();
0x1A4E	0xF7FFFC49  BL	_ADC0_Init+0
;HEXIWEAR_Alcohol_Click.c, 130 :: 		Delay_ms(100);
0x1A52	0xF64007FE  MOVW	R7, #2302
0x1A56	0xF2C0073D  MOVT	R7, #61
0x1A5A	0xBF00    NOP
0x1A5C	0xBF00    NOP
L_InitModules0:
0x1A5E	0x1E7F    SUBS	R7, R7, #1
0x1A60	0xD1FD    BNE	L_InitModules0
0x1A62	0xBF00    NOP
0x1A64	0xBF00    NOP
0x1A66	0xBF00    NOP
;HEXIWEAR_Alcohol_Click.c, 131 :: 		}
L_end_InitModules:
0x1A68	0xF8DDE000  LDR	LR, [SP, #0]
0x1A6C	0xB001    ADD	SP, SP, #4
0x1A6E	0x4770    BX	LR
0x1A70	0x20400000  	_alcohol_bmp+0
0x1A74	0x68460000  	_guiFont_Tahoma_8_Regular+0
0x1A78	0x00001FFF  	HEXIWEAR_Alcohol_Click_ppmText+0
; end of _InitModules
_OLED_Init:
;OLED_driver.c, 136 :: 		oled_status_t OLED_Init(void)
0x1304	0xB081    SUB	SP, SP, #4
0x1306	0xF8CDE000  STR	LR, [SP, #0]
;OLED_driver.c, 138 :: 		oled_text_properties.alignParam = OLED_TEXT_ALIGN_CENTER;
0x130A	0x2103    MOVS	R1, #3
0x130C	0x48A2    LDR	R0, [PC, #648]
0x130E	0x7001    STRB	R1, [R0, #0]
;OLED_driver.c, 139 :: 		oled_text_properties.background = NULL;
0x1310	0x2100    MOVS	R1, #0
0x1312	0x48A2    LDR	R0, [PC, #648]
0x1314	0x6001    STR	R1, [R0, #0]
;OLED_driver.c, 141 :: 		GPIO_Digital_Output(&PTC_PDOR, _GPIO_PINMASK_13);
0x1316	0xF44F5100  MOV	R1, #8192
0x131A	0x48A1    LDR	R0, [PC, #644]
0x131C	0xF7FFFE06  BL	_GPIO_Digital_Output+0
;OLED_driver.c, 142 :: 		GPIO_Digital_Output(&PTD_PDOR, _GPIO_PINMASK_15);
0x1320	0xF44F4100  MOV	R1, #32768
0x1324	0x489F    LDR	R0, [PC, #636]
0x1326	0xF7FFFE01  BL	_GPIO_Digital_Output+0
;OLED_driver.c, 143 :: 		GPIO_Digital_Output(&PTE_PDOR, _GPIO_PINMASK_6);
0x132A	0xF04F0140  MOV	R1, #64
0x132E	0x489E    LDR	R0, [PC, #632]
0x1330	0xF7FFFDFC  BL	_GPIO_Digital_Output+0
;OLED_driver.c, 144 :: 		GPIO_Digital_Output(&PTB_PDOR, _GPIO_PINMASK_20);
0x1334	0xF44F1180  MOV	R1, #1048576
0x1338	0x489C    LDR	R0, [PC, #624]
0x133A	0xF7FFFDF7  BL	_GPIO_Digital_Output+0
;OLED_driver.c, 147 :: 		_SPI_CFG_CLK_IDLE_HIGH | _SPI_CFG_CLK_PHASE_CAPT_LEADING | _SPI_CFG_MSB_FIRST, &_GPIO_Module_SPI2_PB21_23_22);
0x133E	0x4A9C    LDR	R2, [PC, #624]
0x1340	0x499C    LDR	R1, [PC, #624]
;OLED_driver.c, 146 :: 		SPI2_Init_Advanced(15000000, _SPI_CFG_MASTER | _SPI_CFG_SELECT_CTAR0 | _SPI_CFG_FRAME_SIZE_8BITS |
0x1342	0x489D    LDR	R0, [PC, #628]
;OLED_driver.c, 147 :: 		_SPI_CFG_CLK_IDLE_HIGH | _SPI_CFG_CLK_PHASE_CAPT_LEADING | _SPI_CFG_MSB_FIRST, &_GPIO_Module_SPI2_PB21_23_22);
0x1344	0xF7FFFDFE  BL	_SPI2_Init_Advanced+0
;OLED_driver.c, 152 :: 		OLED_PowerOff();
0x1348	0xF7FFFE12  BL	_OLED_PowerOff+0
;OLED_driver.c, 153 :: 		Delay_1ms();
0x134C	0xF7FFFDE2  BL	_Delay_1ms+0
;OLED_driver.c, 154 :: 		OLED_RST_bit = 0;
0x1350	0x2100    MOVS	R1, #0
0x1352	0xB249    SXTB	R1, R1
0x1354	0x4899    LDR	R0, [PC, #612]
0x1356	0x6001    STR	R1, [R0, #0]
;OLED_driver.c, 155 :: 		Delay_1ms();
0x1358	0xF7FFFDDC  BL	_Delay_1ms+0
;OLED_driver.c, 156 :: 		OLED_RST_bit = 1;
0x135C	0x2101    MOVS	R1, #1
0x135E	0xB249    SXTB	R1, R1
0x1360	0x4896    LDR	R0, [PC, #600]
0x1362	0x6001    STR	R1, [R0, #0]
;OLED_driver.c, 157 :: 		Delay_1ms();
0x1364	0xF7FFFDD6  BL	_Delay_1ms+0
;OLED_driver.c, 158 :: 		OLED_PowerOn();
0x1368	0xF7FFFD92  BL	_OLED_PowerOn+0
;OLED_driver.c, 160 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_CMD_LOCK, FIRST_BYTE ) )
0x136C	0x2101    MOVS	R1, #1
0x136E	0x20FD    MOVS	R0, #253
0x1370	0xF7FFFD96  BL	_OLED_SendCmd+0
0x1374	0xB108    CBZ	R0, L_OLED_Init2
;OLED_driver.c, 162 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1376	0x2002    MOVS	R0, #2
0x1378	0xE10A    B	L_end_OLED_Init
;OLED_driver.c, 163 :: 		}
L_OLED_Init2:
;OLED_driver.c, 164 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_UNLOCK, OTHER_BYTE ) )
0x137A	0x2100    MOVS	R1, #0
0x137C	0x2012    MOVS	R0, #18
0x137E	0xF7FFFD8F  BL	_OLED_SendCmd+0
0x1382	0xB108    CBZ	R0, L_OLED_Init3
;OLED_driver.c, 166 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1384	0x2002    MOVS	R0, #2
0x1386	0xE103    B	L_end_OLED_Init
;OLED_driver.c, 167 :: 		}
L_OLED_Init3:
;OLED_driver.c, 169 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_CMD_LOCK, FIRST_BYTE ) )
0x1388	0x2101    MOVS	R1, #1
0x138A	0x20FD    MOVS	R0, #253
0x138C	0xF7FFFD88  BL	_OLED_SendCmd+0
0x1390	0xB108    CBZ	R0, L_OLED_Init4
;OLED_driver.c, 171 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1392	0x2002    MOVS	R0, #2
0x1394	0xE0FC    B	L_end_OLED_Init
;OLED_driver.c, 172 :: 		}
L_OLED_Init4:
;OLED_driver.c, 173 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_ACC_TO_CMD_YES, OTHER_BYTE ) )
0x1396	0x2100    MOVS	R1, #0
0x1398	0x20B1    MOVS	R0, #177
0x139A	0xF7FFFD81  BL	_OLED_SendCmd+0
0x139E	0xB108    CBZ	R0, L_OLED_Init5
;OLED_driver.c, 175 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13A0	0x2002    MOVS	R0, #2
0x13A2	0xE0F5    B	L_end_OLED_Init
;OLED_driver.c, 176 :: 		}
L_OLED_Init5:
;OLED_driver.c, 178 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_DISPLAYOFF, FIRST_BYTE ) )
0x13A4	0x2101    MOVS	R1, #1
0x13A6	0x20AE    MOVS	R0, #174
0x13A8	0xF7FFFD7A  BL	_OLED_SendCmd+0
0x13AC	0xB108    CBZ	R0, L_OLED_Init6
;OLED_driver.c, 180 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13AE	0x2002    MOVS	R0, #2
0x13B0	0xE0EE    B	L_end_OLED_Init
;OLED_driver.c, 181 :: 		}
L_OLED_Init6:
;OLED_driver.c, 183 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_OSC_FREQ_AND_CLOCKDIV, FIRST_BYTE ) )
0x13B2	0x2101    MOVS	R1, #1
0x13B4	0x20B3    MOVS	R0, #179
0x13B6	0xF7FFFD73  BL	_OLED_SendCmd+0
0x13BA	0xB108    CBZ	R0, L_OLED_Init7
;OLED_driver.c, 185 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13BC	0x2002    MOVS	R0, #2
0x13BE	0xE0E7    B	L_end_OLED_Init
;OLED_driver.c, 186 :: 		}
L_OLED_Init7:
;OLED_driver.c, 187 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0xF1, OTHER_BYTE ) )
0x13C0	0x2100    MOVS	R1, #0
0x13C2	0x20F1    MOVS	R0, #241
0x13C4	0xF7FFFD6C  BL	_OLED_SendCmd+0
0x13C8	0xB108    CBZ	R0, L_OLED_Init8
;OLED_driver.c, 189 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13CA	0x2002    MOVS	R0, #2
0x13CC	0xE0E0    B	L_end_OLED_Init
;OLED_driver.c, 190 :: 		}
L_OLED_Init8:
;OLED_driver.c, 192 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_MUX_RATIO, FIRST_BYTE ) )
0x13CE	0x2101    MOVS	R1, #1
0x13D0	0x20CA    MOVS	R0, #202
0x13D2	0xF7FFFD65  BL	_OLED_SendCmd+0
0x13D6	0xB108    CBZ	R0, L_OLED_Init9
;OLED_driver.c, 194 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13D8	0x2002    MOVS	R0, #2
0x13DA	0xE0D9    B	L_end_OLED_Init
;OLED_driver.c, 195 :: 		}
L_OLED_Init9:
;OLED_driver.c, 196 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x5F, OTHER_BYTE ) )
0x13DC	0x2100    MOVS	R1, #0
0x13DE	0x205F    MOVS	R0, #95
0x13E0	0xF7FFFD5E  BL	_OLED_SendCmd+0
0x13E4	0xB108    CBZ	R0, L_OLED_Init10
;OLED_driver.c, 198 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13E6	0x2002    MOVS	R0, #2
0x13E8	0xE0D2    B	L_end_OLED_Init
;OLED_driver.c, 199 :: 		}
L_OLED_Init10:
;OLED_driver.c, 201 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_REMAP, FIRST_BYTE ) )
0x13EA	0x2101    MOVS	R1, #1
0x13EC	0x20A0    MOVS	R0, #160
0x13EE	0xF7FFFD57  BL	_OLED_SendCmd+0
0x13F2	0xB108    CBZ	R0, L_OLED_Init11
;OLED_driver.c, 203 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x13F4	0x2002    MOVS	R0, #2
0x13F6	0xE0CB    B	L_end_OLED_Init
;OLED_driver.c, 204 :: 		}
L_OLED_Init11:
;OLED_driver.c, 205 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_REMAP_SETTINGS, OTHER_BYTE ) )
0x13F8	0x2100    MOVS	R1, #0
0x13FA	0x2060    MOVS	R0, #96
0x13FC	0xF7FFFD50  BL	_OLED_SendCmd+0
0x1400	0xB108    CBZ	R0, L_OLED_Init12
;OLED_driver.c, 207 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1402	0x2002    MOVS	R0, #2
0x1404	0xE0C4    B	L_end_OLED_Init
;OLED_driver.c, 208 :: 		}
L_OLED_Init12:
;OLED_driver.c, 210 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_COLUMN, FIRST_BYTE ) )
0x1406	0x2101    MOVS	R1, #1
0x1408	0x2015    MOVS	R0, #21
0x140A	0xF7FFFD49  BL	_OLED_SendCmd+0
0x140E	0xB108    CBZ	R0, L_OLED_Init13
;OLED_driver.c, 212 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1410	0x2002    MOVS	R0, #2
0x1412	0xE0BD    B	L_end_OLED_Init
;OLED_driver.c, 213 :: 		}
L_OLED_Init13:
;OLED_driver.c, 214 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x00, OTHER_BYTE ) )
0x1414	0x2100    MOVS	R1, #0
0x1416	0x2000    MOVS	R0, #0
0x1418	0xF7FFFD42  BL	_OLED_SendCmd+0
0x141C	0xB108    CBZ	R0, L_OLED_Init14
;OLED_driver.c, 216 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x141E	0x2002    MOVS	R0, #2
0x1420	0xE0B6    B	L_end_OLED_Init
;OLED_driver.c, 217 :: 		}
L_OLED_Init14:
;OLED_driver.c, 218 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x5F, OTHER_BYTE ) )
0x1422	0x2100    MOVS	R1, #0
0x1424	0x205F    MOVS	R0, #95
0x1426	0xF7FFFD3B  BL	_OLED_SendCmd+0
0x142A	0xB108    CBZ	R0, L_OLED_Init15
;OLED_driver.c, 220 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x142C	0x2002    MOVS	R0, #2
0x142E	0xE0AF    B	L_end_OLED_Init
;OLED_driver.c, 221 :: 		}
L_OLED_Init15:
;OLED_driver.c, 223 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SET_ROW, FIRST_BYTE ) )
0x1430	0x2101    MOVS	R1, #1
0x1432	0x2075    MOVS	R0, #117
0x1434	0xF7FFFD34  BL	_OLED_SendCmd+0
0x1438	0xB108    CBZ	R0, L_OLED_Init16
;OLED_driver.c, 225 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x143A	0x2002    MOVS	R0, #2
0x143C	0xE0A8    B	L_end_OLED_Init
;OLED_driver.c, 226 :: 		}
L_OLED_Init16:
;OLED_driver.c, 227 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x00, OTHER_BYTE ) )
0x143E	0x2100    MOVS	R1, #0
0x1440	0x2000    MOVS	R0, #0
0x1442	0xF7FFFD2D  BL	_OLED_SendCmd+0
0x1446	0xB108    CBZ	R0, L_OLED_Init17
;OLED_driver.c, 229 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1448	0x2002    MOVS	R0, #2
0x144A	0xE0A1    B	L_end_OLED_Init
;OLED_driver.c, 230 :: 		}
L_OLED_Init17:
;OLED_driver.c, 231 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x5F, OTHER_BYTE ) )
0x144C	0x2100    MOVS	R1, #0
0x144E	0x205F    MOVS	R0, #95
0x1450	0xF7FFFD26  BL	_OLED_SendCmd+0
0x1454	0xB108    CBZ	R0, L_OLED_Init18
;OLED_driver.c, 233 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1456	0x2002    MOVS	R0, #2
0x1458	0xE09A    B	L_end_OLED_Init
;OLED_driver.c, 234 :: 		}
L_OLED_Init18:
;OLED_driver.c, 236 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_STARTLINE, FIRST_BYTE ) )
0x145A	0x2101    MOVS	R1, #1
0x145C	0x20A1    MOVS	R0, #161
0x145E	0xF7FFFD1F  BL	_OLED_SendCmd+0
0x1462	0xB108    CBZ	R0, L_OLED_Init19
;OLED_driver.c, 238 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1464	0x2002    MOVS	R0, #2
0x1466	0xE093    B	L_end_OLED_Init
;OLED_driver.c, 239 :: 		}
L_OLED_Init19:
;OLED_driver.c, 240 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x80, OTHER_BYTE ) )
0x1468	0x2100    MOVS	R1, #0
0x146A	0x2080    MOVS	R0, #128
0x146C	0xF7FFFD18  BL	_OLED_SendCmd+0
0x1470	0xB108    CBZ	R0, L_OLED_Init20
;OLED_driver.c, 242 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1472	0x2002    MOVS	R0, #2
0x1474	0xE08C    B	L_end_OLED_Init
;OLED_driver.c, 243 :: 		}
L_OLED_Init20:
;OLED_driver.c, 245 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_DISPLAYOFFSET, FIRST_BYTE ) )
0x1476	0x2101    MOVS	R1, #1
0x1478	0x20A2    MOVS	R0, #162
0x147A	0xF7FFFD11  BL	_OLED_SendCmd+0
0x147E	0xB108    CBZ	R0, L_OLED_Init21
;OLED_driver.c, 247 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1480	0x2002    MOVS	R0, #2
0x1482	0xE085    B	L_end_OLED_Init
;OLED_driver.c, 248 :: 		}
L_OLED_Init21:
;OLED_driver.c, 249 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x60, OTHER_BYTE ) )
0x1484	0x2100    MOVS	R1, #0
0x1486	0x2060    MOVS	R0, #96
0x1488	0xF7FFFD0A  BL	_OLED_SendCmd+0
0x148C	0xB108    CBZ	R0, L_OLED_Init22
;OLED_driver.c, 251 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x148E	0x2002    MOVS	R0, #2
0x1490	0xE07E    B	L_end_OLED_Init
;OLED_driver.c, 252 :: 		}
L_OLED_Init22:
;OLED_driver.c, 254 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_PRECHARGE, FIRST_BYTE ) )
0x1492	0x2101    MOVS	R1, #1
0x1494	0x20B1    MOVS	R0, #177
0x1496	0xF7FFFD03  BL	_OLED_SendCmd+0
0x149A	0xB108    CBZ	R0, L_OLED_Init23
;OLED_driver.c, 256 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x149C	0x2002    MOVS	R0, #2
0x149E	0xE077    B	L_end_OLED_Init
;OLED_driver.c, 257 :: 		}
L_OLED_Init23:
;OLED_driver.c, 258 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x32, FIRST_BYTE ) )
0x14A0	0x2101    MOVS	R1, #1
0x14A2	0x2032    MOVS	R0, #50
0x14A4	0xF7FFFCFC  BL	_OLED_SendCmd+0
0x14A8	0xB108    CBZ	R0, L_OLED_Init24
;OLED_driver.c, 260 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14AA	0x2002    MOVS	R0, #2
0x14AC	0xE070    B	L_end_OLED_Init
;OLED_driver.c, 261 :: 		}
L_OLED_Init24:
;OLED_driver.c, 263 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_VCOMH, FIRST_BYTE ) )
0x14AE	0x2101    MOVS	R1, #1
0x14B0	0x20BE    MOVS	R0, #190
0x14B2	0xF7FFFCF5  BL	_OLED_SendCmd+0
0x14B6	0xB108    CBZ	R0, L_OLED_Init25
;OLED_driver.c, 265 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14B8	0x2002    MOVS	R0, #2
0x14BA	0xE069    B	L_end_OLED_Init
;OLED_driver.c, 266 :: 		}
L_OLED_Init25:
;OLED_driver.c, 267 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x05, FIRST_BYTE ) )
0x14BC	0x2101    MOVS	R1, #1
0x14BE	0x2005    MOVS	R0, #5
0x14C0	0xF7FFFCEE  BL	_OLED_SendCmd+0
0x14C4	0xB108    CBZ	R0, L_OLED_Init26
;OLED_driver.c, 269 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14C6	0x2002    MOVS	R0, #2
0x14C8	0xE062    B	L_end_OLED_Init
;OLED_driver.c, 270 :: 		}
L_OLED_Init26:
;OLED_driver.c, 272 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_NORMALDISPLAY, FIRST_BYTE ) )
0x14CA	0x2101    MOVS	R1, #1
0x14CC	0x20A6    MOVS	R0, #166
0x14CE	0xF7FFFCE7  BL	_OLED_SendCmd+0
0x14D2	0xB108    CBZ	R0, L_OLED_Init27
;OLED_driver.c, 274 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14D4	0x2002    MOVS	R0, #2
0x14D6	0xE05B    B	L_end_OLED_Init
;OLED_driver.c, 275 :: 		}
L_OLED_Init27:
;OLED_driver.c, 277 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_CONTRASTABC, FIRST_BYTE ) )
0x14D8	0x2101    MOVS	R1, #1
0x14DA	0x20C1    MOVS	R0, #193
0x14DC	0xF7FFFCE0  BL	_OLED_SendCmd+0
0x14E0	0xB108    CBZ	R0, L_OLED_Init28
;OLED_driver.c, 279 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14E2	0x2002    MOVS	R0, #2
0x14E4	0xE054    B	L_end_OLED_Init
;OLED_driver.c, 280 :: 		}
L_OLED_Init28:
;OLED_driver.c, 281 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x8A, OTHER_BYTE ) )
0x14E6	0x2100    MOVS	R1, #0
0x14E8	0x208A    MOVS	R0, #138
0x14EA	0xF7FFFCD9  BL	_OLED_SendCmd+0
0x14EE	0xB108    CBZ	R0, L_OLED_Init29
;OLED_driver.c, 283 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14F0	0x2002    MOVS	R0, #2
0x14F2	0xE04D    B	L_end_OLED_Init
;OLED_driver.c, 284 :: 		}
L_OLED_Init29:
;OLED_driver.c, 285 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x51, OTHER_BYTE ) )
0x14F4	0x2100    MOVS	R1, #0
0x14F6	0x2051    MOVS	R0, #81
0x14F8	0xF7FFFCD2  BL	_OLED_SendCmd+0
0x14FC	0xB108    CBZ	R0, L_OLED_Init30
;OLED_driver.c, 287 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x14FE	0x2002    MOVS	R0, #2
0x1500	0xE046    B	L_end_OLED_Init
;OLED_driver.c, 288 :: 		}
L_OLED_Init30:
;OLED_driver.c, 289 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x8A, OTHER_BYTE ) )
0x1502	0x2100    MOVS	R1, #0
0x1504	0x208A    MOVS	R0, #138
0x1506	0xF7FFFCCB  BL	_OLED_SendCmd+0
0x150A	0xB108    CBZ	R0, L_OLED_Init31
;OLED_driver.c, 291 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x150C	0x2002    MOVS	R0, #2
0x150E	0xE03F    B	L_end_OLED_Init
;OLED_driver.c, 292 :: 		}
L_OLED_Init31:
;OLED_driver.c, 294 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_CONTRASTMASTER, FIRST_BYTE ) )
0x1510	0x2101    MOVS	R1, #1
0x1512	0x20C7    MOVS	R0, #199
0x1514	0xF7FFFCC4  BL	_OLED_SendCmd+0
0x1518	0xB108    CBZ	R0, L_OLED_Init32
;OLED_driver.c, 296 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x151A	0x2002    MOVS	R0, #2
0x151C	0xE038    B	L_end_OLED_Init
;OLED_driver.c, 297 :: 		}
L_OLED_Init32:
;OLED_driver.c, 298 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0xCF, OTHER_BYTE ) )
0x151E	0x2100    MOVS	R1, #0
0x1520	0x20CF    MOVS	R0, #207
0x1522	0xF7FFFCBD  BL	_OLED_SendCmd+0
0x1526	0xB108    CBZ	R0, L_OLED_Init33
;OLED_driver.c, 300 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1528	0x2002    MOVS	R0, #2
0x152A	0xE031    B	L_end_OLED_Init
;OLED_driver.c, 301 :: 		}
L_OLED_Init33:
;OLED_driver.c, 303 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_SETVSL, FIRST_BYTE ) )
0x152C	0x2101    MOVS	R1, #1
0x152E	0x20B4    MOVS	R0, #180
0x1530	0xF7FFFCB6  BL	_OLED_SendCmd+0
0x1534	0xB108    CBZ	R0, L_OLED_Init34
;OLED_driver.c, 305 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1536	0x2002    MOVS	R0, #2
0x1538	0xE02A    B	L_end_OLED_Init
;OLED_driver.c, 306 :: 		}
L_OLED_Init34:
;OLED_driver.c, 307 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0xA0, OTHER_BYTE ) )
0x153A	0x2100    MOVS	R1, #0
0x153C	0x20A0    MOVS	R0, #160
0x153E	0xF7FFFCAF  BL	_OLED_SendCmd+0
0x1542	0xB108    CBZ	R0, L_OLED_Init35
;OLED_driver.c, 309 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1544	0x2002    MOVS	R0, #2
0x1546	0xE023    B	L_end_OLED_Init
;OLED_driver.c, 310 :: 		}
L_OLED_Init35:
;OLED_driver.c, 311 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0xB5, OTHER_BYTE ) )
0x1548	0x2100    MOVS	R1, #0
0x154A	0x20B5    MOVS	R0, #181
0x154C	0xF7FFFCA8  BL	_OLED_SendCmd+0
0x1550	0xB108    CBZ	R0, L_OLED_Init36
;OLED_driver.c, 313 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1552	0x2002    MOVS	R0, #2
0x1554	0xE01C    B	L_end_OLED_Init
;OLED_driver.c, 314 :: 		}
L_OLED_Init36:
;OLED_driver.c, 315 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x55, OTHER_BYTE ) )
0x1556	0x2100    MOVS	R1, #0
0x1558	0x2055    MOVS	R0, #85
0x155A	0xF7FFFCA1  BL	_OLED_SendCmd+0
0x155E	0xB108    CBZ	R0, L_OLED_Init37
;OLED_driver.c, 317 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x1560	0x2002    MOVS	R0, #2
0x1562	0xE015    B	L_end_OLED_Init
;OLED_driver.c, 318 :: 		}
L_OLED_Init37:
;OLED_driver.c, 320 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_PRECHARGE2, FIRST_BYTE ) )
0x1564	0x2101    MOVS	R1, #1
0x1566	0x20B6    MOVS	R0, #182
0x1568	0xF7FFFC9A  BL	_OLED_SendCmd+0
0x156C	0xB108    CBZ	R0, L_OLED_Init38
;OLED_driver.c, 322 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x156E	0x2002    MOVS	R0, #2
0x1570	0xE00E    B	L_end_OLED_Init
;OLED_driver.c, 323 :: 		}
L_OLED_Init38:
;OLED_driver.c, 324 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( 0x01, OTHER_BYTE ) )
0x1572	0x2100    MOVS	R1, #0
0x1574	0x2001    MOVS	R0, #1
0x1576	0xF7FFFC93  BL	_OLED_SendCmd+0
0x157A	0xB108    CBZ	R0, L_OLED_Init39
;OLED_driver.c, 326 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x157C	0x2002    MOVS	R0, #2
0x157E	0xE007    B	L_end_OLED_Init
;OLED_driver.c, 327 :: 		}
L_OLED_Init39:
;OLED_driver.c, 329 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_DISPLAYON, FIRST_BYTE ) )
0x1580	0x2101    MOVS	R1, #1
0x1582	0x20AF    MOVS	R0, #175
0x1584	0xF7FFFC8C  BL	_OLED_SendCmd+0
0x1588	0xB108    CBZ	R0, L_OLED_Init40
;OLED_driver.c, 331 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x158A	0x2002    MOVS	R0, #2
0x158C	0xE000    B	L_end_OLED_Init
;OLED_driver.c, 332 :: 		}
L_OLED_Init40:
;OLED_driver.c, 334 :: 		return OLED_STATUS_SUCCESS;
0x158E	0x2000    MOVS	R0, #0
;OLED_driver.c, 335 :: 		}
L_end_OLED_Init:
0x1590	0xF8DDE000  LDR	LR, [SP, #0]
0x1594	0xB001    ADD	SP, SP, #4
0x1596	0x4770    BX	LR
0x1598	0x483A1FFF  	OLED_driver_oled_text_properties+6
0x159C	0x483C1FFF  	OLED_driver_oled_text_properties+8
0x15A0	0xF080400F  	PTC_PDOR+0
0x15A4	0xF0C0400F  	PTD_PDOR+0
0x15A8	0xF100400F  	PTE_PDOR+0
0x15AC	0xF040400F  	PTB_PDOR+0
0x15B0	0x6ED80000  	__GPIO_Module_SPI2_PB21_23_22+0
0x15B4	0x00078400  	#-2080374777
0x15B8	0xE1C000E4  	#15000000
0x15BC	0x201843FE  	PTE_PDOR+0
; end of _OLED_Init
_GPIO_Digital_Output:
;__Lib_GPIO.c, 246 :: 		void GPIO_Digital_Output(unsigned long *port, unsigned long pinMask) {
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0F2C	0xB081    SUB	SP, SP, #4
0x0F2E	0xF8CDE000  STR	LR, [SP, #0]
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO.c, 247 :: 		GPIO_Config(port, pinMask, _GPIO_CFG_DIGITAL_OUTPUT);
0x0F32	0x4A03    LDR	R2, [PC, #12]
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0F34	0xF7FFFC86  BL	_GPIO_Config+0
;__Lib_GPIO.c, 248 :: 		}
L_end_GPIO_Digital_Output:
0x0F38	0xF8DDE000  LDR	LR, [SP, #0]
0x0F3C	0xB001    ADD	SP, SP, #4
0x0F3E	0x4770    BX	LR
0x0F40	0x01040004  	#262404
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO.c, 222 :: 		void GPIO_Config(unsigned long *port, unsigned long pinMask, unsigned long config){
; config start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0844	0xB081    SUB	SP, SP, #4
0x0846	0xF8CDE000  STR	LR, [SP, #0]
0x084A	0x4680    MOV	R8, R0
; config end address is: 8 (R2)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 32 (R8)
; pinMask start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_GPIO.c, 224 :: 		if ((unsigned long)port < _GPIO_PORT_CTRL_BASE && (unsigned long)port > (_GPIO_PORT_CTRL_BASE + 0x114)) {
0x084C	0x4B0A    LDR	R3, [PC, #40]
0x084E	0x4598    CMP	R8, R3
0x0850	0xD203    BCS	L__GPIO_Config26
0x0852	0x4B0A    LDR	R3, [PC, #40]
0x0854	0x4598    CMP	R8, R3
0x0856	0xD900    BLS	L__GPIO_Config25
; port end address is: 32 (R8)
; pinMask end address is: 4 (R1)
; config end address is: 8 (R2)
L__GPIO_Config24:
;__Lib_GPIO.c, 225 :: 		return;
0x0858	0xE009    B	L_end_GPIO_Config
;__Lib_GPIO.c, 224 :: 		if ((unsigned long)port < _GPIO_PORT_CTRL_BASE && (unsigned long)port > (_GPIO_PORT_CTRL_BASE + 0x114)) {
L__GPIO_Config26:
; config start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 32 (R8)
L__GPIO_Config25:
;__Lib_GPIO.c, 228 :: 		if (((unsigned long)port - _GPIO_PORT_CTRL_BASE) % _GPIO_PORT_CTRL_OFFSET != 0) {
0x085A	0x4B07    LDR	R3, [PC, #28]
0x085C	0xEBA80303  SUB	R3, R8, R3, LSL #0
0x0860	0xF003033F  AND	R3, R3, #63
0x0864	0xB103    CBZ	R3, L_GPIO_Config17
; port end address is: 32 (R8)
; pinMask end address is: 4 (R1)
; config end address is: 8 (R2)
;__Lib_GPIO.c, 229 :: 		return;
0x0866	0xE002    B	L_end_GPIO_Config
;__Lib_GPIO.c, 230 :: 		}
L_GPIO_Config17:
;__Lib_GPIO.c, 231 :: 		GPIO_HAL_Config(port, pinMask, config);
; config start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 32 (R8)
; config end address is: 8 (R2)
; pinMask end address is: 4 (R1)
0x0868	0x4640    MOV	R0, R8
; port end address is: 32 (R8)
0x086A	0xF7FFFE39  BL	__Lib_GPIO_GPIO_HAL_Config+0
;__Lib_GPIO.c, 232 :: 		}
L_end_GPIO_Config:
0x086E	0xF8DDE000  LDR	LR, [SP, #0]
0x0872	0xB001    ADD	SP, SP, #4
0x0874	0x4770    BX	LR
0x0876	0xBF00    NOP
0x0878	0xF000400F  	#1074786304
0x087C	0xF114400F  	#1074786580
; end of _GPIO_Config
__Lib_GPIO_GPIO_HAL_Config:
;__Lib_GPIO.c, 140 :: 		static void GPIO_HAL_Config(unsigned long *port, unsigned long pinMask, unsigned long config) {
; config start address is: 8 (R2)
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x04E0	0xB083    SUB	SP, SP, #12
0x04E2	0xF8CDE000  STR	LR, [SP, #0]
0x04E6	0x4606    MOV	R6, R0
0x04E8	0x460C    MOV	R4, R1
0x04EA	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 24 (R6)
; pinMask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO.c, 142 :: 		pinNum = 0,
;__Lib_GPIO.c, 143 :: 		pos    = 0,
;__Lib_GPIO.c, 144 :: 		currentPin = 0,
;__Lib_GPIO.c, 145 :: 		portNum = 0;
;__Lib_GPIO.c, 151 :: 		GPIO_HAL_Clk_Enable(port);
0x04EC	0x4630    MOV	R0, R6
0x04EE	0xF7FFFE59  BL	__Lib_GPIO_GPIO_HAL_Clk_Enable+0
;__Lib_GPIO.c, 153 :: 		portNum = ((unsigned long)port & _GPIO_PORT_CTRL_MASK) / _GPIO_PORT_CTRL_OFFSET;
0x04F2	0xF24013FF  MOVW	R3, #511
0x04F6	0xEA060003  AND	R0, R6, R3, LSL #0
; port end address is: 24 (R6)
0x04FA	0x0980    LSRS	R0, R0, #6
; portNum start address is: 0 (R0)
;__Lib_GPIO.c, 156 :: 		for (pinNum = 0; pinNum < 32; pinNum++) {
; pinNum start address is: 24 (R6)
0x04FC	0x2600    MOVS	R6, #0
; pinMask end address is: 16 (R4)
; config end address is: 20 (R5)
; pinNum end address is: 24 (R6)
0x04FE	0x4622    MOV	R2, R4
0x0500	0x4629    MOV	R1, R5
L___Lib_GPIO_GPIO_HAL_Config0:
; pinNum start address is: 24 (R6)
; pinMask start address is: 8 (R2)
; config start address is: 4 (R1)
; portNum start address is: 0 (R0)
; portNum end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; pinMask start address is: 8 (R2)
; pinMask end address is: 8 (R2)
0x0502	0x2E20    CMP	R6, #32
0x0504	0xD239    BCS	L___Lib_GPIO_GPIO_HAL_Config1
; portNum end address is: 0 (R0)
; config end address is: 4 (R1)
; pinMask end address is: 8 (R2)
;__Lib_GPIO.c, 157 :: 		pos = 1ul << pinNum;
; pinMask start address is: 8 (R2)
; config start address is: 4 (R1)
; portNum start address is: 0 (R0)
0x0506	0xF04F0301  MOV	R3, #1
0x050A	0xFA03F406  LSL	R4, R3, R6
;__Lib_GPIO.c, 159 :: 		currentPin = pinMask & pos;
0x050E	0xEA020304  AND	R3, R2, R4, LSL #0
; currentPin start address is: 28 (R7)
0x0512	0x461F    MOV	R7, R3
;__Lib_GPIO.c, 161 :: 		if (currentPin == pos) {
0x0514	0x42A3    CMP	R3, R4
0x0516	0xD12E    BNE	L___Lib_GPIO_GPIO_HAL_Config3
;__Lib_GPIO.c, 163 :: 		pinCtrl = (unsigned long*)(_PIN_CTRL_BASE + portNum * _PIN_CTRL_OFFSET + pinNum * 4);
0x0518	0x0304    LSLS	R4, R0, #12
0x051A	0x4B1A    LDR	R3, [PC, #104]
0x051C	0x191C    ADDS	R4, R3, R4
0x051E	0x00B3    LSLS	R3, R6, #2
0x0520	0x18E5    ADDS	R5, R4, R3
0x0522	0x9501    STR	R5, [SP, #4]
;__Lib_GPIO.c, 166 :: 		*pinCtrl &= 0xFFFF0000;
0x0524	0x682C    LDR	R4, [R5, #0]
0x0526	0x4B18    LDR	R3, [PC, #96]
0x0528	0xEA040303  AND	R3, R4, R3, LSL #0
0x052C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO.c, 167 :: 		*pinCtrl |= (config & 0xFFFFul);
0x052E	0x4B17    LDR	R3, [PC, #92]
0x0530	0xEA010403  AND	R4, R1, R3, LSL #0
0x0534	0x9B01    LDR	R3, [SP, #4]
0x0536	0x681B    LDR	R3, [R3, #0]
0x0538	0xEA430404  ORR	R4, R3, R4, LSL #0
0x053C	0x9B01    LDR	R3, [SP, #4]
0x053E	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO.c, 169 :: 		if ((config & _GPIO_CFG_MODE_ANALOG) != _GPIO_CFG_MODE_ANALOG){
0x0540	0xF4013380  AND	R3, R1, #65536
0x0544	0xF5B33F80  CMP	R3, #65536
0x0548	0xD015    BEQ	L___Lib_GPIO_GPIO_HAL_Config4
;__Lib_GPIO.c, 171 :: 		gpioCtrl = (unsigned long*)(_GPIO_PORT_CTRL_BASE + portNum * _GPIO_PORT_CTRL_OFFSET) + _GPIO_PORT_PDDR_OFFSET;
0x054A	0x0184    LSLS	R4, R0, #6
0x054C	0x4B10    LDR	R3, [PC, #64]
0x054E	0x191B    ADDS	R3, R3, R4
0x0550	0x3314    ADDS	R3, #20
0x0552	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO.c, 173 :: 		if (config & _GPIO_CFG_MODE_INPUT)
0x0554	0xF4013300  AND	R3, R1, #131072
0x0558	0xB13B    CBZ	R3, L___Lib_GPIO_GPIO_HAL_Config5
;__Lib_GPIO.c, 174 :: 		*gpioCtrl &= ~currentPin;
0x055A	0x43FC    MVN	R4, R7
; currentPin end address is: 28 (R7)
0x055C	0x9B02    LDR	R3, [SP, #8]
0x055E	0x681B    LDR	R3, [R3, #0]
0x0560	0xEA030404  AND	R4, R3, R4, LSL #0
0x0564	0x9B02    LDR	R3, [SP, #8]
0x0566	0x601C    STR	R4, [R3, #0]
0x0568	0xE005    B	L___Lib_GPIO_GPIO_HAL_Config6
L___Lib_GPIO_GPIO_HAL_Config5:
;__Lib_GPIO.c, 176 :: 		*gpioCtrl |= currentPin;
; currentPin start address is: 28 (R7)
0x056A	0x9B02    LDR	R3, [SP, #8]
0x056C	0x681B    LDR	R3, [R3, #0]
0x056E	0xEA430407  ORR	R4, R3, R7, LSL #0
; currentPin end address is: 28 (R7)
0x0572	0x9B02    LDR	R3, [SP, #8]
0x0574	0x601C    STR	R4, [R3, #0]
L___Lib_GPIO_GPIO_HAL_Config6:
;__Lib_GPIO.c, 177 :: 		}
L___Lib_GPIO_GPIO_HAL_Config4:
;__Lib_GPIO.c, 178 :: 		}
L___Lib_GPIO_GPIO_HAL_Config3:
;__Lib_GPIO.c, 156 :: 		for (pinNum = 0; pinNum < 32; pinNum++) {
0x0576	0x1C76    ADDS	R6, R6, #1
;__Lib_GPIO.c, 179 :: 		}
; portNum end address is: 0 (R0)
; config end address is: 4 (R1)
; pinMask end address is: 8 (R2)
; pinNum end address is: 24 (R6)
0x0578	0xE7C3    B	L___Lib_GPIO_GPIO_HAL_Config0
L___Lib_GPIO_GPIO_HAL_Config1:
;__Lib_GPIO.c, 180 :: 		}
L_end_GPIO_HAL_Config:
0x057A	0xF8DDE000  LDR	LR, [SP, #0]
0x057E	0xB003    ADD	SP, SP, #12
0x0580	0x4770    BX	LR
0x0582	0xBF00    NOP
0x0584	0x90004004  	#1074040832
0x0588	0x0000FFFF  	#-65536
0x058C	0xFFFF0000  	#65535
0x0590	0xF000400F  	#1074786304
; end of __Lib_GPIO_GPIO_HAL_Config
__Lib_GPIO_GPIO_HAL_Clk_Enable:
;__Lib_GPIO.c, 126 :: 		static void GPIO_HAL_Clk_Enable(unsigned long *portBase) {
; portBase start address is: 0 (R0)
; portBase end address is: 0 (R0)
; portBase start address is: 0 (R0)
;__Lib_GPIO.c, 129 :: 		port = ((unsigned long)portBase & _GPIO_PORT_CTRL_MASK) / _GPIO_PORT_CTRL_OFFSET;
0x01A4	0xF24011FF  MOVW	R1, #511
0x01A8	0xEA000101  AND	R1, R0, R1, LSL #0
; portBase end address is: 0 (R0)
0x01AC	0x0989    LSRS	R1, R1, #6
; port start address is: 0 (R0)
0x01AE	0x4608    MOV	R0, R1
;__Lib_GPIO.c, 130 :: 		SIM_SCGC5 |= (1ul << (9 + port));
0x01B0	0xF2000209  ADDW	R2, R0, #9
; port end address is: 0 (R0)
0x01B4	0xF04F0101  MOV	R1, #1
0x01B8	0xFA01F202  LSL	R2, R1, R2
0x01BC	0x4903    LDR	R1, [PC, #12]
0x01BE	0x6809    LDR	R1, [R1, #0]
0x01C0	0xEA410202  ORR	R2, R1, R2, LSL #0
0x01C4	0x4901    LDR	R1, [PC, #4]
0x01C6	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO.c, 131 :: 		}
L_end_GPIO_HAL_Clk_Enable:
0x01C8	0x4770    BX	LR
0x01CA	0xBF00    NOP
0x01CC	0x80384004  	SIM_SCGC5+0
; end of __Lib_GPIO_GPIO_HAL_Clk_Enable
_SPI2_Init_Advanced:
;__Lib_SPI_012.c, 442 :: 		void SPI2_Init_Advanced(unsigned long baudRate, unsigned long config, Module_Struct* module) {
; module start address is: 8 (R2)
; config start address is: 4 (R1)
; baudRate start address is: 0 (R0)
0x0F44	0xB081    SUB	SP, SP, #4
0x0F46	0xF8CDE000  STR	LR, [SP, #0]
0x0F4A	0x4603    MOV	R3, R0
0x0F4C	0x460C    MOV	R4, R1
0x0F4E	0x4615    MOV	R5, R2
; module end address is: 8 (R2)
; config end address is: 4 (R1)
; baudRate end address is: 0 (R0)
; baudRate start address is: 12 (R3)
; config start address is: 16 (R4)
; module start address is: 20 (R5)
;__Lib_SPI_012.c, 443 :: 		SPI_AssignPtr(&SPI2_MCR);
0x0F50	0x4806    LDR	R0, [PC, #24]
0x0F52	0xF7FFFDBD  BL	__Lib_SPI_012_SPI_AssignPtr+0
;__Lib_SPI_012.c, 444 :: 		SPI_Hal_Init_Advanced(&SPI2_MCR, baudRate, config, module);
0x0F56	0x4622    MOV	R2, R4
; module end address is: 20 (R5)
0x0F58	0x4619    MOV	R1, R3
; config end address is: 16 (R4)
0x0F5A	0x462B    MOV	R3, R5
; baudRate end address is: 12 (R3)
0x0F5C	0x4803    LDR	R0, [PC, #12]
0x0F5E	0xF7FFFDEB  BL	__Lib_SPI_012_SPI_Hal_Init_Advanced+0
;__Lib_SPI_012.c, 445 :: 		}
L_end_SPI2_Init_Advanced:
0x0F62	0xF8DDE000  LDR	LR, [SP, #0]
0x0F66	0xB001    ADD	SP, SP, #4
0x0F68	0x4770    BX	LR
0x0F6A	0xBF00    NOP
0x0F6C	0xC000400A  	SPI2_MCR+0
; end of _SPI2_Init_Advanced
__Lib_SPI_012_SPI_AssignPtr:
;__Lib_SPI_012.c, 616 :: 		static void SPI_AssignPtr(unsigned long* spiBase) {
; spiBase start address is: 0 (R0)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
;__Lib_SPI_012.c, 617 :: 		if (spiBase == &SPI0_MCR) {
0x0AD0	0x490E    LDR	R1, [PC, #56]
0x0AD2	0x4288    CMP	R0, R1
0x0AD4	0xD106    BNE	L___Lib_SPI_012_SPI_AssignPtr24
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 618 :: 		SPI_Wr_Ptr = SPI0_Write;
0x0AD6	0x4A0E    LDR	R2, [PC, #56]
0x0AD8	0x490E    LDR	R1, [PC, #56]
0x0ADA	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 619 :: 		SPI_Rd_Ptr = SPI0_Read;
0x0ADC	0x4A0E    LDR	R2, [PC, #56]
0x0ADE	0x490F    LDR	R1, [PC, #60]
0x0AE0	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 620 :: 		} else if (spiBase == &SPI1_MCR) {
0x0AE2	0xE012    B	L___Lib_SPI_012_SPI_AssignPtr25
L___Lib_SPI_012_SPI_AssignPtr24:
; spiBase start address is: 0 (R0)
0x0AE4	0x490E    LDR	R1, [PC, #56]
0x0AE6	0x4288    CMP	R0, R1
0x0AE8	0xD106    BNE	L___Lib_SPI_012_SPI_AssignPtr26
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 621 :: 		SPI_Wr_Ptr = SPI1_Write;
0x0AEA	0x4A0E    LDR	R2, [PC, #56]
0x0AEC	0x4909    LDR	R1, [PC, #36]
0x0AEE	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 622 :: 		SPI_Rd_Ptr = SPI1_Read;
0x0AF0	0x4A0D    LDR	R2, [PC, #52]
0x0AF2	0x490A    LDR	R1, [PC, #40]
0x0AF4	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 623 :: 		} else if (spiBase == &SPI2_MCR) {
0x0AF6	0xE008    B	L___Lib_SPI_012_SPI_AssignPtr27
L___Lib_SPI_012_SPI_AssignPtr26:
; spiBase start address is: 0 (R0)
0x0AF8	0x490C    LDR	R1, [PC, #48]
0x0AFA	0x4288    CMP	R0, R1
0x0AFC	0xD105    BNE	L___Lib_SPI_012_SPI_AssignPtr28
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 624 :: 		SPI_Wr_Ptr = SPI2_Write;
0x0AFE	0x4A0C    LDR	R2, [PC, #48]
0x0B00	0x4904    LDR	R1, [PC, #16]
0x0B02	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 625 :: 		SPI_Rd_Ptr = SPI2_Read;
0x0B04	0x4A0B    LDR	R2, [PC, #44]
0x0B06	0x4905    LDR	R1, [PC, #20]
0x0B08	0x600A    STR	R2, [R1, #0]
;__Lib_SPI_012.c, 626 :: 		}
L___Lib_SPI_012_SPI_AssignPtr28:
L___Lib_SPI_012_SPI_AssignPtr27:
L___Lib_SPI_012_SPI_AssignPtr25:
;__Lib_SPI_012.c, 627 :: 		}
L_end_SPI_AssignPtr:
0x0B0A	0x4770    BX	LR
0x0B0C	0xC0004002  	SPI0_MCR+0
0x0B10	0x02FD0000  	_SPI0_Write+0
0x0B14	0x48501FFF  	_SPI_Wr_Ptr+0
0x0B18	0xFFFFFFFF  	_SPI0_Read+0
0x0B1C	0x48541FFF  	_SPI_Rd_Ptr+0
0x0B20	0xD0004002  	SPI1_MCR+0
0x0B24	0x04110000  	_SPI1_Write+0
0x0B28	0xFFFFFFFF  	_SPI1_Read+0
0x0B2C	0xC000400A  	SPI2_MCR+0
0x0B30	0x04310000  	_SPI2_Write+0
0x0B34	0xFFFFFFFF  	_SPI2_Read+0
; end of __Lib_SPI_012_SPI_AssignPtr
__Lib_SPI_012_SPI_Hal_Init_Advanced:
;__Lib_SPI_012.c, 365 :: 		static void SPI_Hal_Init_Advanced(unsigned long* spiBase, unsigned long baudRate, unsigned long config, Module_Struct* module) {
; module start address is: 12 (R3)
; config start address is: 8 (R2)
; spiBase start address is: 0 (R0)
0x0B38	0xB084    SUB	SP, SP, #16
0x0B3A	0xF8CDE000  STR	LR, [SP, #0]
0x0B3E	0x9103    STR	R1, [SP, #12]
0x0B40	0x4601    MOV	R1, R0
0x0B42	0x4610    MOV	R0, R2
; module end address is: 12 (R3)
; config end address is: 8 (R2)
; spiBase end address is: 0 (R0)
; spiBase start address is: 4 (R1)
; config start address is: 0 (R0)
; module start address is: 12 (R3)
;__Lib_SPI_012.c, 370 :: 		GPIO_Alternate_Function_Enable(module);
0x0B44	0x9001    STR	R0, [SP, #4]
; module end address is: 12 (R3)
0x0B46	0x9102    STR	R1, [SP, #8]
0x0B48	0x4618    MOV	R0, R3
0x0B4A	0xF7FFFCA3  BL	_GPIO_Alternate_Function_Enable+0
0x0B4E	0x9902    LDR	R1, [SP, #8]
0x0B50	0x9801    LDR	R0, [SP, #4]
;__Lib_SPI_012.c, 372 :: 		whichCtar = (config & _SPI_CFG_SELECT_CTAR_MASK) >> 4;
0x0B52	0xF0000410  AND	R4, R0, #16
0x0B56	0x0924    LSRS	R4, R4, #4
; whichCtar start address is: 28 (R7)
0x0B58	0x4627    MOV	R7, R4
;__Lib_SPI_012.c, 375 :: 		SPI_Hal_EnableClock(spiBase);
0x0B5A	0x9001    STR	R0, [SP, #4]
0x0B5C	0x9102    STR	R1, [SP, #8]
0x0B5E	0x4608    MOV	R0, R1
0x0B60	0xF7FFFC76  BL	__Lib_SPI_012_SPI_Hal_EnableClock+0
0x0B64	0x9902    LDR	R1, [SP, #8]
;__Lib_SPI_012.c, 377 :: 		SPI_Hal_ResetInit(spiBase);
0x0B66	0x9102    STR	R1, [SP, #8]
0x0B68	0x4608    MOV	R0, R1
0x0B6A	0xF7FFFD13  BL	__Lib_SPI_012_SPI_Hal_ResetInit+0
0x0B6E	0x9902    LDR	R1, [SP, #8]
0x0B70	0x9801    LDR	R0, [SP, #4]
;__Lib_SPI_012.c, 379 :: 		*(spiBase + SPI_MCR_OFFSET) |= (config & _SPI_CFG_MASTER);
0x0B72	0xF0004500  AND	R5, R0, #-2147483648
0x0B76	0x680C    LDR	R4, [R1, #0]
0x0B78	0x432C    ORRS	R4, R5
0x0B7A	0x600C    STR	R4, [R1, #0]
;__Lib_SPI_012.c, 381 :: 		*(spiBase + SPI_MCR_OFFSET) |= (config & _SPI_CFG_CONT_SCK);
0x0B7C	0xF0004580  AND	R5, R0, #1073741824
0x0B80	0x680C    LDR	R4, [R1, #0]
0x0B82	0x432C    ORRS	R4, R5
0x0B84	0x600C    STR	R4, [R1, #0]
;__Lib_SPI_012.c, 383 :: 		*(spiBase + SPI_MCR_OFFSET) |= SPI_MCR_DIS_TXF_MASK | SPI_MCR_DIS_RXF_MASK;
0x0B86	0x680C    LDR	R4, [R1, #0]
0x0B88	0xF4445440  ORR	R4, R4, #12288
0x0B8C	0x600C    STR	R4, [R1, #0]
;__Lib_SPI_012.c, 388 :: 		*(spiBase + SPI_MCR_OFFSET) &= ~(1ul << SPI_MCR_MDIS_SHIFT); // '0' - enable; '1' - disable
0x0B8E	0x680D    LDR	R5, [R1, #0]
0x0B90	0xF46F4480  MVN	R4, #16384
0x0B94	0xEA050404  AND	R4, R5, R4, LSL #0
0x0B98	0x600C    STR	R4, [R1, #0]
;__Lib_SPI_012.c, 390 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar) |= (config & _SPI_CFG_FRAME_SIZE_MASK);
0x0B9A	0xF201050C  ADDW	R5, R1, #12
0x0B9E	0x00BC    LSLS	R4, R7, #2
0x0BA0	0x192E    ADDS	R6, R5, R4
0x0BA2	0xF000050F  AND	R5, R0, #15
0x0BA6	0x6834    LDR	R4, [R6, #0]
0x0BA8	0x432C    ORRS	R4, R5
0x0BAA	0x6034    STR	R4, [R6, #0]
;__Lib_SPI_012.c, 392 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar) |= (config & _SPI_CFG_CLK_IDLE_HIGH);
0x0BAC	0xF201050C  ADDW	R5, R1, #12
0x0BB0	0x00BC    LSLS	R4, R7, #2
0x0BB2	0x192E    ADDS	R6, R5, R4
0x0BB4	0xF0006580  AND	R5, R0, #67108864
0x0BB8	0x6834    LDR	R4, [R6, #0]
0x0BBA	0x432C    ORRS	R4, R5
0x0BBC	0x6034    STR	R4, [R6, #0]
;__Lib_SPI_012.c, 394 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar) |= (config & _SPI_CFG_CLK_PHASE_CHG_LEADING);
0x0BBE	0xF201050C  ADDW	R5, R1, #12
0x0BC2	0x00BC    LSLS	R4, R7, #2
0x0BC4	0x192E    ADDS	R6, R5, R4
0x0BC6	0xF0007500  AND	R5, R0, #33554432
0x0BCA	0x6834    LDR	R4, [R6, #0]
0x0BCC	0x432C    ORRS	R4, R5
0x0BCE	0x6034    STR	R4, [R6, #0]
;__Lib_SPI_012.c, 396 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar) |= (config & _SPI_CFG_LSB_FIRST);
0x0BD0	0xF201050C  ADDW	R5, R1, #12
0x0BD4	0x00BC    LSLS	R4, R7, #2
0x0BD6	0x192E    ADDS	R6, R5, R4
0x0BD8	0xF0007580  AND	R5, R0, #16777216
0x0BDC	0x6834    LDR	R4, [R6, #0]
0x0BDE	0x432C    ORRS	R4, R5
0x0BE0	0x6034    STR	R4, [R6, #0]
;__Lib_SPI_012.c, 398 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar)  = ~SPI_CTAR_FMSZ_MASK;
0x0BE2	0xF201050C  ADDW	R5, R1, #12
0x0BE6	0x00BC    LSLS	R4, R7, #2
0x0BE8	0x192D    ADDS	R5, R5, R4
0x0BEA	0xF06F44F0  MVN	R4, #2013265920
0x0BEE	0x602C    STR	R4, [R5, #0]
;__Lib_SPI_012.c, 399 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtar)  = (config & _SPI_CFG_FRAME_SIZE_MASK) << SPI_CTAR_FMSZ_SHIFT;
0x0BF0	0xF201050C  ADDW	R5, R1, #12
0x0BF4	0x00BC    LSLS	R4, R7, #2
0x0BF6	0x192D    ADDS	R5, R5, R4
0x0BF8	0xF000040F  AND	R4, R0, #15
; config end address is: 0 (R0)
0x0BFC	0x06E4    LSLS	R4, R4, #27
0x0BFE	0x602C    STR	R4, [R5, #0]
;__Lib_SPI_012.c, 402 :: 		calcBaudRate = SPI_Hal_SetBaudRate(spiBase, whichCtar, baudRate);
0x0C00	0x9101    STR	R1, [SP, #4]
0x0C02	0x9A03    LDR	R2, [SP, #12]
0x0C04	0x4608    MOV	R0, R1
; whichCtar end address is: 28 (R7)
0x0C06	0xB2F9    UXTB	R1, R7
0x0C08	0xF7FFFCF8  BL	__Lib_SPI_012_SPI_Hal_SetBaudRate+0
0x0C0C	0x9901    LDR	R1, [SP, #4]
; calcBaudRate start address is: 0 (R0)
; calcBaudRate end address is: 0 (R0)
;__Lib_SPI_012.c, 405 :: 		SPI_Hal_StartTransfer(spiBase);
0x0C0E	0x4608    MOV	R0, R1
; spiBase end address is: 4 (R1)
0x0C10	0xF7FFFBA8  BL	__Lib_SPI_012_SPI_Hal_StartTransfer+0
;__Lib_SPI_012.c, 406 :: 		}
L_end_SPI_Hal_Init_Advanced:
0x0C14	0xF8DDE000  LDR	LR, [SP, #0]
0x0C18	0xB004    ADD	SP, SP, #16
0x0C1A	0x4770    BX	LR
; end of __Lib_SPI_012_SPI_Hal_Init_Advanced
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO.c, 293 :: 		void GPIO_Alternate_Function_Enable(const Module_Struct * module) {
; module start address is: 0 (R0)
0x0494	0xB082    SUB	SP, SP, #8
0x0496	0xF8CDE000  STR	LR, [SP, #0]
0x049A	0x4601    MOV	R1, R0
; module end address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_GPIO.c, 297 :: 		i = 0;
; i start address is: 0 (R0)
0x049C	0x2000    MOVS	R0, #0
; module end address is: 4 (R1)
; i end address is: 0 (R0)
0x049E	0x468C    MOV	R12, R1
;__Lib_GPIO.c, 298 :: 		while (module->pins[i] != 0xFFFFFFFF)
L_GPIO_Alternate_Function_Enable22:
; i start address is: 0 (R0)
; module start address is: 48 (R12)
0x04A0	0x0081    LSLS	R1, R0, #2
0x04A2	0xEB0C0101  ADD	R1, R12, R1, LSL #0
0x04A6	0x6809    LDR	R1, [R1, #0]
0x04A8	0xF1B13FFF  CMP	R1, #-1
0x04AC	0xD013    BEQ	L_GPIO_Alternate_Function_Enable23
;__Lib_GPIO.c, 300 :: 		GPIO_Config_Pin_Alternate_Function(module->pins[i], module->configs[i]);
0x04AE	0xF10C0134  ADD	R1, R12, #52
0x04B2	0x0083    LSLS	R3, R0, #2
0x04B4	0x18C9    ADDS	R1, R1, R3
0x04B6	0x6809    LDR	R1, [R1, #0]
0x04B8	0x460A    MOV	R2, R1
0x04BA	0xEB0C0103  ADD	R1, R12, R3, LSL #0
0x04BE	0x6809    LDR	R1, [R1, #0]
0x04C0	0xF8AD0004  STRH	R0, [SP, #4]
0x04C4	0x4608    MOV	R0, R1
0x04C6	0x4611    MOV	R1, R2
0x04C8	0xF7FFFEDE  BL	__Lib_GPIO_GPIO_Config_Pin_Alternate_Function+0
0x04CC	0xF8BD0004  LDRH	R0, [SP, #4]
;__Lib_GPIO.c, 301 :: 		i++;
0x04D0	0x1C40    ADDS	R0, R0, #1
0x04D2	0xB280    UXTH	R0, R0
;__Lib_GPIO.c, 302 :: 		}
; module end address is: 48 (R12)
; i end address is: 0 (R0)
0x04D4	0xE7E4    B	L_GPIO_Alternate_Function_Enable22
L_GPIO_Alternate_Function_Enable23:
;__Lib_GPIO.c, 303 :: 		}
L_end_GPIO_Alternate_Function_Enable:
0x04D6	0xF8DDE000  LDR	LR, [SP, #0]
0x04DA	0xB002    ADD	SP, SP, #8
0x04DC	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO.c, 265 :: 		unsigned long muxConfig) // contains: GPIO mode options
; muxConfig start address is: 4 (R1)
; muxPin start address is: 0 (R0)
0x0288	0xB082    SUB	SP, SP, #8
0x028A	0xF8CDE000  STR	LR, [SP, #0]
0x028E	0x4681    MOV	R9, R0
; muxConfig end address is: 4 (R1)
; muxPin end address is: 0 (R0)
; muxPin start address is: 36 (R9)
; muxConfig start address is: 4 (R1)
;__Lib_GPIO.c, 275 :: 		port = (muxPin >> _GPIO_PORT_OFFSET) & 0x7;
0x0290	0xEA4F1259  LSR	R2, R9, #5
0x0294	0xF0020207  AND	R2, R2, #7
; port start address is: 40 (R10)
0x0298	0x4692    MOV	R10, R2
;__Lib_GPIO.c, 276 :: 		pin = muxPin & 0x1F; // 32 pins
0x029A	0xF009041F  AND	R4, R9, #31
; pin start address is: 44 (R11)
0x029E	0x46A3    MOV	R11, R4
;__Lib_GPIO.c, 277 :: 		portBase = (unsigned long *)(_GPIO_PORT_CTRL_BASE + _GPIO_PORT_CTRL_OFFSET * port);
0x02A0	0x0193    LSLS	R3, R2, #6
0x02A2	0x4A0D    LDR	R2, [PC, #52]
0x02A4	0x18D3    ADDS	R3, R2, R3
;__Lib_GPIO.c, 280 :: 		GPIO_Config(portBase, 1ul << pin, muxConfig);
0x02A6	0xF04F0201  MOV	R2, #1
0x02AA	0x40A2    LSLS	R2, R4
0x02AC	0x9201    STR	R2, [SP, #4]
; muxConfig end address is: 4 (R1)
0x02AE	0x4618    MOV	R0, R3
0x02B0	0x460A    MOV	R2, R1
0x02B2	0x9901    LDR	R1, [SP, #4]
0x02B4	0xF000FAC6  BL	_GPIO_Config+0
;__Lib_GPIO.c, 283 :: 		pinCtrl = (unsigned long*)(_PIN_CTRL_BASE + port * _PIN_CTRL_OFFSET + pin * 4);
0x02B8	0xEA4F330A  LSL	R3, R10, #12
; port end address is: 40 (R10)
0x02BC	0x4A07    LDR	R2, [PC, #28]
0x02BE	0x18D3    ADDS	R3, R2, R3
0x02C0	0xEA4F028B  LSL	R2, R11, #2
; pin end address is: 44 (R11)
0x02C4	0x189C    ADDS	R4, R3, R2
;__Lib_GPIO.c, 284 :: 		*pinCtrl |= muxPin & 0x700;
0x02C6	0xF40963E0  AND	R3, R9, #1792
; muxPin end address is: 36 (R9)
0x02CA	0x6822    LDR	R2, [R4, #0]
0x02CC	0x431A    ORRS	R2, R3
0x02CE	0x6022    STR	R2, [R4, #0]
;__Lib_GPIO.c, 285 :: 		}
L_end_GPIO_Config_Pin_Alternate_Function:
0x02D0	0xF8DDE000  LDR	LR, [SP, #0]
0x02D4	0xB002    ADD	SP, SP, #8
0x02D6	0x4770    BX	LR
0x02D8	0xF000400F  	#1074786304
0x02DC	0x90004004  	#1074040832
; end of __Lib_GPIO_GPIO_Config_Pin_Alternate_Function
__Lib_SPI_012_SPI_Hal_EnableClock:
;__Lib_SPI_012.c, 352 :: 		static void SPI_Hal_EnableClock(unsigned long* spiBase) {
; spiBase start address is: 0 (R0)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
;__Lib_SPI_012.c, 353 :: 		if (spiBase == &SPI0_MCR)
0x0450	0x490A    LDR	R1, [PC, #40]
0x0452	0x4288    CMP	R0, R1
0x0454	0xD103    BNE	L___Lib_SPI_012_SPI_Hal_EnableClock17
;__Lib_SPI_012.c, 354 :: 		SIM_SCGC6.B12 = 1;
0x0456	0x2201    MOVS	R2, #1
0x0458	0xB252    SXTB	R2, R2
0x045A	0x4909    LDR	R1, [PC, #36]
0x045C	0x600A    STR	R2, [R1, #0]
L___Lib_SPI_012_SPI_Hal_EnableClock17:
;__Lib_SPI_012.c, 355 :: 		if (spiBase == &SPI1_MCR)
0x045E	0x4909    LDR	R1, [PC, #36]
0x0460	0x4288    CMP	R0, R1
0x0462	0xD103    BNE	L___Lib_SPI_012_SPI_Hal_EnableClock18
;__Lib_SPI_012.c, 356 :: 		SIM_SCGC6.B13 = 1;
0x0464	0x2201    MOVS	R2, #1
0x0466	0xB252    SXTB	R2, R2
0x0468	0x4907    LDR	R1, [PC, #28]
0x046A	0x600A    STR	R2, [R1, #0]
L___Lib_SPI_012_SPI_Hal_EnableClock18:
;__Lib_SPI_012.c, 357 :: 		if (spiBase == &SPI2_MCR)
0x046C	0x4907    LDR	R1, [PC, #28]
0x046E	0x4288    CMP	R0, R1
0x0470	0xD103    BNE	L___Lib_SPI_012_SPI_Hal_EnableClock19
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 358 :: 		SIM_SCGC3.B12 = 1;
0x0472	0x2201    MOVS	R2, #1
0x0474	0xB252    SXTB	R2, R2
0x0476	0x4906    LDR	R1, [PC, #24]
0x0478	0x600A    STR	R2, [R1, #0]
L___Lib_SPI_012_SPI_Hal_EnableClock19:
;__Lib_SPI_012.c, 359 :: 		}
L_end_SPI_Hal_EnableClock:
0x047A	0x4770    BX	LR
0x047C	0xC0004002  	SPI0_MCR+0
0x0480	0x07B04290  	SIM_SCGC6+0
0x0484	0xD0004002  	SPI1_MCR+0
0x0488	0x07B44290  	SIM_SCGC6+0
0x048C	0xC000400A  	SPI2_MCR+0
0x0490	0x06304290  	SIM_SCGC3+0
; end of __Lib_SPI_012_SPI_Hal_EnableClock
__Lib_SPI_012_SPI_Hal_ResetInit:
;__Lib_SPI_012.c, 262 :: 		static void SPI_Hal_ResetInit(unsigned long* spiBase) {
; spiBase start address is: 0 (R0)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
;__Lib_SPI_012.c, 264 :: 		*(spiBase + SPI_MCR_OFFSET) &= ~(1ul << SPI_MCR_MDIS_SHIFT); // clear MDIS bit
0x0594	0x6802    LDR	R2, [R0, #0]
0x0596	0xF46F4180  MVN	R1, #16384
0x059A	0xEA020101  AND	R1, R2, R1, LSL #0
0x059E	0x6001    STR	R1, [R0, #0]
;__Lib_SPI_012.c, 266 :: 		*(spiBase + SPI_MCR_OFFSET) |= 1ul << SPI_MCR_HALT_SHIFT;
0x05A0	0x6801    LDR	R1, [R0, #0]
0x05A2	0xF0410101  ORR	R1, R1, #1
0x05A6	0x6001    STR	R1, [R0, #0]
;__Lib_SPI_012.c, 269 :: 		*(spiBase + SPI_SR_OFFSET) |= SPI_SR_TCF_MASK | SPI_SR_EOQF_MASK | SPI_SR_TFUF_MASK | SPI_SR_TFFF_MASK | SPI_SR_RFOF_MASK | SPI_SR_RFDF_MASK;
0x05A8	0xF200032C  ADDW	R3, R0, #44
0x05AC	0x681A    LDR	R2, [R3, #0]
0x05AE	0x4912    LDR	R1, [PC, #72]
0x05B0	0xEA420101  ORR	R1, R2, R1, LSL #0
0x05B4	0x6019    STR	R1, [R3, #0]
;__Lib_SPI_012.c, 270 :: 		*(spiBase + SPI_TCR_OFFSET) = 0;
0x05B6	0xF2000208  ADDW	R2, R0, #8
0x05BA	0x2100    MOVS	R1, #0
0x05BC	0x6011    STR	R1, [R2, #0]
;__Lib_SPI_012.c, 271 :: 		*(spiBase + SPI_CTAR0_OFFSET) = 0x78000000;
0x05BE	0xF200020C  ADDW	R2, R0, #12
0x05C2	0xF04F41F0  MOV	R1, #2013265920
0x05C6	0x6011    STR	R1, [R2, #0]
;__Lib_SPI_012.c, 272 :: 		*(spiBase + SPI_CTAR1_OFFSET) = 0x78000000;
0x05C8	0xF2000210  ADDW	R2, R0, #16
0x05CC	0xF04F41F0  MOV	R1, #2013265920
0x05D0	0x6011    STR	R1, [R2, #0]
;__Lib_SPI_012.c, 273 :: 		*(spiBase + SPI_RSER_OFFSET)  = 0;
0x05D2	0xF2000230  ADDW	R2, R0, #48
0x05D6	0x2100    MOVS	R1, #0
0x05D8	0x6011    STR	R1, [R2, #0]
;__Lib_SPI_012.c, 277 :: 		*(spiBase + SPI_PUSHR_OFFSET) = 0;
0x05DA	0xF2000234  ADDW	R2, R0, #52
0x05DE	0x2100    MOVS	R1, #0
0x05E0	0x6011    STR	R1, [R2, #0]
;__Lib_SPI_012.c, 279 :: 		*(spiBase + SPI_MCR_OFFSET) |= (1ul << SPI_MCR_CLR_RXF_SHIFT) | (1ul << SPI_MCR_CLR_TXF_SHIFT);
0x05E2	0x6801    LDR	R1, [R0, #0]
0x05E4	0xF4416140  ORR	R1, R1, #3072
0x05E8	0x6001    STR	R1, [R0, #0]
;__Lib_SPI_012.c, 281 :: 		*(spiBase + SPI_MCR_OFFSET) |= SPI_MCR_MDIS_MASK | SPI_MCR_HALT_MASK;
0x05EA	0x6802    LDR	R2, [R0, #0]
0x05EC	0xF2440101  MOVW	R1, #16385
0x05F0	0xEA420101  ORR	R1, R2, R1, LSL #0
0x05F4	0x6001    STR	R1, [R0, #0]
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 282 :: 		}
L_end_SPI_Hal_ResetInit:
0x05F6	0x4770    BX	LR
0x05F8	0x00009A0A  	#-1710620672
; end of __Lib_SPI_012_SPI_Hal_ResetInit
__Lib_SPI_012_SPI_Hal_SetBaudRate:
;__Lib_SPI_012.c, 291 :: 		static unsigned long SPI_Hal_SetBaudRate(unsigned long* spiBase, unsigned char whichCtarReg, unsigned long bitsPerSec) {
; bitsPerSec start address is: 8 (R2)
0x05FC	0xB091    SUB	SP, SP, #68
0x05FE	0xF8CDE000  STR	LR, [SP, #0]
0x0602	0x900F    STR	R0, [SP, #60]
0x0604	0x4610    MOV	R0, R2
0x0606	0xF88D1040  STRB	R1, [SP, #64]
; bitsPerSec end address is: 8 (R2)
; bitsPerSec start address is: 0 (R0)
;__Lib_SPI_012.c, 298 :: 		unsigned long baudrate = bitsPerSec;
0x060A	0x900E    STR	R0, [SP, #56]
; bitsPerSec end address is: 0 (R0)
;__Lib_SPI_012.c, 301 :: 		SIM_GetClocksFrequency(&simClocks);
0x060C	0xAB01    ADD	R3, SP, #4
0x060E	0x4618    MOV	R0, R3
0x0610	0xF7FFFE02  BL	_SIM_GetClocksFrequency+0
;__Lib_SPI_012.c, 305 :: 		min_diff = 0xFFFFFFFFul;
0x0614	0xF04F33FF  MOV	R3, #-1
0x0618	0x930D    STR	R3, [SP, #52]
;__Lib_SPI_012.c, 306 :: 		bestPrescaler = 0;
0x061A	0x2300    MOVS	R3, #0
0x061C	0x9306    STR	R3, [SP, #24]
;__Lib_SPI_012.c, 307 :: 		bestScaler = 0;
0x061E	0x2300    MOVS	R3, #0
0x0620	0x9308    STR	R3, [SP, #32]
;__Lib_SPI_012.c, 308 :: 		bestDbr = 1;
0x0622	0x2301    MOVS	R3, #1
0x0624	0x930A    STR	R3, [SP, #40]
;__Lib_SPI_012.c, 309 :: 		bestBaudrate = 0; // required to avoid compilation warning
0x0626	0x2300    MOVS	R3, #0
0x0628	0x930B    STR	R3, [SP, #44]
;__Lib_SPI_012.c, 312 :: 		for (prescaler = 0; (prescaler < 4) && min_diff; prescaler++)
0x062A	0x2300    MOVS	R3, #0
0x062C	0x9305    STR	R3, [SP, #20]
L___Lib_SPI_012_SPI_Hal_SetBaudRate0:
0x062E	0x9B05    LDR	R3, [SP, #20]
0x0630	0x2B04    CMP	R3, #4
0x0632	0xD241    BCS	L___Lib_SPI_012_SPI_Hal_SetBaudRate37
0x0634	0x9B0D    LDR	R3, [SP, #52]
0x0636	0x2B00    CMP	R3, #0
0x0638	0xD03E    BEQ	L___Lib_SPI_012_SPI_Hal_SetBaudRate36
L___Lib_SPI_012_SPI_Hal_SetBaudRate31:
;__Lib_SPI_012.c, 314 :: 		for (scaler = 0; (scaler < 16) && min_diff; scaler++)
0x063A	0x2300    MOVS	R3, #0
0x063C	0x9307    STR	R3, [SP, #28]
L___Lib_SPI_012_SPI_Hal_SetBaudRate5:
0x063E	0x9B07    LDR	R3, [SP, #28]
0x0640	0x2B10    CMP	R3, #16
0x0642	0xD235    BCS	L___Lib_SPI_012_SPI_Hal_SetBaudRate35
0x0644	0x9B0D    LDR	R3, [SP, #52]
0x0646	0x2B00    CMP	R3, #0
0x0648	0xD032    BEQ	L___Lib_SPI_012_SPI_Hal_SetBaudRate34
L___Lib_SPI_012_SPI_Hal_SetBaudRate30:
;__Lib_SPI_012.c, 316 :: 		for (dbr = 1; (dbr < 3) && min_diff; dbr++)
0x064A	0x2301    MOVS	R3, #1
0x064C	0x9309    STR	R3, [SP, #36]
L___Lib_SPI_012_SPI_Hal_SetBaudRate10:
0x064E	0x9B09    LDR	R3, [SP, #36]
0x0650	0x2B03    CMP	R3, #3
0x0652	0xD229    BCS	L___Lib_SPI_012_SPI_Hal_SetBaudRate33
0x0654	0x9B0D    LDR	R3, [SP, #52]
0x0656	0xB33B    CBZ	R3, L___Lib_SPI_012_SPI_Hal_SetBaudRate32
L___Lib_SPI_012_SPI_Hal_SetBaudRate29:
;__Lib_SPI_012.c, 318 :: 		realBaudrate = ((simClocks.BUSCLOCK_Frequency * dbr) /
0x0658	0x9C09    LDR	R4, [SP, #36]
0x065A	0x9B02    LDR	R3, [SP, #8]
0x065C	0xFB03F604  MUL	R6, R3, R4
;__Lib_SPI_012.c, 319 :: 		(baudratePrescaler[prescaler] * (baudrateScaler[scaler])));
0x0660	0x9B05    LDR	R3, [SP, #20]
0x0662	0x009C    LSLS	R4, R3, #2
0x0664	0x4B2B    LDR	R3, [PC, #172]
0x0666	0x191B    ADDS	R3, R3, R4
0x0668	0x681D    LDR	R5, [R3, #0]
0x066A	0x9B07    LDR	R3, [SP, #28]
0x066C	0x009C    LSLS	R4, R3, #2
0x066E	0x4B2A    LDR	R3, [PC, #168]
0x0670	0x191B    ADDS	R3, R3, R4
0x0672	0x681B    LDR	R3, [R3, #0]
0x0674	0x436B    MULS	R3, R5, R3
0x0676	0xFBB6F4F3  UDIV	R4, R6, R3
; realBaudrate start address is: 0 (R0)
0x067A	0x4620    MOV	R0, R4
;__Lib_SPI_012.c, 322 :: 		if (baudrate >= realBaudrate)
0x067C	0x9B0E    LDR	R3, [SP, #56]
0x067E	0x42A3    CMP	R3, R4
0x0680	0xD30E    BCC	L___Lib_SPI_012_SPI_Hal_SetBaudRate15
;__Lib_SPI_012.c, 324 :: 		diff = baudrate-realBaudrate;
0x0682	0x9B0E    LDR	R3, [SP, #56]
0x0684	0x1A1C    SUB	R4, R3, R0
0x0686	0x940C    STR	R4, [SP, #48]
;__Lib_SPI_012.c, 325 :: 		if (min_diff > diff)
0x0688	0x9B0D    LDR	R3, [SP, #52]
0x068A	0x42A3    CMP	R3, R4
0x068C	0xD908    BLS	L___Lib_SPI_012_SPI_Hal_SetBaudRate16
;__Lib_SPI_012.c, 328 :: 		min_diff = diff;
0x068E	0x9B0C    LDR	R3, [SP, #48]
0x0690	0x930D    STR	R3, [SP, #52]
;__Lib_SPI_012.c, 329 :: 		bestPrescaler = prescaler;
0x0692	0x9B05    LDR	R3, [SP, #20]
0x0694	0x9306    STR	R3, [SP, #24]
;__Lib_SPI_012.c, 330 :: 		bestScaler = scaler;
0x0696	0x9B07    LDR	R3, [SP, #28]
0x0698	0x9308    STR	R3, [SP, #32]
;__Lib_SPI_012.c, 331 :: 		bestBaudrate = realBaudrate;
0x069A	0x900B    STR	R0, [SP, #44]
; realBaudrate end address is: 0 (R0)
;__Lib_SPI_012.c, 332 :: 		bestDbr = dbr;
0x069C	0x9B09    LDR	R3, [SP, #36]
0x069E	0x930A    STR	R3, [SP, #40]
;__Lib_SPI_012.c, 333 :: 		}
L___Lib_SPI_012_SPI_Hal_SetBaudRate16:
;__Lib_SPI_012.c, 334 :: 		}
L___Lib_SPI_012_SPI_Hal_SetBaudRate15:
;__Lib_SPI_012.c, 316 :: 		for (dbr = 1; (dbr < 3) && min_diff; dbr++)
0x06A0	0x9B09    LDR	R3, [SP, #36]
0x06A2	0x1C5B    ADDS	R3, R3, #1
0x06A4	0x9309    STR	R3, [SP, #36]
;__Lib_SPI_012.c, 335 :: 		}
0x06A6	0xE7D2    B	L___Lib_SPI_012_SPI_Hal_SetBaudRate10
;__Lib_SPI_012.c, 316 :: 		for (dbr = 1; (dbr < 3) && min_diff; dbr++)
L___Lib_SPI_012_SPI_Hal_SetBaudRate33:
L___Lib_SPI_012_SPI_Hal_SetBaudRate32:
;__Lib_SPI_012.c, 314 :: 		for (scaler = 0; (scaler < 16) && min_diff; scaler++)
0x06A8	0x9B07    LDR	R3, [SP, #28]
0x06AA	0x1C5B    ADDS	R3, R3, #1
0x06AC	0x9307    STR	R3, [SP, #28]
;__Lib_SPI_012.c, 336 :: 		}
0x06AE	0xE7C6    B	L___Lib_SPI_012_SPI_Hal_SetBaudRate5
;__Lib_SPI_012.c, 314 :: 		for (scaler = 0; (scaler < 16) && min_diff; scaler++)
L___Lib_SPI_012_SPI_Hal_SetBaudRate35:
L___Lib_SPI_012_SPI_Hal_SetBaudRate34:
;__Lib_SPI_012.c, 312 :: 		for (prescaler = 0; (prescaler < 4) && min_diff; prescaler++)
0x06B0	0x9B05    LDR	R3, [SP, #20]
0x06B2	0x1C5B    ADDS	R3, R3, #1
0x06B4	0x9305    STR	R3, [SP, #20]
;__Lib_SPI_012.c, 337 :: 		}
0x06B6	0xE7BA    B	L___Lib_SPI_012_SPI_Hal_SetBaudRate0
;__Lib_SPI_012.c, 312 :: 		for (prescaler = 0; (prescaler < 4) && min_diff; prescaler++)
L___Lib_SPI_012_SPI_Hal_SetBaudRate37:
L___Lib_SPI_012_SPI_Hal_SetBaudRate36:
;__Lib_SPI_012.c, 340 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtarReg) |= (bestDbr - 1) << SPI_CTAR_DBR_SHIFT;
0x06B8	0x9B0F    LDR	R3, [SP, #60]
0x06BA	0xF203040C  ADDW	R4, R3, #12
0x06BE	0xF89D3040  LDRB	R3, [SP, #64]
0x06C2	0x009B    LSLS	R3, R3, #2
0x06C4	0x18E5    ADDS	R5, R4, R3
0x06C6	0x9B0A    LDR	R3, [SP, #40]
0x06C8	0x1E5B    SUBS	R3, R3, #1
0x06CA	0x07DC    LSLS	R4, R3, #31
0x06CC	0x682B    LDR	R3, [R5, #0]
0x06CE	0x4323    ORRS	R3, R4
0x06D0	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_012.c, 341 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtarReg) |= (bestPrescaler << SPI_CTAR_PBR_SHIFT) & SPI_CTAR_PBR_MASK;
0x06D2	0x9B0F    LDR	R3, [SP, #60]
0x06D4	0xF203040C  ADDW	R4, R3, #12
0x06D8	0xF89D3040  LDRB	R3, [SP, #64]
0x06DC	0x009B    LSLS	R3, R3, #2
0x06DE	0x18E5    ADDS	R5, R4, R3
0x06E0	0x9B06    LDR	R3, [SP, #24]
0x06E2	0x041B    LSLS	R3, R3, #16
0x06E4	0xF4033440  AND	R4, R3, #196608
0x06E8	0x682B    LDR	R3, [R5, #0]
0x06EA	0x4323    ORRS	R3, R4
0x06EC	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_012.c, 342 :: 		*(spiBase + SPI_CTAR0_OFFSET + whichCtarReg) |= (bestScaler << SPI_CTAR_BR_SHIFT) & SPI_CTAR_BR_MASK;
0x06EE	0x9B0F    LDR	R3, [SP, #60]
0x06F0	0xF203040C  ADDW	R4, R3, #12
0x06F4	0xF89D3040  LDRB	R3, [SP, #64]
0x06F8	0x009B    LSLS	R3, R3, #2
0x06FA	0x18E5    ADDS	R5, R4, R3
0x06FC	0x9B08    LDR	R3, [SP, #32]
0x06FE	0xF003040F  AND	R4, R3, #15
0x0702	0x682B    LDR	R3, [R5, #0]
0x0704	0x4323    ORRS	R3, R4
0x0706	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_012.c, 345 :: 		return bestBaudrate;
0x0708	0x980B    LDR	R0, [SP, #44]
;__Lib_SPI_012.c, 346 :: 		}
L_end_SPI_Hal_SetBaudRate:
0x070A	0xF8DDE000  LDR	LR, [SP, #0]
0x070E	0xB011    ADD	SP, SP, #68
0x0710	0x4770    BX	LR
0x0712	0xBF00    NOP
0x0714	0x6FD00000  	__Lib_SPI_012_baudratePrescaler+0
0x0718	0x6F440000  	__Lib_SPI_012_baudrateScaler+0
; end of __Lib_SPI_012_SPI_Hal_SetBaudRate
_SIM_GetClocksFrequency:
;__Lib_System.c, 958 :: 		void SIM_GetClocksFrequency(SIM_ClocksTypeDef* SIM_Clocks)
; SIM_Clocks start address is: 0 (R0)
0x0218	0xB081    SUB	SP, SP, #4
0x021A	0xF8CDE000  STR	LR, [SP, #0]
0x021E	0x4604    MOV	R4, R0
; SIM_Clocks end address is: 0 (R0)
; SIM_Clocks start address is: 16 (R4)
;__Lib_System.c, 965 :: 		systemFrequency = Get_Fosc_kHz() * 1000;
0x0220	0xF7FFFFBA  BL	_Get_Fosc_kHz+0
0x0224	0xF24031E8  MOVW	R1, #1000
0x0228	0xFB00F301  MUL	R3, R0, R1
;__Lib_System.c, 967 :: 		clockDiv1 = SIM_CLKDIV1 >> SIM_CLKDIV1_OUTDIV1_SHIFT;
0x022C	0x4915    LDR	R1, [PC, #84]
0x022E	0x6809    LDR	R1, [R1, #0]
0x0230	0x0F0A    LSRS	R2, R1, #28
;__Lib_System.c, 968 :: 		clockDiv2 = (SIM_CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT;
0x0232	0x4914    LDR	R1, [PC, #80]
0x0234	0x6809    LDR	R1, [R1, #0]
0x0236	0xF0016170  AND	R1, R1, #251658240
0x023A	0x0E09    LSRS	R1, R1, #24
; clockDiv2 start address is: 0 (R0)
0x023C	0xB2C8    UXTB	R0, R1
;__Lib_System.c, 969 :: 		clockDiv3 = (SIM_CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT;
0x023E	0x4911    LDR	R1, [PC, #68]
0x0240	0x6809    LDR	R1, [R1, #0]
0x0242	0xF4010170  AND	R1, R1, #15728640
0x0246	0x0D09    LSRS	R1, R1, #20
; clockDiv3 start address is: 20 (R5)
0x0248	0xB2CD    UXTB	R5, R1
;__Lib_System.c, 970 :: 		clockDiv4 = (SIM_CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT;
0x024A	0x490E    LDR	R1, [PC, #56]
0x024C	0x6809    LDR	R1, [R1, #0]
0x024E	0xF4012170  AND	R1, R1, #983040
0x0252	0x0C09    LSRS	R1, R1, #16
; clockDiv4 start address is: 24 (R6)
0x0254	0xB2CE    UXTB	R6, R1
;__Lib_System.c, 972 :: 		mcgOutClockFrequency = systemFrequency << clockDiv1;
0x0256	0xB2D1    UXTB	R1, R2
0x0258	0xFA03F101  LSL	R1, R3, R1
; mcgOutClockFrequency start address is: 28 (R7)
0x025C	0x460F    MOV	R7, R1
;__Lib_System.c, 974 :: 		SIM_Clocks->SYSTEM_Frequency   = systemFrequency;
0x025E	0x6023    STR	R3, [R4, #0]
;__Lib_System.c, 975 :: 		SIM_Clocks->BUSCLOCK_Frequency = mcgOutClockFrequency >> clockDiv2;
0x0260	0x1D22    ADDS	R2, R4, #4
0x0262	0xFA27F100  LSR	R1, R7, R0
; clockDiv2 end address is: 0 (R0)
0x0266	0x6011    STR	R1, [R2, #0]
;__Lib_System.c, 976 :: 		SIM_Clocks->FLEXBUS_Frequency  = mcgOutClockFrequency >> clockDiv3;
0x0268	0xF2040208  ADDW	R2, R4, #8
0x026C	0xFA27F105  LSR	R1, R7, R5
; clockDiv3 end address is: 20 (R5)
0x0270	0x6011    STR	R1, [R2, #0]
;__Lib_System.c, 977 :: 		SIM_Clocks->FLASH_Frequency    = mcgOutClockFrequency >> clockDiv4;
0x0272	0xF204020C  ADDW	R2, R4, #12
; SIM_Clocks end address is: 16 (R4)
0x0276	0xFA27F106  LSR	R1, R7, R6
; clockDiv4 end address is: 24 (R6)
; mcgOutClockFrequency end address is: 28 (R7)
0x027A	0x6011    STR	R1, [R2, #0]
;__Lib_System.c, 978 :: 		}
L_end_SIM_GetClocksFrequency:
0x027C	0xF8DDE000  LDR	LR, [SP, #0]
0x0280	0xB001    ADD	SP, SP, #4
0x0282	0x4770    BX	LR
0x0284	0x80444004  	SIM_CLKDIV1+0
; end of _SIM_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0198	0x4801    LDR	R0, [PC, #4]
0x019A	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x019C	0x4770    BX	LR
0x019E	0xBF00    NOP
0x01A0	0x484C1FFF  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
__Lib_SPI_012_SPI_Hal_StartTransfer:
;__Lib_SPI_012.c, 453 :: 		static void SPI_Hal_StartTransfer(unsigned long* spiBase) {
; spiBase start address is: 0 (R0)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
;__Lib_SPI_012.c, 454 :: 		*(spiBase + SPI_MCR_OFFSET) &= ~(1ul << SPI_MCR_HALT_SHIFT);
0x0364	0x6802    LDR	R2, [R0, #0]
0x0366	0xF06F0101  MVN	R1, #1
0x036A	0xEA020101  AND	R1, R2, R1, LSL #0
0x036E	0x6001    STR	R1, [R0, #0]
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 455 :: 		}
L_end_SPI_Hal_StartTransfer:
0x0370	0x4770    BX	LR
; end of __Lib_SPI_012_SPI_Hal_StartTransfer
_OLED_PowerOff:
;OLED_driver.c, 88 :: 		void OLED_PowerOff(void)
;OLED_driver.c, 90 :: 		OLED_Pwr_bit = 0;
0x0F70	0x2100    MOVS	R1, #0
0x0F72	0xB249    SXTB	R1, R1
0x0F74	0x4801    LDR	R0, [PC, #4]
0x0F76	0x6001    STR	R1, [R0, #0]
;OLED_driver.c, 91 :: 		}
L_end_OLED_PowerOff:
0x0F78	0x4770    BX	LR
0x0F7A	0xBF00    NOP
0x0F7C	0x103443FE  	PTC_PDOR+0
; end of _OLED_PowerOff
_Delay_1ms:
;__Lib_Delays.c, 41 :: 		void Delay_1ms() {
;__Lib_Delays.c, 42 :: 		Delay_ms(1);
0x0F14	0xF649473E  MOVW	R7, #39998
0x0F18	0xF2C00700  MOVT	R7, #0
0x0F1C	0xBF00    NOP
0x0F1E	0xBF00    NOP
L_Delay_1ms14:
0x0F20	0x1E7F    SUBS	R7, R7, #1
0x0F22	0xD1FD    BNE	L_Delay_1ms14
0x0F24	0xBF00    NOP
0x0F26	0xBF00    NOP
0x0F28	0xBF00    NOP
;__Lib_Delays.c, 43 :: 		}
L_end_Delay_1ms:
0x0F2A	0x4770    BX	LR
; end of _Delay_1ms
_OLED_PowerOn:
;OLED_driver.c, 79 :: 		void OLED_PowerOn(void)
;OLED_driver.c, 81 :: 		OLED_Pwr_bit = 1;
0x0E90	0x2101    MOVS	R1, #1
0x0E92	0xB249    SXTB	R1, R1
0x0E94	0x4801    LDR	R0, [PC, #4]
0x0E96	0x6001    STR	R1, [R0, #0]
;OLED_driver.c, 82 :: 		}
L_end_OLED_PowerOn:
0x0E98	0x4770    BX	LR
0x0E9A	0xBF00    NOP
0x0E9C	0x103443FE  	PTC_PDOR+0
; end of _OLED_PowerOn
_OLED_SendCmd:
;OLED_driver.c, 106 :: 		)
; isFirst start address is: 4 (R1)
; cmd start address is: 0 (R0)
0x0EA0	0xB081    SUB	SP, SP, #4
0x0EA2	0xF8CDE000  STR	LR, [SP, #0]
; isFirst end address is: 4 (R1)
; cmd end address is: 0 (R0)
; cmd start address is: 0 (R0)
; isFirst start address is: 4 (R1)
;OLED_driver.c, 108 :: 		if ( isFirst )
0x0EA6	0xB121    CBZ	R1, L_OLED_SendCmd0
; isFirst end address is: 4 (R1)
;OLED_driver.c, 110 :: 		OLED_DC_bit = 0;
0x0EA8	0x2300    MOVS	R3, #0
0x0EAA	0xB25B    SXTB	R3, R3
0x0EAC	0x4A0B    LDR	R2, [PC, #44]
0x0EAE	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 111 :: 		}
0x0EB0	0xE003    B	L_OLED_SendCmd1
L_OLED_SendCmd0:
;OLED_driver.c, 114 :: 		OLED_DC_bit = 1;
0x0EB2	0x2301    MOVS	R3, #1
0x0EB4	0xB25B    SXTB	R3, R3
0x0EB6	0x4A09    LDR	R2, [PC, #36]
0x0EB8	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 115 :: 		}
L_OLED_SendCmd1:
;OLED_driver.c, 117 :: 		OLED_CS_bit = 0;
0x0EBA	0x2300    MOVS	R3, #0
0x0EBC	0xB25B    SXTB	R3, R3
0x0EBE	0x4A08    LDR	R2, [PC, #32]
0x0EC0	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 119 :: 		SPI_Write((uint8_t)cmd);
0x0EC2	0xB2C0    UXTB	R0, R0
; cmd end address is: 0 (R0)
0x0EC4	0xF7FFFA8E  BL	_SPI_Write+0
;OLED_driver.c, 121 :: 		OLED_CS_bit = 1;
0x0EC8	0x2301    MOVS	R3, #1
0x0ECA	0xB25B    SXTB	R3, R3
0x0ECC	0x4A04    LDR	R2, [PC, #16]
0x0ECE	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 123 :: 		return OLED_STATUS_SUCCESS;
0x0ED0	0x2000    MOVS	R0, #0
;OLED_driver.c, 124 :: 		}
L_end_OLED_SendCmd:
0x0ED2	0xF8DDE000  LDR	LR, [SP, #0]
0x0ED6	0xB001    ADD	SP, SP, #4
0x0ED8	0x4770    BX	LR
0x0EDA	0xBF00    NOP
0x0EDC	0x183C43FE  	PTD_PDOR+0
0x0EE0	0x085043FE  	PTB_PDOR+0
; end of _OLED_SendCmd
_SPI_Write:
;__Lib_SPI_012.c, 639 :: 		void SPI_Write(unsigned int data_out) {
; data_out start address is: 0 (R0)
0x03E4	0xB081    SUB	SP, SP, #4
0x03E6	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_012.c, 640 :: 		SPI_Wr_Ptr(data_out);
; data_out end address is: 0 (R0)
0x03EA	0x4C03    LDR	R4, [PC, #12]
0x03EC	0x6824    LDR	R4, [R4, #0]
0x03EE	0x47A0    BLX	R4
;__Lib_SPI_012.c, 641 :: 		}
L_end_SPI_Write:
0x03F0	0xF8DDE000  LDR	LR, [SP, #0]
0x03F4	0xB001    ADD	SP, SP, #4
0x03F6	0x4770    BX	LR
0x03F8	0x48501FFF  	_SPI_Wr_Ptr+0
; end of _SPI_Write
_SPI0_Write:
;__Lib_SPI_012.c, 522 :: 		void SPI0_Write(unsigned int dataOut) {
; dataOut start address is: 0 (R0)
0x02FC	0xB081    SUB	SP, SP, #4
0x02FE	0xF8CDE000  STR	LR, [SP, #0]
; dataOut end address is: 0 (R0)
; dataOut start address is: 0 (R0)
;__Lib_SPI_012.c, 524 :: 		SPI_Hal_WriteBlocking(&SPI0_MCR, _SPI_CFG_CMD_CONT_PCS_DIS | _SPI_CFG_CMD_CTAS_CTAR0 | _SPI_CFG_CMD_EOQ_NONLAST | _SPI_CFG_CMD_CTCNT_CLEAR, dataOut);
0x0302	0xB282    UXTH	R2, R0
; dataOut end address is: 0 (R0)
0x0304	0xF04F6180  MOV	R1, #67108864
0x0308	0x4803    LDR	R0, [PC, #12]
0x030A	0xF7FFFF71  BL	__Lib_SPI_012_SPI_Hal_WriteBlocking+0
;__Lib_SPI_012.c, 525 :: 		}
L_end_SPI0_Write:
0x030E	0xF8DDE000  LDR	LR, [SP, #0]
0x0312	0xB001    ADD	SP, SP, #4
0x0314	0x4770    BX	LR
0x0316	0xBF00    NOP
0x0318	0xC0004002  	SPI0_MCR+0
; end of _SPI0_Write
__Lib_SPI_012_SPI_Hal_WriteBlocking:
;__Lib_SPI_012.c, 508 :: 		static void SPI_Hal_WriteBlocking(unsigned long* spiBase, unsigned long cmdConfig, unsigned int _data) {
; _data start address is: 8 (R2)
; cmdConfig start address is: 4 (R1)
; spiBase start address is: 0 (R0)
; _data end address is: 8 (R2)
; cmdConfig end address is: 4 (R1)
; spiBase end address is: 0 (R0)
; spiBase start address is: 0 (R0)
; cmdConfig start address is: 4 (R1)
; _data start address is: 8 (R2)
;__Lib_SPI_012.c, 510 :: 		*(spiBase + SPI_SR_OFFSET) |= 1ul << SPI_SR_TCF_SHIFT;
0x01F0	0xF200042C  ADDW	R4, R0, #44
0x01F4	0x6823    LDR	R3, [R4, #0]
0x01F6	0xF0434300  ORR	R3, R3, #-2147483648
0x01FA	0x6023    STR	R3, [R4, #0]
;__Lib_SPI_012.c, 512 :: 		*(spiBase + SPI_PUSHR_OFFSET) = cmdConfig | ((unsigned long)_data);
0x01FC	0xF2000434  ADDW	R4, R0, #52
0x0200	0xB293    UXTH	R3, R2
; _data end address is: 8 (R2)
0x0202	0xEA410303  ORR	R3, R1, R3, LSL #0
; cmdConfig end address is: 4 (R1)
0x0206	0x6023    STR	R3, [R4, #0]
; spiBase end address is: 0 (R0)
;__Lib_SPI_012.c, 514 :: 		while((*(spiBase + SPI_SR_OFFSET)).B31 == 0)
L___Lib_SPI_012_SPI_Hal_WriteBlocking20:
; spiBase start address is: 0 (R0)
0x0208	0xF200032C  ADDW	R3, R0, #44
0x020C	0x681C    LDR	R4, [R3, #0]
0x020E	0xF3C473C0  UBFX	R3, R4, #31, #1
0x0212	0xB903    CBNZ	R3, L___Lib_SPI_012_SPI_Hal_WriteBlocking21
;__Lib_SPI_012.c, 516 :: 		}
; spiBase end address is: 0 (R0)
0x0214	0xE7F8    B	L___Lib_SPI_012_SPI_Hal_WriteBlocking20
L___Lib_SPI_012_SPI_Hal_WriteBlocking21:
;__Lib_SPI_012.c, 517 :: 		}
L_end_SPI_Hal_WriteBlocking:
0x0216	0x4770    BX	LR
; end of __Lib_SPI_012_SPI_Hal_WriteBlocking
_SPI1_Write:
;__Lib_SPI_012.c, 527 :: 		void SPI1_Write(unsigned int dataOut) {
; dataOut start address is: 0 (R0)
0x0410	0xB081    SUB	SP, SP, #4
0x0412	0xF8CDE000  STR	LR, [SP, #0]
; dataOut end address is: 0 (R0)
; dataOut start address is: 0 (R0)
;__Lib_SPI_012.c, 529 :: 		SPI_Hal_WriteBlocking(&SPI1_MCR, _SPI_CFG_CMD_CONT_PCS_DIS | _SPI_CFG_CMD_CTAS_CTAR0 | _SPI_CFG_CMD_EOQ_NONLAST | _SPI_CFG_CMD_CTCNT_CLEAR, dataOut);
0x0416	0xB282    UXTH	R2, R0
; dataOut end address is: 0 (R0)
0x0418	0xF04F6180  MOV	R1, #67108864
0x041C	0x4803    LDR	R0, [PC, #12]
0x041E	0xF7FFFEE7  BL	__Lib_SPI_012_SPI_Hal_WriteBlocking+0
;__Lib_SPI_012.c, 530 :: 		}
L_end_SPI1_Write:
0x0422	0xF8DDE000  LDR	LR, [SP, #0]
0x0426	0xB001    ADD	SP, SP, #4
0x0428	0x4770    BX	LR
0x042A	0xBF00    NOP
0x042C	0xD0004002  	SPI1_MCR+0
; end of _SPI1_Write
_SPI2_Write:
;__Lib_SPI_012.c, 532 :: 		void SPI2_Write(unsigned int dataOut) {
; dataOut start address is: 0 (R0)
0x0430	0xB081    SUB	SP, SP, #4
0x0432	0xF8CDE000  STR	LR, [SP, #0]
; dataOut end address is: 0 (R0)
; dataOut start address is: 0 (R0)
;__Lib_SPI_012.c, 534 :: 		SPI_Hal_WriteBlocking(&SPI2_MCR, _SPI_CFG_CMD_CONT_PCS_DIS | _SPI_CFG_CMD_CTAS_CTAR0 | _SPI_CFG_CMD_EOQ_NONLAST | _SPI_CFG_CMD_CTCNT_CLEAR, dataOut);
0x0436	0xB282    UXTH	R2, R0
; dataOut end address is: 0 (R0)
0x0438	0xF04F6180  MOV	R1, #67108864
0x043C	0x4803    LDR	R0, [PC, #12]
0x043E	0xF7FFFED7  BL	__Lib_SPI_012_SPI_Hal_WriteBlocking+0
;__Lib_SPI_012.c, 535 :: 		}
L_end_SPI2_Write:
0x0442	0xF8DDE000  LDR	LR, [SP, #0]
0x0446	0xB001    ADD	SP, SP, #4
0x0448	0x4770    BX	LR
0x044A	0xBF00    NOP
0x044C	0xC000400A  	SPI2_MCR+0
; end of _SPI2_Write
_UART0_Write:
;__Lib_UART_012345.c, 295 :: 		void UART0_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x0390	0xB081    SUB	SP, SP, #4
0x0392	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 296 :: 		UART_Hal_WriteChar(&UART0_BDH, _data);
0x0396	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0398	0x4803    LDR	R0, [PC, #12]
0x039A	0xF7FFFF19  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 297 :: 		}
L_end_UART0_Write:
0x039E	0xF8DDE000  LDR	LR, [SP, #0]
0x03A2	0xB001    ADD	SP, SP, #4
0x03A4	0x4770    BX	LR
0x03A6	0xBF00    NOP
0x03A8	0xA0004006  	UART0_BDH+0
; end of _UART0_Write
__Lib_UART_012345_UART_Hal_WriteChar:
;__Lib_UART_012345.c, 276 :: 		static void UART_Hal_WriteChar(unsigned char* uartBase, unsigned _data) {
; _data start address is: 4 (R1)
; uartBase start address is: 0 (R0)
0x01D0	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; uartBase end address is: 0 (R0)
; uartBase start address is: 0 (R0)
; _data start address is: 4 (R1)
0x01D2	0xF8AD1000  STRH	R1, [SP, #0]
; uartBase end address is: 0 (R0)
; _data end address is: 4 (R1)
0x01D6	0x4601    MOV	R1, R0
0x01D8	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_012345.c, 283 :: 		while((*(uartBase + UART_S1_OFFSET)).B7 == 0) // bit TDRE
L___Lib_UART_012345_UART_Hal_WriteChar17:
; _data start address is: 0 (R0)
; uartBase start address is: 4 (R1)
0x01DC	0x1D0A    ADDS	R2, R1, #4
0x01DE	0x7813    LDRB	R3, [R2, #0]
0x01E0	0xF3C312C0  UBFX	R2, R3, #7, #1
0x01E4	0xB902    CBNZ	R2, L___Lib_UART_012345_UART_Hal_WriteChar18
;__Lib_UART_012345.c, 285 :: 		}
0x01E6	0xE7F9    B	L___Lib_UART_012345_UART_Hal_WriteChar17
L___Lib_UART_012345_UART_Hal_WriteChar18:
;__Lib_UART_012345.c, 289 :: 		*(uartBase + UART_D_OFFSET) = _data;
0x01E8	0x1DCA    ADDS	R2, R1, #7
; uartBase end address is: 4 (R1)
0x01EA	0x7010    STRB	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_012345.c, 290 :: 		}
L_end_UART_Hal_WriteChar:
0x01EC	0xB001    ADD	SP, SP, #4
0x01EE	0x4770    BX	LR
; end of __Lib_UART_012345_UART_Hal_WriteChar
_UART1_Write:
;__Lib_UART_012345.c, 299 :: 		void UART1_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x03AC	0xB081    SUB	SP, SP, #4
0x03AE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 300 :: 		UART_Hal_WriteChar(&UART1_BDH, _data);
0x03B2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03B4	0x4803    LDR	R0, [PC, #12]
0x03B6	0xF7FFFF0B  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 301 :: 		}
L_end_UART1_Write:
0x03BA	0xF8DDE000  LDR	LR, [SP, #0]
0x03BE	0xB001    ADD	SP, SP, #4
0x03C0	0x4770    BX	LR
0x03C2	0xBF00    NOP
0x03C4	0xB0004006  	UART1_BDH+0
; end of _UART1_Write
_UART2_Write:
;__Lib_UART_012345.c, 303 :: 		void UART2_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x03C8	0xB081    SUB	SP, SP, #4
0x03CA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 304 :: 		UART_Hal_WriteChar(&UART2_BDH, _data);
0x03CE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03D0	0x4803    LDR	R0, [PC, #12]
0x03D2	0xF7FFFEFD  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 305 :: 		}
L_end_UART2_Write:
0x03D6	0xF8DDE000  LDR	LR, [SP, #0]
0x03DA	0xB001    ADD	SP, SP, #4
0x03DC	0x4770    BX	LR
0x03DE	0xBF00    NOP
0x03E0	0xC0004006  	UART2_BDH+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_012345.c, 307 :: 		void UART3_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x0374	0xB081    SUB	SP, SP, #4
0x0376	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 308 :: 		UART_Hal_WriteChar(&UART3_BDH, _data);
0x037A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x037C	0x4803    LDR	R0, [PC, #12]
0x037E	0xF7FFFF27  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 309 :: 		}
L_end_UART3_Write:
0x0382	0xF8DDE000  LDR	LR, [SP, #0]
0x0386	0xB001    ADD	SP, SP, #4
0x0388	0x4770    BX	LR
0x038A	0xBF00    NOP
0x038C	0xD0004006  	UART3_BDH+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_012345.c, 311 :: 		void UART4_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x02E0	0xB081    SUB	SP, SP, #4
0x02E2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 312 :: 		UART_Hal_WriteChar(&UART4_BDH, _data);
0x02E6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x02E8	0x4803    LDR	R0, [PC, #12]
0x02EA	0xF7FFFF71  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 313 :: 		}
L_end_UART4_Write:
0x02EE	0xF8DDE000  LDR	LR, [SP, #0]
0x02F2	0xB001    ADD	SP, SP, #4
0x02F4	0x4770    BX	LR
0x02F6	0xBF00    NOP
0x02F8	0xA000400E  	UART4_BDH+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_012345.c, 315 :: 		void UART5_Write(unsigned _data) {
; _data start address is: 0 (R0)
0x0348	0xB081    SUB	SP, SP, #4
0x034A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_012345.c, 316 :: 		UART_Hal_WriteChar(&UART5_BDH, _data);
0x034E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0350	0x4803    LDR	R0, [PC, #12]
0x0352	0xF7FFFF3D  BL	__Lib_UART_012345_UART_Hal_WriteChar+0
;__Lib_UART_012345.c, 317 :: 		}
L_end_UART5_Write:
0x0356	0xF8DDE000  LDR	LR, [SP, #0]
0x035A	0xB001    ADD	SP, SP, #4
0x035C	0x4770    BX	LR
0x035E	0xBF00    NOP
0x0360	0xB000400E  	UART5_BDH+0
; end of _UART5_Write
_OLED_DrawImage:
;OLED_driver.c, 599 :: 		oled_status_t OLED_DrawImage (const uint8_t* image, uint8_t xCrd, uint8_t yCrd)
; yCrd start address is: 8 (R2)
; xCrd start address is: 4 (R1)
; image start address is: 0 (R0)
0x1718	0xB084    SUB	SP, SP, #16
0x171A	0xF8CDE000  STR	LR, [SP, #0]
; yCrd end address is: 8 (R2)
; xCrd end address is: 4 (R1)
; image end address is: 0 (R0)
; image start address is: 0 (R0)
; xCrd start address is: 4 (R1)
; yCrd start address is: 8 (R2)
;OLED_driver.c, 601 :: 		oled_status_t status = OLED_STATUS_SUCCESS;
;OLED_driver.c, 605 :: 		ptr = image;
; ptr start address is: 12 (R3)
0x171E	0x4603    MOV	R3, R0
;OLED_driver.c, 607 :: 		ptr += 2;
0x1720	0x1C9C    ADDS	R4, R3, #2
; ptr end address is: 12 (R3)
;OLED_driver.c, 608 :: 		height = *ptr;
0x1722	0x7825    LDRB	R5, [R4, #0]
; height start address is: 20 (R5)
0x1724	0xB2ED    UXTB	R5, R5
;OLED_driver.c, 609 :: 		ptr++;
0x1726	0x1C64    ADDS	R4, R4, #1
;OLED_driver.c, 610 :: 		height += (*ptr) << 8;
0x1728	0x7823    LDRB	R3, [R4, #0]
0x172A	0x021B    LSLS	R3, R3, #8
0x172C	0xB29B    UXTH	R3, R3
0x172E	0x18ED    ADDS	R5, R5, R3
0x1730	0xB2AD    UXTH	R5, R5
;OLED_driver.c, 612 :: 		ptr++;
0x1732	0x1C64    ADDS	R4, R4, #1
;OLED_driver.c, 613 :: 		width = *ptr;
0x1734	0x7826    LDRB	R6, [R4, #0]
; width start address is: 24 (R6)
0x1736	0xB2F6    UXTB	R6, R6
;OLED_driver.c, 614 :: 		ptr++;
0x1738	0x1C63    ADDS	R3, R4, #1
;OLED_driver.c, 615 :: 		width += (*ptr)<<8;
0x173A	0x781B    LDRB	R3, [R3, #0]
0x173C	0x021B    LSLS	R3, R3, #8
0x173E	0xB29B    UXTH	R3, R3
0x1740	0x18F3    ADDS	R3, R6, R3
0x1742	0xB29B    UXTH	R3, R3
0x1744	0xB29E    UXTH	R6, R3
;OLED_driver.c, 618 :: 		if AreCoordsNotValid( xCrd, yCrd, width, height )
0x1746	0x18CB    ADDS	R3, R1, R3
0x1748	0xB29B    UXTH	R3, R3
0x174A	0x1E5B    SUBS	R3, R3, #1
0x174C	0xB29B    UXTH	R3, R3
0x174E	0x2B60    CMP	R3, #96
0x1750	0xD80B    BHI	L_OLED_DrawImage70
0x1752	0x2900    CMP	R1, #0
0x1754	0xD309    BCC	L_OLED_DrawImage70
0x1756	0x1953    ADDS	R3, R2, R5
0x1758	0xB29B    UXTH	R3, R3
0x175A	0x1E5B    SUBS	R3, R3, #1
0x175C	0xB29B    UXTH	R3, R3
0x175E	0x2B60    CMP	R3, #96
0x1760	0xD803    BHI	L_OLED_DrawImage70
0x1762	0x2A00    CMP	R2, #0
0x1764	0xD301    BCC	L_OLED_DrawImage70
0x1766	0x2300    MOVS	R3, #0
0x1768	0xE000    B	L_OLED_DrawImage69
L_OLED_DrawImage70:
0x176A	0x2301    MOVS	R3, #1
L_OLED_DrawImage69:
0x176C	0xB103    CBZ	R3, L_OLED_DrawImage71
; image end address is: 0 (R0)
;OLED_driver.c, 621 :: 		}
0x176E	0xE013    B	L_OLED_DrawImage72
L_OLED_DrawImage71:
;OLED_driver.c, 625 :: 		OLED_Swap( screenBuf, (const uint8_t*)( image ) + 6 , width * height );
; image start address is: 0 (R0)
0x1770	0xFB06F405  MUL	R4, R6, R5
0x1774	0x1D83    ADDS	R3, R0, #6
; image end address is: 0 (R0)
0x1776	0xF8AD5004  STRH	R5, [SP, #4]
0x177A	0xF88D2008  STRB	R2, [SP, #8]
0x177E	0xF88D100C  STRB	R1, [SP, #12]
0x1782	0xB2A2    UXTH	R2, R4
0x1784	0x4619    MOV	R1, R3
0x1786	0x4814    LDR	R0, [PC, #80]
0x1788	0xF7FFFBAC  BL	OLED_driver_OLED_Swap+0
0x178C	0xF89D100C  LDRB	R1, [SP, #12]
0x1790	0xF89D2008  LDRB	R2, [SP, #8]
0x1794	0xF8BD5004  LDRH	R5, [SP, #4]
;OLED_driver.c, 629 :: 		}
L_OLED_DrawImage72:
;OLED_driver.c, 632 :: 		SetBorders( xCrd, yCrd, width, height );
0x1798	0xF8AD6004  STRH	R6, [SP, #4]
0x179C	0xF8AD5006  STRH	R5, [SP, #6]
0x17A0	0xB2EB    UXTB	R3, R5
0x17A2	0xB2C8    UXTB	R0, R1
0x17A4	0xB2D1    UXTB	R1, R2
; yCrd end address is: 8 (R2)
0x17A6	0xB2F2    UXTB	R2, R6
; xCrd end address is: 4 (R1)
0x17A8	0xF7FFFD26  BL	OLED_driver_SetBorders+0
0x17AC	0xF8BD5006  LDRH	R5, [SP, #6]
0x17B0	0xF8BD6004  LDRH	R6, [SP, #4]
;OLED_driver.c, 635 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendData( (const uint8_t*)screenBuf, width * height * OLED_BYTES_PER_PIXEL ) )
0x17B4	0xFB06F305  MUL	R3, R6, R5
0x17B8	0xB29B    UXTH	R3, R3
; height end address is: 20 (R5)
; width end address is: 24 (R6)
0x17BA	0x005B    LSLS	R3, R3, #1
0x17BC	0xB29B    UXTH	R3, R3
0x17BE	0xB299    UXTH	R1, R3
0x17C0	0x4805    LDR	R0, [PC, #20]
0x17C2	0xF7FFFBDD  BL	_OLED_SendData+0
0x17C6	0xB108    CBZ	R0, L_OLED_DrawImage73
;OLED_driver.c, 637 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x17C8	0x2002    MOVS	R0, #2
0x17CA	0xE000    B	L_end_OLED_DrawImage
;OLED_driver.c, 638 :: 		}
L_OLED_DrawImage73:
;OLED_driver.c, 640 :: 		return OLED_STATUS_SUCCESS;
0x17CC	0x2000    MOVS	R0, #0
;OLED_driver.c, 641 :: 		}
L_end_OLED_DrawImage:
0x17CE	0xF8DDE000  LDR	LR, [SP, #0]
0x17D2	0xB004    ADD	SP, SP, #16
0x17D4	0x4770    BX	LR
0x17D6	0xBF00    NOP
0x17D8	0x00221FFF  	OLED_driver_screenBuf+0
; end of _OLED_DrawImage
OLED_driver_OLED_Swap:
;OLED_driver.c, 572 :: 		)
; imgSize start address is: 8 (R2)
; imgSrc start address is: 4 (R1)
; imgDst start address is: 0 (R0)
0x0EE4	0xB293    UXTH	R3, R2
0x0EE6	0x460A    MOV	R2, R1
; imgSize end address is: 8 (R2)
; imgSrc end address is: 4 (R1)
; imgDst end address is: 0 (R0)
; imgDst start address is: 0 (R0)
; imgSrc start address is: 8 (R2)
; imgSize start address is: 12 (R3)
;OLED_driver.c, 575 :: 		for (var = 0; var < imgSize; var++)
; var start address is: 4 (R1)
0x0EE8	0x2100    MOVS	R1, #0
; imgDst end address is: 0 (R0)
; imgSrc end address is: 8 (R2)
; imgSize end address is: 12 (R3)
; var end address is: 4 (R1)
0x0EEA	0x4614    MOV	R4, R2
0x0EEC	0x4602    MOV	R2, R0
0x0EEE	0xB298    UXTH	R0, R3
L_OLED_driver_OLED_Swap66:
; var start address is: 4 (R1)
; imgSize start address is: 0 (R0)
; imgSrc start address is: 16 (R4)
; imgDst start address is: 8 (R2)
0x0EF0	0x4281    CMP	R1, R0
0x0EF2	0xD20D    BCS	L_OLED_driver_OLED_Swap67
;OLED_driver.c, 577 :: 		*imgDst = *imgSrc << 8;
0x0EF4	0x7823    LDRB	R3, [R4, #0]
0x0EF6	0x021B    LSLS	R3, R3, #8
0x0EF8	0x8013    STRH	R3, [R2, #0]
;OLED_driver.c, 578 :: 		imgSrc++;
0x0EFA	0x1C63    ADDS	R3, R4, #1
; imgSrc end address is: 16 (R4)
; imgSrc start address is: 20 (R5)
0x0EFC	0x461D    MOV	R5, R3
;OLED_driver.c, 579 :: 		*imgDst |= *imgSrc;
0x0EFE	0x781C    LDRB	R4, [R3, #0]
0x0F00	0x8813    LDRH	R3, [R2, #0]
0x0F02	0x4323    ORRS	R3, R4
0x0F04	0x8013    STRH	R3, [R2, #0]
;OLED_driver.c, 580 :: 		imgDst++;
0x0F06	0x1C92    ADDS	R2, R2, #2
;OLED_driver.c, 581 :: 		imgSrc++;
0x0F08	0x1C6B    ADDS	R3, R5, #1
; imgSrc end address is: 20 (R5)
; imgSrc start address is: 16 (R4)
0x0F0A	0x461C    MOV	R4, R3
;OLED_driver.c, 575 :: 		for (var = 0; var < imgSize; var++)
0x0F0C	0x1C49    ADDS	R1, R1, #1
;OLED_driver.c, 582 :: 		}
; imgSize end address is: 0 (R0)
; imgDst end address is: 8 (R2)
; imgSrc end address is: 16 (R4)
; var end address is: 4 (R1)
0x0F0E	0xE7EF    B	L_OLED_driver_OLED_Swap66
L_OLED_driver_OLED_Swap67:
;OLED_driver.c, 583 :: 		}
L_end_OLED_Swap:
0x0F10	0x4770    BX	LR
; end of OLED_driver_OLED_Swap
OLED_driver_SetBorders:
;OLED_driver.c, 536 :: 		)
0x11F8	0xB086    SUB	SP, SP, #24
0x11FA	0xF8CDE000  STR	LR, [SP, #0]
0x11FE	0xF88D0008  STRB	R0, [SP, #8]
0x1202	0xF88D100C  STRB	R1, [SP, #12]
0x1206	0xF88D2010  STRB	R2, [SP, #16]
0x120A	0xF88D3014  STRB	R3, [SP, #20]
;OLED_driver.c, 541 :: 		OLED_AdjustColumnOffset(xCrd);
0x120E	0xF89D4008  LDRB	R4, [SP, #8]
0x1212	0x3410    ADDS	R4, #16
0x1214	0xF88D4008  STRB	R4, [SP, #8]
;OLED_driver.c, 542 :: 		OLED_AdjustRowOffset(yCrd);
0x1218	0xF89D400C  LDRB	R4, [SP, #12]
0x121C	0xF88D400C  STRB	R4, [SP, #12]
;OLED_driver.c, 544 :: 		while (1)
L_OLED_driver_SetBorders63:
;OLED_driver.c, 546 :: 		oledStatus = OLED_STATUS_SUCCESS;
0x1220	0x2400    MOVS	R4, #0
0x1222	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 548 :: 		oledStatus |= OLED_SendCmd( OLED_CMD_SET_COLUMN, FIRST_BYTE );
0x1226	0x2101    MOVS	R1, #1
0x1228	0x2015    MOVS	R0, #21
0x122A	0xF7FFFE39  BL	_OLED_SendCmd+0
0x122E	0xF89D4004  LDRB	R4, [SP, #4]
0x1232	0x4304    ORRS	R4, R0
0x1234	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 549 :: 		oledStatus |= OLED_SendCmd( xCrd, OTHER_BYTE );
0x1238	0x2100    MOVS	R1, #0
0x123A	0xF89D0008  LDRB	R0, [SP, #8]
0x123E	0xF7FFFE2F  BL	_OLED_SendCmd+0
0x1242	0xF89D4004  LDRB	R4, [SP, #4]
0x1246	0x4304    ORRS	R4, R0
0x1248	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 550 :: 		oledStatus |= OLED_SendCmd( xCrd + (width-1), OTHER_BYTE );
0x124C	0xF89D4010  LDRB	R4, [SP, #16]
0x1250	0x1E65    SUBS	R5, R4, #1
0x1252	0xB22D    SXTH	R5, R5
0x1254	0xF89D4008  LDRB	R4, [SP, #8]
0x1258	0x1964    ADDS	R4, R4, R5
0x125A	0xB224    SXTH	R4, R4
0x125C	0x2100    MOVS	R1, #0
0x125E	0xB220    SXTH	R0, R4
0x1260	0xF7FFFE1E  BL	_OLED_SendCmd+0
0x1264	0xF89D4004  LDRB	R4, [SP, #4]
0x1268	0x4304    ORRS	R4, R0
0x126A	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 551 :: 		oledStatus |= OLED_SendCmd( OLED_CMD_SET_ROW, FIRST_BYTE );
0x126E	0x2101    MOVS	R1, #1
0x1270	0x2075    MOVS	R0, #117
0x1272	0xF7FFFE15  BL	_OLED_SendCmd+0
0x1276	0xF89D4004  LDRB	R4, [SP, #4]
0x127A	0x4304    ORRS	R4, R0
0x127C	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 552 :: 		oledStatus |= OLED_SendCmd( yCrd, OTHER_BYTE );
0x1280	0x2100    MOVS	R1, #0
0x1282	0xF89D000C  LDRB	R0, [SP, #12]
0x1286	0xF7FFFE0B  BL	_OLED_SendCmd+0
0x128A	0xF89D4004  LDRB	R4, [SP, #4]
0x128E	0x4304    ORRS	R4, R0
0x1290	0xF88D4004  STRB	R4, [SP, #4]
;OLED_driver.c, 553 :: 		oledStatus |= OLED_SendCmd( yCrd + (height-1), OTHER_BYTE );
0x1294	0xF89D4014  LDRB	R4, [SP, #20]
0x1298	0x1E65    SUBS	R5, R4, #1
0x129A	0xB22D    SXTH	R5, R5
0x129C	0xF89D400C  LDRB	R4, [SP, #12]
0x12A0	0x1964    ADDS	R4, R4, R5
0x12A2	0xB224    SXTH	R4, R4
0x12A4	0x2100    MOVS	R1, #0
0x12A6	0xB220    SXTH	R0, R4
0x12A8	0xF7FFFDFA  BL	_OLED_SendCmd+0
0x12AC	0xF89D4004  LDRB	R4, [SP, #4]
0x12B0	0x4304    ORRS	R4, R0
0x12B2	0xB2E4    UXTB	R4, R4
;OLED_driver.c, 555 :: 		if ( OLED_STATUS_SUCCESS == oledStatus)
0x12B4	0x2C00    CMP	R4, #0
0x12B6	0xD100    BNE	L_OLED_driver_SetBorders65
;OLED_driver.c, 557 :: 		break;
0x12B8	0xE000    B	L_OLED_driver_SetBorders64
;OLED_driver.c, 558 :: 		}
L_OLED_driver_SetBorders65:
;OLED_driver.c, 559 :: 		}
0x12BA	0xE7B1    B	L_OLED_driver_SetBorders63
L_OLED_driver_SetBorders64:
;OLED_driver.c, 560 :: 		}
L_end_SetBorders:
0x12BC	0xF8DDE000  LDR	LR, [SP, #0]
0x12C0	0xB006    ADD	SP, SP, #24
0x12C2	0x4770    BX	LR
; end of OLED_driver_SetBorders
_OLED_SendData:
;OLED_driver.c, 348 :: 		)
0x0F80	0xB084    SUB	SP, SP, #16
0x0F82	0xF8CDE000  STR	LR, [SP, #0]
0x0F86	0x9002    STR	R0, [SP, #8]
0x0F88	0x9103    STR	R1, [SP, #12]
;OLED_driver.c, 353 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendCmd( OLED_CMD_WRITERAM, FIRST_BYTE ) )
0x0F8A	0x2101    MOVS	R1, #1
0x0F8C	0x205C    MOVS	R0, #92
0x0F8E	0xF7FFFF87  BL	_OLED_SendCmd+0
0x0F92	0xB108    CBZ	R0, L_OLED_SendData41
;OLED_driver.c, 355 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x0F94	0x2002    MOVS	R0, #2
0x0F96	0xE01C    B	L_end_OLED_SendData
;OLED_driver.c, 356 :: 		}
L_OLED_SendData41:
;OLED_driver.c, 359 :: 		OLED_DC_bit = 1;
0x0F98	0x2301    MOVS	R3, #1
0x0F9A	0xB25B    SXTB	R3, R3
0x0F9C	0x4A0F    LDR	R2, [PC, #60]
0x0F9E	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 360 :: 		OLED_CS_bit = 0;
0x0FA0	0x2300    MOVS	R3, #0
0x0FA2	0xB25B    SXTB	R3, R3
0x0FA4	0x4A0E    LDR	R2, [PC, #56]
0x0FA6	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 362 :: 		bufPtr = dataToSend;
; bufPtr start address is: 0 (R0)
0x0FA8	0x9802    LDR	R0, [SP, #8]
; bufPtr end address is: 0 (R0)
;OLED_driver.c, 364 :: 		while(dataSize--)
L_OLED_SendData42:
; bufPtr start address is: 0 (R0)
0x0FAA	0x9B03    LDR	R3, [SP, #12]
0x0FAC	0x9A03    LDR	R2, [SP, #12]
0x0FAE	0x1E52    SUBS	R2, R2, #1
0x0FB0	0x9203    STR	R2, [SP, #12]
0x0FB2	0xB14B    CBZ	R3, L_OLED_SendData43
;OLED_driver.c, 366 :: 		SPI_Write(*(bufPtr++));
0x0FB4	0x7802    LDRB	R2, [R0, #0]
0x0FB6	0x9001    STR	R0, [SP, #4]
0x0FB8	0xB290    UXTH	R0, R2
0x0FBA	0xF7FFFA13  BL	_SPI_Write+0
0x0FBE	0x9801    LDR	R0, [SP, #4]
0x0FC0	0x1C42    ADDS	R2, R0, #1
; bufPtr end address is: 0 (R0)
; bufPtr start address is: 4 (R1)
0x0FC2	0x4611    MOV	R1, R2
;OLED_driver.c, 367 :: 		}
0x0FC4	0x4608    MOV	R0, R1
; bufPtr end address is: 4 (R1)
0x0FC6	0xE7F0    B	L_OLED_SendData42
L_OLED_SendData43:
;OLED_driver.c, 369 :: 		OLED_CS_bit = 1;
0x0FC8	0x2301    MOVS	R3, #1
0x0FCA	0xB25B    SXTB	R3, R3
0x0FCC	0x4A04    LDR	R2, [PC, #16]
0x0FCE	0x6013    STR	R3, [R2, #0]
;OLED_driver.c, 370 :: 		return OLED_STATUS_SUCCESS;
0x0FD0	0x2000    MOVS	R0, #0
;OLED_driver.c, 371 :: 		}
L_end_OLED_SendData:
0x0FD2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FD6	0xB004    ADD	SP, SP, #16
0x0FD8	0x4770    BX	LR
0x0FDA	0xBF00    NOP
0x0FDC	0x183C43FE  	PTD_PDOR+0
0x0FE0	0x085043FE  	PTB_PDOR+0
; end of _OLED_SendData
_OLED_SetFont:
;OLED_driver.c, 647 :: 		void OLED_SetFont(const uint8_t *activeFont, uint16_t font_color, uint8_t font_orientation)
; font_orientation start address is: 8 (R2)
; font_color start address is: 4 (R1)
; activeFont start address is: 0 (R0)
; font_orientation end address is: 8 (R2)
; font_color end address is: 4 (R1)
; activeFont end address is: 0 (R0)
; activeFont start address is: 0 (R0)
; font_color start address is: 4 (R1)
; font_orientation start address is: 8 (R2)
;OLED_driver.c, 649 :: 		_font = activeFont;
0x1668	0x4B11    LDR	R3, [PC, #68]
0x166A	0x6018    STR	R0, [R3, #0]
;OLED_driver.c, 650 :: 		_fontFirstChar = activeFont[2] + (activeFont[3] << 8);
0x166C	0x1C83    ADDS	R3, R0, #2
0x166E	0x781C    LDRB	R4, [R3, #0]
0x1670	0x1CC3    ADDS	R3, R0, #3
0x1672	0x781B    LDRB	R3, [R3, #0]
0x1674	0x021B    LSLS	R3, R3, #8
0x1676	0xB29B    UXTH	R3, R3
0x1678	0x18E4    ADDS	R4, R4, R3
0x167A	0x4B0E    LDR	R3, [PC, #56]
0x167C	0x801C    STRH	R4, [R3, #0]
;OLED_driver.c, 651 :: 		_fontLastChar = activeFont[4] + (activeFont[5] << 8);
0x167E	0x1D03    ADDS	R3, R0, #4
0x1680	0x781C    LDRB	R4, [R3, #0]
0x1682	0x1D43    ADDS	R3, R0, #5
0x1684	0x781B    LDRB	R3, [R3, #0]
0x1686	0x021B    LSLS	R3, R3, #8
0x1688	0xB29B    UXTH	R3, R3
0x168A	0x18E4    ADDS	R4, R4, R3
0x168C	0x4B0A    LDR	R3, [PC, #40]
0x168E	0x801C    STRH	R4, [R3, #0]
;OLED_driver.c, 652 :: 		_fontHeight = activeFont[6];
0x1690	0x1D83    ADDS	R3, R0, #6
; activeFont end address is: 0 (R0)
0x1692	0x781C    LDRB	R4, [R3, #0]
0x1694	0x4B09    LDR	R3, [PC, #36]
0x1696	0x801C    STRH	R4, [R3, #0]
;OLED_driver.c, 654 :: 		FontColor = font_color;
0x1698	0x4B09    LDR	R3, [PC, #36]
0x169A	0x8019    STRH	R1, [R3, #0]
; font_color end address is: 4 (R1)
;OLED_driver.c, 655 :: 		FontOrientation = font_orientation;
0x169C	0x4B09    LDR	R3, [PC, #36]
0x169E	0x701A    STRB	R2, [R3, #0]
; font_orientation end address is: 8 (R2)
;OLED_driver.c, 656 :: 		FontInitialized = 1;
0x16A0	0x2401    MOVS	R4, #1
0x16A2	0x4B09    LDR	R3, [PC, #36]
0x16A4	0x701C    STRB	R4, [R3, #0]
;OLED_driver.c, 657 :: 		ExternalFontSet = 0;
0x16A6	0x2400    MOVS	R4, #0
0x16A8	0x4B08    LDR	R3, [PC, #32]
0x16AA	0x701C    STRB	R4, [R3, #0]
;OLED_driver.c, 658 :: 		}
L_end_OLED_SetFont:
0x16AC	0x4770    BX	LR
0x16AE	0xBF00    NOP
0x16B0	0x482C1FFF  	OLED_driver__font+0
0x16B4	0x48261FFF  	OLED_driver__fontFirstChar+0
0x16B8	0x48281FFF  	OLED_driver__fontLastChar+0
0x16BC	0x48301FFF  	OLED_driver__fontHeight+0
0x16C0	0x48321FFF  	OLED_driver_FontColor+0
0x16C4	0x482A1FFF  	OLED_driver_FontOrientation+0
0x16C8	0x00051FFF  	OLED_driver_FontInitialized+0
0x16CC	0x482B1FFF  	_ExternalFontSet+0
; end of _OLED_SetFont
_OLED_WriteText:
;OLED_driver.c, 665 :: 		void OLED_WriteText(uint8_t *text, uint16_t x, uint16_t y) {
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x1828	0xB083    SUB	SP, SP, #12
0x182A	0xF8CDE000  STR	LR, [SP, #0]
0x182E	0x9002    STR	R0, [SP, #8]
; y end address is: 8 (R2)
; x end address is: 4 (R1)
; x start address is: 4 (R1)
; y start address is: 8 (R2)
;OLED_driver.c, 668 :: 		if (x >= OLED_SCREEN_WIDTH)
0x1830	0x2960    CMP	R1, #96
0x1832	0xD300    BCC	L_OLED_WriteText74
; x end address is: 4 (R1)
; y end address is: 8 (R2)
;OLED_driver.c, 669 :: 		return;
0x1834	0xE01D    B	L_end_OLED_WriteText
L_OLED_WriteText74:
;OLED_driver.c, 670 :: 		if (y >= OLED_SCREEN_HEIGHT)
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x1836	0x2A60    CMP	R2, #96
0x1838	0xD300    BCC	L_OLED_WriteText75
; x end address is: 4 (R1)
; y end address is: 8 (R2)
;OLED_driver.c, 671 :: 		return;
0x183A	0xE01A    B	L_end_OLED_WriteText
L_OLED_WriteText75:
;OLED_driver.c, 673 :: 		i = 0;
; y start address is: 8 (R2)
; x start address is: 4 (R1)
0x183C	0x2300    MOVS	R3, #0
0x183E	0xF8AD3004  STRH	R3, [SP, #4]
;OLED_driver.c, 674 :: 		OLED_MoveCursor(x, y);
0x1842	0xB288    UXTH	R0, R1
; y end address is: 8 (R2)
0x1844	0xB291    UXTH	R1, R2
; x end address is: 4 (R1)
0x1846	0xF7FFFBCD  BL	OLED_driver_OLED_MoveCursor+0
;OLED_driver.c, 675 :: 		while (text[i])
L_OLED_WriteText76:
0x184A	0xF8BD4004  LDRH	R4, [SP, #4]
0x184E	0x9B02    LDR	R3, [SP, #8]
0x1850	0x191B    ADDS	R3, R3, R4
0x1852	0x781B    LDRB	R3, [R3, #0]
0x1854	0xB16B    CBZ	R3, L_OLED_WriteText77
;OLED_driver.c, 676 :: 		OLED_WriteChar(text[i++]);
0x1856	0xF8BD4004  LDRH	R4, [SP, #4]
0x185A	0x9B02    LDR	R3, [SP, #8]
0x185C	0x191B    ADDS	R3, R3, R4
0x185E	0x781B    LDRB	R3, [R3, #0]
0x1860	0xB298    UXTH	R0, R3
0x1862	0xF7FFFBC9  BL	OLED_driver_OLED_WriteChar+0
0x1866	0xF8BD3004  LDRH	R3, [SP, #4]
0x186A	0x1C5B    ADDS	R3, R3, #1
0x186C	0xF8AD3004  STRH	R3, [SP, #4]
0x1870	0xE7EB    B	L_OLED_WriteText76
L_OLED_WriteText77:
;OLED_driver.c, 677 :: 		}
L_end_OLED_WriteText:
0x1872	0xF8DDE000  LDR	LR, [SP, #0]
0x1876	0xB003    ADD	SP, SP, #12
0x1878	0x4770    BX	LR
; end of _OLED_WriteText
OLED_driver_OLED_MoveCursor:
;OLED_driver.c, 683 :: 		static void OLED_MoveCursor(uint16_t _x, uint16_t _y)
; _y start address is: 4 (R1)
; _x start address is: 0 (R0)
; _y end address is: 4 (R1)
; _x end address is: 0 (R0)
; _x start address is: 0 (R0)
; _y start address is: 4 (R1)
;OLED_driver.c, 685 :: 		x_cord = _x;
0x0FE4	0x4A02    LDR	R2, [PC, #8]
0x0FE6	0x8010    STRH	R0, [R2, #0]
; _x end address is: 0 (R0)
;OLED_driver.c, 686 :: 		y_cord = _y;
0x0FE8	0x4A02    LDR	R2, [PC, #8]
0x0FEA	0x8011    STRH	R1, [R2, #0]
; _y end address is: 4 (R1)
;OLED_driver.c, 687 :: 		}
L_end_OLED_MoveCursor:
0x0FEC	0x4770    BX	LR
0x0FEE	0xBF00    NOP
0x0FF0	0x48221FFF  	OLED_driver_x_cord+0
0x0FF4	0x48241FFF  	OLED_driver_y_cord+0
; end of OLED_driver_OLED_MoveCursor
OLED_driver_OLED_WriteChar:
;OLED_driver.c, 693 :: 		static void OLED_WriteChar(uint16_t ch)
; ch start address is: 0 (R0)
0x0FF8	0xB086    SUB	SP, SP, #24
0x0FFA	0xF8CDE000  STR	LR, [SP, #0]
0x0FFE	0xB287    UXTH	R7, R0
; ch end address is: 0 (R0)
; ch start address is: 28 (R7)
;OLED_driver.c, 695 :: 		uint8_t chWidth = 0;
;OLED_driver.c, 697 :: 		uint16_t x = 0, y;
; x start address is: 20 (R5)
0x1000	0xF2400500  MOVW	R5, #0
;OLED_driver.c, 698 :: 		uint8_t temp = 0, mask;
; temp start address is: 24 (R6)
0x1004	0x2600    MOVS	R6, #0
;OLED_driver.c, 704 :: 		if(FontInitialized == 0)
0x1006	0x4972    LDR	R1, [PC, #456]
0x1008	0x7809    LDRB	R1, [R1, #0]
0x100A	0xB949    CBNZ	R1, L_OLED_driver_OLED_WriteChar78
;OLED_driver.c, 706 :: 		OLED_SetFont(guiFont_Tahoma_8_Regular, OLED_COLOR_BLACK, FO_HORIZONTAL); //default font
0x100C	0x4971    LDR	R1, [PC, #452]
0x100E	0x2200    MOVS	R2, #0
0x1010	0x4608    MOV	R0, R1
0x1012	0xF2400100  MOVW	R1, #0
0x1016	0xF000FB27  BL	_OLED_SetFont+0
;OLED_driver.c, 707 :: 		FontInitialized = 1;
0x101A	0x2201    MOVS	R2, #1
0x101C	0x496C    LDR	R1, [PC, #432]
0x101E	0x700A    STRB	R2, [R1, #0]
;OLED_driver.c, 708 :: 		}
L_OLED_driver_OLED_WriteChar78:
;OLED_driver.c, 710 :: 		if (ch < _fontFirstChar)
0x1020	0x496D    LDR	R1, [PC, #436]
0x1022	0x8809    LDRH	R1, [R1, #0]
0x1024	0x428F    CMP	R7, R1
0x1026	0xD200    BCS	L_OLED_driver_OLED_WriteChar79
; ch end address is: 28 (R7)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
;OLED_driver.c, 712 :: 		return;
0x1028	0xE0CE    B	L_end_OLED_WriteChar
;OLED_driver.c, 713 :: 		}
L_OLED_driver_OLED_WriteChar79:
;OLED_driver.c, 714 :: 		if (ch > _fontLastChar)
; x start address is: 20 (R5)
; temp start address is: 24 (R6)
; ch start address is: 28 (R7)
0x102A	0x496C    LDR	R1, [PC, #432]
0x102C	0x8809    LDRH	R1, [R1, #0]
0x102E	0x428F    CMP	R7, R1
0x1030	0xD900    BLS	L_OLED_driver_OLED_WriteChar80
; ch end address is: 28 (R7)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
;OLED_driver.c, 716 :: 		return;
0x1032	0xE0C9    B	L_end_OLED_WriteChar
;OLED_driver.c, 717 :: 		}
L_OLED_driver_OLED_WriteChar80:
;OLED_driver.c, 720 :: 		tmp = (ch - _fontFirstChar) << 2;
; x start address is: 20 (R5)
; temp start address is: 24 (R6)
; ch start address is: 28 (R7)
0x1034	0x4968    LDR	R1, [PC, #416]
0x1036	0x8809    LDRH	R1, [R1, #0]
0x1038	0x1A79    SUB	R1, R7, R1
0x103A	0xB289    UXTH	R1, R1
; ch end address is: 28 (R7)
0x103C	0x008A    LSLS	R2, R1, #2
0x103E	0xB292    UXTH	R2, R2
;OLED_driver.c, 721 :: 		pChTable = _font + 8 + tmp;
0x1040	0x4C67    LDR	R4, [PC, #412]
0x1042	0x6821    LDR	R1, [R4, #0]
0x1044	0x3108    ADDS	R1, #8
0x1046	0x188B    ADDS	R3, R1, R2
;OLED_driver.c, 722 :: 		chWidth = *pChTable;
0x1048	0x7818    LDRB	R0, [R3, #0]
; chWidth start address is: 0 (R0)
;OLED_driver.c, 724 :: 		offset = (uint32_t) pChTable[1] + ((uint32_t)pChTable[2] << 8) + ((uint32_t)pChTable[3] << 16);
0x104A	0x1C59    ADDS	R1, R3, #1
0x104C	0x7809    LDRB	R1, [R1, #0]
0x104E	0xB2CA    UXTB	R2, R1
0x1050	0x1C99    ADDS	R1, R3, #2
0x1052	0x7809    LDRB	R1, [R1, #0]
0x1054	0x0209    LSLS	R1, R1, #8
0x1056	0x1852    ADDS	R2, R2, R1
0x1058	0x1CD9    ADDS	R1, R3, #3
0x105A	0x7809    LDRB	R1, [R1, #0]
0x105C	0x0409    LSLS	R1, R1, #16
0x105E	0x1852    ADDS	R2, R2, R1
;OLED_driver.c, 726 :: 		pChBitMap = _font + offset;
0x1060	0x4621    MOV	R1, R4
0x1062	0x6809    LDR	R1, [R1, #0]
0x1064	0x188C    ADDS	R4, R1, R2
; pChBitMap start address is: 16 (R4)
;OLED_driver.c, 728 :: 		if ((FontOrientation == FO_HORIZONTAL) || (FontOrientation == FO_VERTICAL_COLUMN))
0x1066	0x495F    LDR	R1, [PC, #380]
0x1068	0x7809    LDRB	R1, [R1, #0]
0x106A	0xB121    CBZ	R1, L_OLED_driver_OLED_WriteChar105
0x106C	0x495D    LDR	R1, [PC, #372]
0x106E	0x7809    LDRB	R1, [R1, #0]
0x1070	0x2902    CMP	R1, #2
0x1072	0xD000    BEQ	L_OLED_driver_OLED_WriteChar104
0x1074	0xE057    B	L_OLED_driver_OLED_WriteChar83
L_OLED_driver_OLED_WriteChar105:
L_OLED_driver_OLED_WriteChar104:
;OLED_driver.c, 730 :: 		y = y_cord;
0x1076	0x495C    LDR	R1, [PC, #368]
; y start address is: 12 (R3)
0x1078	0x880B    LDRH	R3, [R1, #0]
;OLED_driver.c, 731 :: 		for (yCnt = 0; yCnt < _fontHeight; yCnt++)
; yCnt start address is: 8 (R2)
0x107A	0x2200    MOVS	R2, #0
; pChBitMap end address is: 16 (R4)
; chWidth end address is: 0 (R0)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0x107C	0x46A0    MOV	R8, R4
0x107E	0xB2AC    UXTH	R4, R5
L_OLED_driver_OLED_WriteChar84:
; yCnt start address is: 8 (R2)
; y start address is: 12 (R3)
; pChBitMap start address is: 32 (R8)
; chWidth start address is: 0 (R0)
; temp start address is: 24 (R6)
; x start address is: 16 (R4)
0x1080	0x495A    LDR	R1, [PC, #360]
0x1082	0x8809    LDRH	R1, [R1, #0]
0x1084	0x428A    CMP	R2, R1
0x1086	0xD244    BCS	L_OLED_driver_OLED_WriteChar85
; x end address is: 16 (R4)
;OLED_driver.c, 733 :: 		x = x_cord;
0x1088	0x4959    LDR	R1, [PC, #356]
; x start address is: 20 (R5)
0x108A	0x880D    LDRH	R5, [R1, #0]
;OLED_driver.c, 734 :: 		mask = 0;
; mask start address is: 28 (R7)
0x108C	0x2700    MOVS	R7, #0
;OLED_driver.c, 735 :: 		for (xCnt = 0; xCnt < chWidth; xCnt++)
; xCnt start address is: 16 (R4)
0x108E	0x2400    MOVS	R4, #0
; chWidth end address is: 0 (R0)
; pChBitMap end address is: 32 (R8)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
; mask end address is: 28 (R7)
; xCnt end address is: 16 (R4)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
L_OLED_driver_OLED_WriteChar87:
; xCnt start address is: 16 (R4)
; mask start address is: 28 (R7)
; x start address is: 20 (R5)
; temp start address is: 24 (R6)
; chWidth start address is: 0 (R0)
; pChBitMap start address is: 32 (R8)
; y start address is: 12 (R3)
; yCnt start address is: 8 (R2)
0x1090	0x4284    CMP	R4, R0
0x1092	0xD238    BCS	L_OLED_driver_OLED_WriteChar88
;OLED_driver.c, 737 :: 		if (mask == 0)
0x1094	0xB92F    CBNZ	R7, L_OLED_driver_OLED_WriteChar106
; temp end address is: 24 (R6)
; mask end address is: 28 (R7)
;OLED_driver.c, 739 :: 		temp = *pChBitMap++;
0x1096	0xF8986000  LDRB	R6, [R8, #0]
; temp start address is: 24 (R6)
0x109A	0xF1080801  ADD	R8, R8, #1
;OLED_driver.c, 740 :: 		mask = 0x01;
; mask start address is: 28 (R7)
0x109E	0x2701    MOVS	R7, #1
; pChBitMap end address is: 32 (R8)
; temp end address is: 24 (R6)
; mask end address is: 28 (R7)
;OLED_driver.c, 741 :: 		}
0x10A0	0xE7FF    B	L_OLED_driver_OLED_WriteChar90
L_OLED_driver_OLED_WriteChar106:
;OLED_driver.c, 737 :: 		if (mask == 0)
;OLED_driver.c, 741 :: 		}
L_OLED_driver_OLED_WriteChar90:
;OLED_driver.c, 743 :: 		if (temp & mask)
; mask start address is: 28 (R7)
; pChBitMap start address is: 32 (R8)
; temp start address is: 24 (R6)
0x10A2	0xEA060107  AND	R1, R6, R7, LSL #0
0x10A6	0xB2C9    UXTB	R1, R1
0x10A8	0xB331    CBZ	R1, L_OLED_driver_OLED_WriteChar91
;OLED_driver.c, 745 :: 		OLED_DrawPixel(x, y, FontColor);
0x10AA	0x4952    LDR	R1, [PC, #328]
0x10AC	0x8809    LDRH	R1, [R1, #0]
0x10AE	0xF88D6004  STRB	R6, [SP, #4]
0x10B2	0xF8CD8008  STR	R8, [SP, #8]
0x10B6	0xF88D700C  STRB	R7, [SP, #12]
0x10BA	0xF88D200D  STRB	R2, [SP, #13]
0x10BE	0xF8AD300E  STRH	R3, [SP, #14]
0x10C2	0xF88D0010  STRB	R0, [SP, #16]
0x10C6	0xF8AD5012  STRH	R5, [SP, #18]
0x10CA	0xF88D4014  STRB	R4, [SP, #20]
0x10CE	0xB28A    UXTH	R2, R1
0x10D0	0xB219    SXTH	R1, R3
0x10D2	0xB228    SXTH	R0, R5
0x10D4	0xF7FFFC4E  BL	_OLED_DrawPixel+0
0x10D8	0xF89D4014  LDRB	R4, [SP, #20]
0x10DC	0xF8BD5012  LDRH	R5, [SP, #18]
0x10E0	0xF89D0010  LDRB	R0, [SP, #16]
0x10E4	0xF8BD300E  LDRH	R3, [SP, #14]
0x10E8	0xF89D200D  LDRB	R2, [SP, #13]
0x10EC	0xF89D700C  LDRB	R7, [SP, #12]
0x10F0	0xF8DD8008  LDR	R8, [SP, #8]
0x10F4	0xF89D6004  LDRB	R6, [SP, #4]
;OLED_driver.c, 746 :: 		}
L_OLED_driver_OLED_WriteChar91:
;OLED_driver.c, 748 :: 		x++;
0x10F8	0x1C6D    ADDS	R5, R5, #1
0x10FA	0xB2AD    UXTH	R5, R5
;OLED_driver.c, 749 :: 		mask <<= 1;
0x10FC	0x0079    LSLS	R1, R7, #1
0x10FE	0xB2CF    UXTB	R7, R1
;OLED_driver.c, 735 :: 		for (xCnt = 0; xCnt < chWidth; xCnt++)
0x1100	0x1C64    ADDS	R4, R4, #1
0x1102	0xB2E4    UXTB	R4, R4
;OLED_driver.c, 750 :: 		}
; mask end address is: 28 (R7)
; xCnt end address is: 16 (R4)
0x1104	0xE7C4    B	L_OLED_driver_OLED_WriteChar87
L_OLED_driver_OLED_WriteChar88:
;OLED_driver.c, 751 :: 		y++;
0x1106	0x1C5B    ADDS	R3, R3, #1
0x1108	0xB29B    UXTH	R3, R3
;OLED_driver.c, 731 :: 		for (yCnt = 0; yCnt < _fontHeight; yCnt++)
0x110A	0x1C52    ADDS	R2, R2, #1
0x110C	0xB2D2    UXTB	R2, R2
;OLED_driver.c, 752 :: 		}
0x110E	0xB2AC    UXTH	R4, R5
; chWidth end address is: 0 (R0)
; pChBitMap end address is: 32 (R8)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
; yCnt end address is: 8 (R2)
0x1110	0xE7B6    B	L_OLED_driver_OLED_WriteChar84
L_OLED_driver_OLED_WriteChar85:
;OLED_driver.c, 755 :: 		if (FontOrientation == FO_HORIZONTAL)
; x start address is: 16 (R4)
0x1112	0x4934    LDR	R1, [PC, #208]
0x1114	0x7809    LDRB	R1, [R1, #0]
0x1116	0xB919    CBNZ	R1, L_OLED_driver_OLED_WriteChar92
; y end address is: 12 (R3)
;OLED_driver.c, 757 :: 		x_cord = x + 1;
0x1118	0x1C62    ADDS	R2, R4, #1
; x end address is: 16 (R4)
0x111A	0x4935    LDR	R1, [PC, #212]
0x111C	0x800A    STRH	R2, [R1, #0]
;OLED_driver.c, 758 :: 		}
0x111E	0xE001    B	L_OLED_driver_OLED_WriteChar93
L_OLED_driver_OLED_WriteChar92:
;OLED_driver.c, 761 :: 		y_cord = y; // visini nego sirini, nema potrebe da se dodaje jedan pixel kao
; y start address is: 12 (R3)
0x1120	0x4931    LDR	R1, [PC, #196]
0x1122	0x800B    STRH	R3, [R1, #0]
; y end address is: 12 (R3)
;OLED_driver.c, 762 :: 		}
L_OLED_driver_OLED_WriteChar93:
;OLED_driver.c, 763 :: 		}
0x1124	0xE050    B	L_OLED_driver_OLED_WriteChar94
L_OLED_driver_OLED_WriteChar83:
;OLED_driver.c, 766 :: 		y = x_cord;
; x start address is: 20 (R5)
; temp start address is: 24 (R6)
; chWidth start address is: 0 (R0)
; pChBitMap start address is: 16 (R4)
0x1126	0x4932    LDR	R1, [PC, #200]
; y start address is: 12 (R3)
0x1128	0x880B    LDRH	R3, [R1, #0]
;OLED_driver.c, 767 :: 		for (yCnt = 0; yCnt < _fontHeight; yCnt++)
; yCnt start address is: 8 (R2)
0x112A	0x2200    MOVS	R2, #0
; pChBitMap end address is: 16 (R4)
; chWidth end address is: 0 (R0)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
L_OLED_driver_OLED_WriteChar95:
; yCnt start address is: 8 (R2)
; y start address is: 12 (R3)
; pChBitMap start address is: 16 (R4)
; chWidth start address is: 0 (R0)
; temp start address is: 24 (R6)
; x start address is: 20 (R5)
0x112C	0x492F    LDR	R1, [PC, #188]
0x112E	0x8809    LDRH	R1, [R1, #0]
0x1130	0x428A    CMP	R2, R1
0x1132	0xD246    BCS	L_OLED_driver_OLED_WriteChar96
; x end address is: 20 (R5)
;OLED_driver.c, 769 :: 		x = y_cord;
0x1134	0x492C    LDR	R1, [PC, #176]
; x start address is: 20 (R5)
0x1136	0x880D    LDRH	R5, [R1, #0]
;OLED_driver.c, 770 :: 		mask = 0;
; mask start address is: 28 (R7)
0x1138	0x2700    MOVS	R7, #0
;OLED_driver.c, 771 :: 		for (xCnt = 0; xCnt < chWidth; xCnt++)
; xCnt start address is: 4 (R1)
0x113A	0x2100    MOVS	R1, #0
; pChBitMap end address is: 16 (R4)
; xCnt end address is: 4 (R1)
; chWidth end address is: 0 (R0)
; temp end address is: 24 (R6)
; x end address is: 20 (R5)
; mask end address is: 28 (R7)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0x113C	0x46A0    MOV	R8, R4
0x113E	0xB2CC    UXTB	R4, R1
L_OLED_driver_OLED_WriteChar98:
; xCnt start address is: 16 (R4)
; mask start address is: 28 (R7)
; x start address is: 20 (R5)
; temp start address is: 24 (R6)
; chWidth start address is: 0 (R0)
; pChBitMap start address is: 32 (R8)
; y start address is: 12 (R3)
; yCnt start address is: 8 (R2)
0x1140	0x4284    CMP	R4, R0
0x1142	0xD238    BCS	L_OLED_driver_OLED_WriteChar99
;OLED_driver.c, 773 :: 		if (mask == 0)
0x1144	0xB92F    CBNZ	R7, L_OLED_driver_OLED_WriteChar107
; temp end address is: 24 (R6)
; mask end address is: 28 (R7)
;OLED_driver.c, 775 :: 		temp = *pChBitMap++;
0x1146	0xF8986000  LDRB	R6, [R8, #0]
; temp start address is: 24 (R6)
0x114A	0xF1080801  ADD	R8, R8, #1
;OLED_driver.c, 776 :: 		mask = 0x01;
; mask start address is: 28 (R7)
0x114E	0x2701    MOVS	R7, #1
; pChBitMap end address is: 32 (R8)
; temp end address is: 24 (R6)
; mask end address is: 28 (R7)
;OLED_driver.c, 777 :: 		}
0x1150	0xE7FF    B	L_OLED_driver_OLED_WriteChar101
L_OLED_driver_OLED_WriteChar107:
;OLED_driver.c, 773 :: 		if (mask == 0)
;OLED_driver.c, 777 :: 		}
L_OLED_driver_OLED_WriteChar101:
;OLED_driver.c, 779 :: 		if (temp & mask)
; mask start address is: 28 (R7)
; pChBitMap start address is: 32 (R8)
; temp start address is: 24 (R6)
0x1152	0xEA060107  AND	R1, R6, R7, LSL #0
0x1156	0xB2C9    UXTB	R1, R1
0x1158	0xB331    CBZ	R1, L_OLED_driver_OLED_WriteChar102
;OLED_driver.c, 781 :: 		OLED_DrawPixel(y, x, FontColor);
0x115A	0x4926    LDR	R1, [PC, #152]
0x115C	0x8809    LDRH	R1, [R1, #0]
0x115E	0xF88D6004  STRB	R6, [SP, #4]
0x1162	0xF8CD8008  STR	R8, [SP, #8]
0x1166	0xF88D700C  STRB	R7, [SP, #12]
0x116A	0xF88D200D  STRB	R2, [SP, #13]
0x116E	0xF8AD300E  STRH	R3, [SP, #14]
0x1172	0xF88D0010  STRB	R0, [SP, #16]
0x1176	0xF8AD5012  STRH	R5, [SP, #18]
0x117A	0xF88D4014  STRB	R4, [SP, #20]
0x117E	0xB28A    UXTH	R2, R1
0x1180	0xB229    SXTH	R1, R5
0x1182	0xB218    SXTH	R0, R3
0x1184	0xF7FFFBF6  BL	_OLED_DrawPixel+0
0x1188	0xF89D4014  LDRB	R4, [SP, #20]
0x118C	0xF8BD5012  LDRH	R5, [SP, #18]
0x1190	0xF89D0010  LDRB	R0, [SP, #16]
0x1194	0xF8BD300E  LDRH	R3, [SP, #14]
0x1198	0xF89D200D  LDRB	R2, [SP, #13]
0x119C	0xF89D700C  LDRB	R7, [SP, #12]
0x11A0	0xF8DD8008  LDR	R8, [SP, #8]
0x11A4	0xF89D6004  LDRB	R6, [SP, #4]
;OLED_driver.c, 782 :: 		}
L_OLED_driver_OLED_WriteChar102:
;OLED_driver.c, 784 :: 		x--;
0x11A8	0x1E6D    SUBS	R5, R5, #1
0x11AA	0xB2AD    UXTH	R5, R5
;OLED_driver.c, 785 :: 		mask <<= 1;
0x11AC	0x0079    LSLS	R1, R7, #1
0x11AE	0xB2CF    UXTB	R7, R1
;OLED_driver.c, 771 :: 		for (xCnt = 0; xCnt < chWidth; xCnt++)
0x11B0	0x1C64    ADDS	R4, R4, #1
0x11B2	0xB2E4    UXTB	R4, R4
;OLED_driver.c, 786 :: 		}
; mask end address is: 28 (R7)
; xCnt end address is: 16 (R4)
0x11B4	0xE7C4    B	L_OLED_driver_OLED_WriteChar98
L_OLED_driver_OLED_WriteChar99:
;OLED_driver.c, 788 :: 		y++;
0x11B6	0x1C5B    ADDS	R3, R3, #1
0x11B8	0xB29B    UXTH	R3, R3
;OLED_driver.c, 767 :: 		for (yCnt = 0; yCnt < _fontHeight; yCnt++)
0x11BA	0x1C52    ADDS	R2, R2, #1
0x11BC	0xB2D2    UXTB	R2, R2
;OLED_driver.c, 789 :: 		}
; chWidth end address is: 0 (R0)
; pChBitMap end address is: 32 (R8)
; temp end address is: 24 (R6)
; y end address is: 12 (R3)
; yCnt end address is: 8 (R2)
0x11BE	0x4644    MOV	R4, R8
0x11C0	0xE7B4    B	L_OLED_driver_OLED_WriteChar95
L_OLED_driver_OLED_WriteChar96:
;OLED_driver.c, 792 :: 		y_cord = x - 1;
0x11C2	0x1E6A    SUBS	R2, R5, #1
; x end address is: 20 (R5)
0x11C4	0x4908    LDR	R1, [PC, #32]
0x11C6	0x800A    STRH	R2, [R1, #0]
;OLED_driver.c, 793 :: 		}
L_OLED_driver_OLED_WriteChar94:
;OLED_driver.c, 794 :: 		}
L_end_OLED_WriteChar:
0x11C8	0xF8DDE000  LDR	LR, [SP, #0]
0x11CC	0xB006    ADD	SP, SP, #24
0x11CE	0x4770    BX	LR
0x11D0	0x00051FFF  	OLED_driver_FontInitialized+0
0x11D4	0x68460000  	_guiFont_Tahoma_8_Regular+0
0x11D8	0x48261FFF  	OLED_driver__fontFirstChar+0
0x11DC	0x48281FFF  	OLED_driver__fontLastChar+0
0x11E0	0x482C1FFF  	OLED_driver__font+0
0x11E4	0x482A1FFF  	OLED_driver_FontOrientation+0
0x11E8	0x48241FFF  	OLED_driver_y_cord+0
0x11EC	0x48301FFF  	OLED_driver__fontHeight+0
0x11F0	0x48221FFF  	OLED_driver_x_cord+0
0x11F4	0x48321FFF  	OLED_driver_FontColor+0
; end of OLED_driver_OLED_WriteChar
_OLED_DrawPixel:
;OLED_driver.c, 495 :: 		)
; color start address is: 8 (R2)
; yCrd start address is: 4 (R1)
; xCrd start address is: 0 (R0)
0x0974	0xB082    SUB	SP, SP, #8
0x0976	0xF8CDE000  STR	LR, [SP, #0]
; color end address is: 8 (R2)
; yCrd end address is: 4 (R1)
; xCrd end address is: 0 (R0)
; xCrd start address is: 0 (R0)
; yCrd start address is: 4 (R1)
; color start address is: 8 (R2)
;OLED_driver.c, 498 :: 		if AreCoordsNotValid( xCrd, yCrd, 1, 1 )
0x097A	0x1C43    ADDS	R3, R0, #1
0x097C	0xB21B    SXTH	R3, R3
0x097E	0x1E5B    SUBS	R3, R3, #1
0x0980	0xB21B    SXTH	R3, R3
0x0982	0x2B60    CMP	R3, #96
0x0984	0xDC0B    BGT	L_OLED_DrawPixel59
0x0986	0x2800    CMP	R0, #0
0x0988	0xDB09    BLT	L_OLED_DrawPixel59
0x098A	0x1C4B    ADDS	R3, R1, #1
0x098C	0xB21B    SXTH	R3, R3
0x098E	0x1E5B    SUBS	R3, R3, #1
0x0990	0xB21B    SXTH	R3, R3
0x0992	0x2B60    CMP	R3, #96
0x0994	0xDC03    BGT	L_OLED_DrawPixel59
0x0996	0x2900    CMP	R1, #0
0x0998	0xDB01    BLT	L_OLED_DrawPixel59
0x099A	0x2300    MOVS	R3, #0
0x099C	0xE000    B	L_OLED_DrawPixel58
L_OLED_DrawPixel59:
0x099E	0x2301    MOVS	R3, #1
L_OLED_DrawPixel58:
0x09A0	0xB10B    CBZ	R3, L_OLED_DrawPixel60
; xCrd end address is: 0 (R0)
; yCrd end address is: 4 (R1)
; color end address is: 8 (R2)
;OLED_driver.c, 500 :: 		return OLED_STATUS_INIT_ERROR;
0x09A2	0x2003    MOVS	R0, #3
0x09A4	0xE022    B	L_end_OLED_DrawPixel
;OLED_driver.c, 501 :: 		}
L_OLED_DrawPixel60:
;OLED_driver.c, 505 :: 		uint16_t dot = color;
; color start address is: 8 (R2)
; yCrd start address is: 4 (R1)
; xCrd start address is: 0 (R0)
0x09A6	0xF8AD2004  STRH	R2, [SP, #4]
; color end address is: 8 (R2)
;OLED_driver.c, 508 :: 		SetBorders( xCrd, yCrd, OLED_SCREEN_WIDTH, OLED_SCREEN_HEIGHT);
0x09AA	0x2360    MOVS	R3, #96
0x09AC	0x2260    MOVS	R2, #96
0x09AE	0xB2C9    UXTB	R1, R1
; yCrd end address is: 4 (R1)
0x09B0	0xB2C0    UXTB	R0, R0
; xCrd end address is: 0 (R0)
0x09B2	0xF000FC21  BL	OLED_driver_SetBorders+0
;OLED_driver.c, 510 :: 		OLED_SwapMe(dot);
0x09B6	0xF8BD3004  LDRH	R3, [SP, #4]
0x09BA	0xF403437F  AND	R3, R3, #65280
0x09BE	0xB29B    UXTH	R3, R3
0x09C0	0x0A1C    LSRS	R4, R3, #8
0x09C2	0xB2A4    UXTH	R4, R4
0x09C4	0xF8BD3004  LDRH	R3, [SP, #4]
0x09C8	0xF00303FF  AND	R3, R3, #255
0x09CC	0xB29B    UXTH	R3, R3
0x09CE	0x021B    LSLS	R3, R3, #8
0x09D0	0xB29B    UXTH	R3, R3
0x09D2	0xEA440303  ORR	R3, R4, R3, LSL #0
0x09D6	0xF8AD3004  STRH	R3, [SP, #4]
;OLED_driver.c, 513 :: 		if ( OLED_STATUS_SUCCESS != OLED_SendData( (uint8_t*)&dot, 2 ) )
0x09DA	0xAB01    ADD	R3, SP, #4
0x09DC	0x2102    MOVS	R1, #2
0x09DE	0x4618    MOV	R0, R3
0x09E0	0xF000FACE  BL	_OLED_SendData+0
0x09E4	0xB108    CBZ	R0, L_OLED_DrawPixel62
;OLED_driver.c, 515 :: 		return OLED_STATUS_PROTOCOL_ERROR;
0x09E6	0x2002    MOVS	R0, #2
0x09E8	0xE000    B	L_end_OLED_DrawPixel
;OLED_driver.c, 516 :: 		}
L_OLED_DrawPixel62:
;OLED_driver.c, 517 :: 		return OLED_STATUS_SUCCESS;
0x09EA	0x2000    MOVS	R0, #0
;OLED_driver.c, 519 :: 		}
L_end_OLED_DrawPixel:
0x09EC	0xF8DDE000  LDR	LR, [SP, #0]
0x09F0	0xB002    ADD	SP, SP, #8
0x09F2	0x4770    BX	LR
; end of _OLED_DrawPixel
_ADC0_Init:
;__Lib_ADC_01.c, 1813 :: 		void ADC0_Init() {
0x12E4	0xB081    SUB	SP, SP, #4
0x12E6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_ADC_01.c, 1814 :: 		ADC16_DRV_StructInitUserConfigDefault(&adcUserConfig);
0x12EA	0x4805    LDR	R0, [PC, #20]
0x12EC	0xF7FFFCB2  BL	_ADC16_DRV_StructInitUserConfigDefault+0
;__Lib_ADC_01.c, 1815 :: 		ADC16_DRV_Init(0, &adcUserConfig);
0x12F0	0x4903    LDR	R1, [PC, #12]
0x12F2	0x2000    MOVS	R0, #0
0x12F4	0xF7FFFC92  BL	_ADC16_DRV_Init+0
;__Lib_ADC_01.c, 1816 :: 		}
L_end_ADC0_Init:
0x12F8	0xF8DDE000  LDR	LR, [SP, #0]
0x12FC	0xB001    ADD	SP, SP, #4
0x12FE	0x4770    BX	LR
0x1300	0x48401FFF  	_adcUserConfig+0
; end of _ADC0_Init
_ADC16_DRV_StructInitUserConfigDefault:
;__Lib_ADC_01.c, 200 :: 		char ADC16_DRV_StructInitUserConfigDefault(adc16_converter_config_t *userConfigPtr)
; userConfigPtr start address is: 0 (R0)
; userConfigPtr end address is: 0 (R0)
; userConfigPtr start address is: 0 (R0)
;__Lib_ADC_01.c, 202 :: 		if ( !userConfigPtr )
0x0C54	0xB908    CBNZ	R0, L_ADC16_DRV_StructInitUserConfigDefault0
; userConfigPtr end address is: 0 (R0)
;__Lib_ADC_01.c, 204 :: 		return kStatus_ADC16_InvalidArgument;
0x0C56	0x2001    MOVS	R0, #1
0x0C58	0xE023    B	L_end_ADC16_DRV_StructInitUserConfigDefault
;__Lib_ADC_01.c, 205 :: 		}
L_ADC16_DRV_StructInitUserConfigDefault0:
;__Lib_ADC_01.c, 208 :: 		userConfigPtr->lowPowerEnable = true;
; userConfigPtr start address is: 0 (R0)
0x0C5A	0x2101    MOVS	R1, #1
0x0C5C	0x7001    STRB	R1, [R0, #0]
;__Lib_ADC_01.c, 209 :: 		userConfigPtr->clkDividerMode = kAdc16ClkDividerOf8;
0x0C5E	0x1C42    ADDS	R2, R0, #1
0x0C60	0x2103    MOVS	R1, #3
0x0C62	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 210 :: 		userConfigPtr->longSampleTimeEnable = true;
0x0C64	0x1C82    ADDS	R2, R0, #2
0x0C66	0x2101    MOVS	R1, #1
0x0C68	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 211 :: 		userConfigPtr->resolution = kAdc16ResolutionBitOfSingleEndAs12;
0x0C6A	0x1CC2    ADDS	R2, R0, #3
0x0C6C	0x2101    MOVS	R1, #1
0x0C6E	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 212 :: 		userConfigPtr->clkSrc = kAdc16ClkSrcOfAsynClk;
0x0C70	0x1D02    ADDS	R2, R0, #4
0x0C72	0x2103    MOVS	R1, #3
0x0C74	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 213 :: 		userConfigPtr->asyncClkEnable = true;
0x0C76	0x1D42    ADDS	R2, R0, #5
0x0C78	0x2101    MOVS	R1, #1
0x0C7A	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 214 :: 		userConfigPtr->highSpeedEnable = false;
0x0C7C	0x1D82    ADDS	R2, R0, #6
0x0C7E	0x2100    MOVS	R1, #0
0x0C80	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 215 :: 		userConfigPtr->longSampleCycleMode = kAdc16LongSampleCycleOf24;
0x0C82	0x1DC2    ADDS	R2, R0, #7
0x0C84	0x2100    MOVS	R1, #0
0x0C86	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 216 :: 		userConfigPtr->hwTriggerEnable = false;
0x0C88	0xF2000208  ADDW	R2, R0, #8
0x0C8C	0x2100    MOVS	R1, #0
0x0C8E	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 217 :: 		userConfigPtr->refVoltSrc = kAdc16RefVoltSrcOfVref;
0x0C90	0xF2000209  ADDW	R2, R0, #9
0x0C94	0x2100    MOVS	R1, #0
0x0C96	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 218 :: 		userConfigPtr->continuousConvEnable = false;
0x0C98	0xF200020A  ADDW	R2, R0, #10
; userConfigPtr end address is: 0 (R0)
0x0C9C	0x2100    MOVS	R1, #0
0x0C9E	0x7011    STRB	R1, [R2, #0]
;__Lib_ADC_01.c, 223 :: 		return kStatus_ADC16_Success;
0x0CA0	0x2000    MOVS	R0, #0
;__Lib_ADC_01.c, 224 :: 		}
L_end_ADC16_DRV_StructInitUserConfigDefault:
0x0CA2	0x4770    BX	LR
; end of _ADC16_DRV_StructInitUserConfigDefault
_ADC16_DRV_Init:
;__Lib_ADC_01.c, 687 :: 		adc16_status_t ADC16_DRV_Init(uint32_t instance, const adc16_converter_config_t *userConfigPtr)
; userConfigPtr start address is: 4 (R1)
; instance start address is: 0 (R0)
0x0C1C	0xB081    SUB	SP, SP, #4
0x0C1E	0xF8CDE000  STR	LR, [SP, #0]
0x0C22	0x460C    MOV	R4, R1
; userConfigPtr end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; userConfigPtr start address is: 16 (R4)
;__Lib_ADC_01.c, 690 :: 		ADC_Type * base = g_adcBase[instance];
0x0C24	0x0083    LSLS	R3, R0, #2
0x0C26	0x4A0A    LDR	R2, [PC, #40]
0x0C28	0x18D2    ADDS	R2, R2, R3
0x0C2A	0x6812    LDR	R2, [R2, #0]
; base start address is: 20 (R5)
0x0C2C	0x4615    MOV	R5, R2
;__Lib_ADC_01.c, 692 :: 		if (!userConfigPtr)
0x0C2E	0xB90C    CBNZ	R4, L_ADC16_DRV_Init7
; instance end address is: 0 (R0)
; userConfigPtr end address is: 16 (R4)
; base end address is: 20 (R5)
;__Lib_ADC_01.c, 694 :: 		return kStatus_ADC16_InvalidArgument;
0x0C30	0x2001    MOVS	R0, #1
0x0C32	0xE009    B	L_end_ADC16_DRV_Init
;__Lib_ADC_01.c, 695 :: 		}
L_ADC16_DRV_Init7:
;__Lib_ADC_01.c, 697 :: 		CLOCK_SYS_EnableAdcClock(instance);
; base start address is: 20 (R5)
; userConfigPtr start address is: 16 (R4)
; instance start address is: 0 (R0)
; instance end address is: 0 (R0)
0x0C34	0xF7FFFEDE  BL	_CLOCK_SYS_EnableAdcClock+0
;__Lib_ADC_01.c, 700 :: 		ADC16_HAL_Init(base);
0x0C38	0x4628    MOV	R0, R5
0x0C3A	0xF7FFFE61  BL	_ADC16_HAL_Init+0
;__Lib_ADC_01.c, 701 :: 		ADC16_HAL_ConfigConverter(base, userConfigPtr);
0x0C3E	0x4621    MOV	R1, R4
; userConfigPtr end address is: 16 (R4)
0x0C40	0x4628    MOV	R0, R5
; base end address is: 20 (R5)
0x0C42	0xF7FFFD6B  BL	_ADC16_HAL_ConfigConverter+0
;__Lib_ADC_01.c, 706 :: 		return kStatus_ADC16_Success;
0x0C46	0x2000    MOVS	R0, #0
;__Lib_ADC_01.c, 707 :: 		}
L_end_ADC16_DRV_Init:
0x0C48	0xF8DDE000  LDR	LR, [SP, #0]
0x0C4C	0xB001    ADD	SP, SP, #4
0x0C4E	0x4770    BX	LR
0x0C50	0x6FEC0000  	_g_adcBase+0
; end of _ADC16_DRV_Init
_CLOCK_SYS_EnableAdcClock:
;__Lib_ADC_01.c, 447 :: 		void CLOCK_SYS_EnableAdcClock(uint32_t instance)
; instance start address is: 0 (R0)
0x09F4	0xB081    SUB	SP, SP, #4
0x09F6	0xF8CDE000  STR	LR, [SP, #0]
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
;__Lib_ADC_01.c, 451 :: 		SIM_HAL_EnableClock(SIM, adcGateTable[instance]);
0x09FA	0x4905    LDR	R1, [PC, #20]
0x09FC	0x1809    ADDS	R1, R1, R0
; instance end address is: 0 (R0)
0x09FE	0x7809    LDRB	R1, [R1, #0]
0x0A00	0x4804    LDR	R0, [PC, #16]
0x0A02	0xF7FFFC8B  BL	__Lib_ADC_01_SIM_HAL_EnableClock+0
;__Lib_ADC_01.c, 452 :: 		}
L_end_CLOCK_SYS_EnableAdcClock:
0x0A06	0xF8DDE000  LDR	LR, [SP, #0]
0x0A0A	0xB001    ADD	SP, SP, #4
0x0A0C	0x4770    BX	LR
0x0A0E	0xBF00    NOP
0x0A10	0x03460000  	__Lib_ADC_01_adcGateTable+0
0x0A14	0x70004004  	#1074032640
; end of _CLOCK_SYS_EnableAdcClock
__Lib_ADC_01_SIM_HAL_EnableClock:
;__Lib_ADC_01.c, 428 :: 		static inline void SIM_HAL_EnableClock(SIM_Type * base, sim_clock_gate_name_t name)
; name start address is: 4 (R1)
; base start address is: 0 (R0)
; name end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; name start address is: 4 (R1)
;__Lib_ADC_01.c, 430 :: 		SIM_BWR_SCGC_BIT(base, name, 1U);
0x031C	0xF2410228  MOVW	R2, #4136
0x0320	0x1883    ADDS	R3, R0, R2
; base end address is: 0 (R0)
0x0322	0xB2CA    UXTB	R2, R1
0x0324	0x0952    LSRS	R2, R2, #5
0x0326	0x0092    LSLS	R2, R2, #2
0x0328	0x189A    ADDS	R2, R3, R2
0x032A	0xF1A24280  SUB	R2, R2, #1073741824
0x032E	0x0152    LSLS	R2, R2, #5
0x0330	0xF1024384  ADD	R3, R2, #1107296256
0x0334	0xB2CA    UXTB	R2, R1
; name end address is: 4 (R1)
0x0336	0xF002021F  AND	R2, R2, #31
0x033A	0x0092    LSLS	R2, R2, #2
0x033C	0x189B    ADDS	R3, R3, R2
0x033E	0xF04F0201  MOV	R2, #1
0x0342	0x601A    STR	R2, [R3, #0]
;__Lib_ADC_01.c, 431 :: 		}
L_end_SIM_HAL_EnableClock:
0x0344	0x4770    BX	LR
; end of __Lib_ADC_01_SIM_HAL_EnableClock
_ADC16_HAL_Init:
;__Lib_ADC_01.c, 483 :: 		void ADC16_HAL_Init(ADC_Type * base)
; base start address is: 0 (R0)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
;__Lib_ADC_01.c, 485 :: 		ADC_WR_CFG1(base, 0U);
0x0900	0xF2000208  ADDW	R2, R0, #8
0x0904	0x2100    MOVS	R1, #0
0x0906	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 486 :: 		ADC_WR_CFG2(base, 0U);
0x0908	0xF200020C  ADDW	R2, R0, #12
0x090C	0x2100    MOVS	R1, #0
0x090E	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 487 :: 		ADC_WR_CV1(base, 0U);
0x0910	0xF2000218  ADDW	R2, R0, #24
0x0914	0x2100    MOVS	R1, #0
0x0916	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 488 :: 		ADC_WR_CV2(base, 0U);
0x0918	0xF200021C  ADDW	R2, R0, #28
0x091C	0x2100    MOVS	R1, #0
0x091E	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 489 :: 		ADC_WR_SC2(base, 0U);
0x0920	0xF2000220  ADDW	R2, R0, #32
0x0924	0x2100    MOVS	R1, #0
0x0926	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 490 :: 		ADC_WR_SC3(base, 0U);
0x0928	0xF2000224  ADDW	R2, R0, #36
; base end address is: 0 (R0)
0x092C	0x2100    MOVS	R1, #0
0x092E	0x6011    STR	R1, [R2, #0]
;__Lib_ADC_01.c, 494 :: 		}
L_end_ADC16_HAL_Init:
0x0930	0x4770    BX	LR
; end of _ADC16_HAL_Init
_ADC16_HAL_ConfigConverter:
;__Lib_ADC_01.c, 595 :: 		void ADC16_HAL_ConfigConverter(ADC_Type * base, const adc16_converter_config_t *configPtr)
; configPtr start address is: 4 (R1)
; base start address is: 0 (R0)
; configPtr end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; configPtr start address is: 4 (R1)
;__Lib_ADC_01.c, 599 :: 		cfg1 = ADC_RD_CFG1(base);
0x071C	0xF2000208  ADDW	R2, R0, #8
0x0720	0x6812    LDR	R2, [R2, #0]
;__Lib_ADC_01.c, 604 :: 		| ADC_CFG1_ADICLK_MASK );
0x0722	0xB292    UXTH	R2, R2
0x0724	0xF0020300  AND	R3, R2, #0
0x0728	0xB29B    UXTH	R3, R3
; cfg1 start address is: 12 (R3)
;__Lib_ADC_01.c, 607 :: 		if (configPtr->lowPowerEnable)
0x072A	0x780A    LDRB	R2, [R1, #0]
0x072C	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter21
;__Lib_ADC_01.c, 609 :: 		cfg1 |= ADC_CFG1_ADLPC_MASK;
0x072E	0xF0430380  ORR	R3, R3, #128
0x0732	0xB29B    UXTH	R3, R3
; cfg1 end address is: 12 (R3)
;__Lib_ADC_01.c, 610 :: 		}
0x0734	0xE7FF    B	L_ADC16_HAL_ConfigConverter1
L__ADC16_HAL_ConfigConverter21:
;__Lib_ADC_01.c, 607 :: 		if (configPtr->lowPowerEnable)
;__Lib_ADC_01.c, 610 :: 		}
L_ADC16_HAL_ConfigConverter1:
;__Lib_ADC_01.c, 612 :: 		cfg1 |= ADC_CFG1_ADIV(configPtr->clkDividerMode);
; cfg1 start address is: 12 (R3)
0x0736	0x1C4A    ADDS	R2, R1, #1
0x0738	0x7812    LDRB	R2, [R2, #0]
0x073A	0x0152    LSLS	R2, R2, #5
0x073C	0xF0020260  AND	R2, R2, #96
0x0740	0xEA430202  ORR	R2, R3, R2, LSL #0
0x0744	0xB293    UXTH	R3, R2
;__Lib_ADC_01.c, 614 :: 		if (configPtr->longSampleTimeEnable)
0x0746	0x1C8A    ADDS	R2, R1, #2
0x0748	0x7812    LDRB	R2, [R2, #0]
0x074A	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter22
;__Lib_ADC_01.c, 616 :: 		cfg1 |= ADC_CFG1_ADLSMP_MASK;
0x074C	0xF0430310  ORR	R3, R3, #16
0x0750	0xB29B    UXTH	R3, R3
; cfg1 end address is: 12 (R3)
;__Lib_ADC_01.c, 617 :: 		}
0x0752	0xE7FF    B	L_ADC16_HAL_ConfigConverter2
L__ADC16_HAL_ConfigConverter22:
;__Lib_ADC_01.c, 614 :: 		if (configPtr->longSampleTimeEnable)
;__Lib_ADC_01.c, 617 :: 		}
L_ADC16_HAL_ConfigConverter2:
;__Lib_ADC_01.c, 619 :: 		cfg1 |= ADC_CFG1_MODE(configPtr->resolution);
; cfg1 start address is: 12 (R3)
0x0754	0x1CCA    ADDS	R2, R1, #3
0x0756	0x7812    LDRB	R2, [R2, #0]
0x0758	0x0092    LSLS	R2, R2, #2
0x075A	0xF002020C  AND	R2, R2, #12
0x075E	0xEA430402  ORR	R4, R3, R2, LSL #0
; cfg1 end address is: 12 (R3)
;__Lib_ADC_01.c, 621 :: 		cfg1 |= ADC_CFG1_ADICLK(configPtr->clkSrc);
0x0762	0x1D0A    ADDS	R2, R1, #4
0x0764	0x7812    LDRB	R2, [R2, #0]
0x0766	0xF0020303  AND	R3, R2, #3
0x076A	0xB2A2    UXTH	R2, R4
0x076C	0x431A    ORRS	R2, R3
; cfg1 start address is: 16 (R4)
0x076E	0xB294    UXTH	R4, R2
;__Lib_ADC_01.c, 623 :: 		cfg2 = ADC_RD_CFG2(base);
0x0770	0xF200020C  ADDW	R2, R0, #12
0x0774	0x6812    LDR	R2, [R2, #0]
;__Lib_ADC_01.c, 626 :: 		| ADC_CFG2_ADLSTS_MASK );
0x0776	0xB293    UXTH	R3, R2
0x0778	0xF64F72F0  MOVW	R2, #65520
0x077C	0x4013    ANDS	R3, R2
0x077E	0xB29B    UXTH	R3, R3
; cfg2 start address is: 12 (R3)
;__Lib_ADC_01.c, 628 :: 		if (configPtr->asyncClkEnable)
0x0780	0x1D4A    ADDS	R2, R1, #5
0x0782	0x7812    LDRB	R2, [R2, #0]
0x0784	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter23
;__Lib_ADC_01.c, 630 :: 		cfg2 |= ADC_CFG2_ADACKEN_MASK;
0x0786	0xF0430308  ORR	R3, R3, #8
0x078A	0xB29B    UXTH	R3, R3
; cfg2 end address is: 12 (R3)
;__Lib_ADC_01.c, 631 :: 		}
0x078C	0xE7FF    B	L_ADC16_HAL_ConfigConverter3
L__ADC16_HAL_ConfigConverter23:
;__Lib_ADC_01.c, 628 :: 		if (configPtr->asyncClkEnable)
;__Lib_ADC_01.c, 631 :: 		}
L_ADC16_HAL_ConfigConverter3:
;__Lib_ADC_01.c, 633 :: 		if (configPtr->highSpeedEnable)
; cfg2 start address is: 12 (R3)
0x078E	0x1D8A    ADDS	R2, R1, #6
0x0790	0x7812    LDRB	R2, [R2, #0]
0x0792	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter24
;__Lib_ADC_01.c, 635 :: 		cfg2 |= ADC_CFG2_ADHSC_MASK;
0x0794	0xF0430304  ORR	R3, R3, #4
0x0798	0xB29B    UXTH	R3, R3
; cfg2 end address is: 12 (R3)
;__Lib_ADC_01.c, 636 :: 		}
0x079A	0xE7FF    B	L_ADC16_HAL_ConfigConverter4
L__ADC16_HAL_ConfigConverter24:
;__Lib_ADC_01.c, 633 :: 		if (configPtr->highSpeedEnable)
;__Lib_ADC_01.c, 636 :: 		}
L_ADC16_HAL_ConfigConverter4:
;__Lib_ADC_01.c, 638 :: 		cfg2 |= ADC_CFG2_ADLSTS(configPtr->longSampleCycleMode);
; cfg2 start address is: 12 (R3)
0x079C	0x1DCA    ADDS	R2, R1, #7
0x079E	0x7812    LDRB	R2, [R2, #0]
0x07A0	0xF0020203  AND	R2, R2, #3
0x07A4	0xEA430202  ORR	R2, R3, R2, LSL #0
; cfg2 end address is: 12 (R3)
; cfg2 start address is: 20 (R5)
0x07A8	0xB295    UXTH	R5, R2
;__Lib_ADC_01.c, 640 :: 		sc2 = ADC_RD_SC2(base);
0x07AA	0xF2000220  ADDW	R2, R0, #32
0x07AE	0x6812    LDR	R2, [R2, #0]
;__Lib_ADC_01.c, 646 :: 		);
0x07B0	0xB293    UXTH	R3, R2
0x07B2	0xF64F72BC  MOVW	R2, #65468
0x07B6	0x4013    ANDS	R3, R2
0x07B8	0xB29B    UXTH	R3, R3
; sc2 start address is: 12 (R3)
;__Lib_ADC_01.c, 648 :: 		if (configPtr->hwTriggerEnable)
0x07BA	0xF2010208  ADDW	R2, R1, #8
0x07BE	0x7812    LDRB	R2, [R2, #0]
0x07C0	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter25
;__Lib_ADC_01.c, 650 :: 		sc2 |= ADC_SC2_ADTRG_MASK;
0x07C2	0xF0430340  ORR	R3, R3, #64
0x07C6	0xB29B    UXTH	R3, R3
; sc2 end address is: 12 (R3)
;__Lib_ADC_01.c, 651 :: 		}
0x07C8	0xE7FF    B	L_ADC16_HAL_ConfigConverter5
L__ADC16_HAL_ConfigConverter25:
;__Lib_ADC_01.c, 648 :: 		if (configPtr->hwTriggerEnable)
;__Lib_ADC_01.c, 651 :: 		}
L_ADC16_HAL_ConfigConverter5:
;__Lib_ADC_01.c, 653 :: 		sc2 |= ADC_SC2_REFSEL(configPtr->refVoltSrc);
; sc2 start address is: 12 (R3)
0x07CA	0xF2010209  ADDW	R2, R1, #9
0x07CE	0x7812    LDRB	R2, [R2, #0]
0x07D0	0xF0020203  AND	R2, R2, #3
0x07D4	0xEA430202  ORR	R2, R3, R2, LSL #0
; sc2 end address is: 12 (R3)
; sc2 start address is: 24 (R6)
0x07D8	0xB296    UXTH	R6, R2
;__Lib_ADC_01.c, 662 :: 		sc3 = ADC_RD_SC3(base);
0x07DA	0xF2000224  ADDW	R2, R0, #36
0x07DE	0x6812    LDR	R2, [R2, #0]
;__Lib_ADC_01.c, 664 :: 		| ADC_SC3_CALF_MASK );
0x07E0	0xB293    UXTH	R3, R2
0x07E2	0xF64F72B7  MOVW	R2, #65463
0x07E6	0xEA030202  AND	R2, R3, R2, LSL #0
; sc3 start address is: 12 (R3)
0x07EA	0xB293    UXTH	R3, R2
;__Lib_ADC_01.c, 666 :: 		if (configPtr->continuousConvEnable)
0x07EC	0xF201020A  ADDW	R2, R1, #10
; configPtr end address is: 4 (R1)
0x07F0	0x7812    LDRB	R2, [R2, #0]
0x07F2	0xB11A    CBZ	R2, L__ADC16_HAL_ConfigConverter26
;__Lib_ADC_01.c, 668 :: 		sc3 |= ADC_SC3_ADCO_MASK;
0x07F4	0xF0430108  ORR	R1, R3, #8
0x07F8	0xB289    UXTH	R1, R1
; sc3 end address is: 12 (R3)
; sc3 start address is: 4 (R1)
; sc3 end address is: 4 (R1)
;__Lib_ADC_01.c, 669 :: 		}
0x07FA	0xE000    B	L_ADC16_HAL_ConfigConverter6
L__ADC16_HAL_ConfigConverter26:
;__Lib_ADC_01.c, 666 :: 		if (configPtr->continuousConvEnable)
0x07FC	0xB299    UXTH	R1, R3
;__Lib_ADC_01.c, 669 :: 		}
L_ADC16_HAL_ConfigConverter6:
;__Lib_ADC_01.c, 671 :: 		ADC_WR_CFG1(base, cfg1);
; sc3 start address is: 4 (R1)
0x07FE	0xF2000208  ADDW	R2, R0, #8
0x0802	0x6014    STR	R4, [R2, #0]
; cfg1 end address is: 16 (R4)
;__Lib_ADC_01.c, 672 :: 		ADC_WR_CFG2(base, cfg2);
0x0804	0xF200020C  ADDW	R2, R0, #12
0x0808	0x6015    STR	R5, [R2, #0]
; cfg2 end address is: 20 (R5)
;__Lib_ADC_01.c, 673 :: 		ADC_WR_SC2(base, sc2);
0x080A	0xF2000220  ADDW	R2, R0, #32
0x080E	0x6016    STR	R6, [R2, #0]
; sc2 end address is: 24 (R6)
;__Lib_ADC_01.c, 674 :: 		ADC_WR_SC3(base, sc3);
0x0810	0xF2000224  ADDW	R2, R0, #36
; base end address is: 0 (R0)
0x0814	0x6011    STR	R1, [R2, #0]
; sc3 end address is: 4 (R1)
;__Lib_ADC_01.c, 675 :: 		}
L_end_ADC16_HAL_ConfigConverter:
0x0816	0x4770    BX	LR
; end of _ADC16_HAL_ConfigConverter
_ReadSensor:
;HEXIWEAR_Alcohol_Click.c, 143 :: 		void ReadSensor()
0x19F0	0xB081    SUB	SP, SP, #4
0x19F2	0xF8CDE000  STR	LR, [SP, #0]
;HEXIWEAR_Alcohol_Click.c, 145 :: 		adc_rd = ADC0_Get_Sample( 12 );
0x19F6	0x200C    MOVS	R0, #12
0x19F8	0xF7FFFE6A  BL	_ADC0_Get_Sample+0
0x19FC	0x4908    LDR	R1, [PC, #32]
0x19FE	0x8008    STRH	R0, [R1, #0]
;HEXIWEAR_Alcohol_Click.c, 148 :: 		delay_ms(10);
0x1A00	0xF641277E  MOVW	R7, #6782
0x1A04	0xF2C00706  MOVT	R7, #6
0x1A08	0xBF00    NOP
0x1A0A	0xBF00    NOP
L_ReadSensor2:
0x1A0C	0x1E7F    SUBS	R7, R7, #1
0x1A0E	0xD1FD    BNE	L_ReadSensor2
0x1A10	0xBF00    NOP
0x1A12	0xBF00    NOP
0x1A14	0xBF00    NOP
;HEXIWEAR_Alcohol_Click.c, 149 :: 		}
L_end_ReadSensor:
0x1A16	0xF8DDE000  LDR	LR, [SP, #0]
0x1A1A	0xB001    ADD	SP, SP, #4
0x1A1C	0x4770    BX	LR
0x1A1E	0xBF00    NOP
0x1A20	0x00061FFF  	_adc_rd+0
; end of _ReadSensor
_ADC0_Get_Sample:
;__Lib_ADC_01.c, 1739 :: 		uint32_t ADC0_Get_Sample(adc16_chn_t adc_chn) {
; adc_chn start address is: 0 (R0)
0x16D0	0xB082    SUB	SP, SP, #8
0x16D2	0xF8CDE000  STR	LR, [SP, #0]
; adc_chn end address is: 0 (R0)
; adc_chn start address is: 0 (R0)
;__Lib_ADC_01.c, 1741 :: 		uint32_t adcValue = 0;               // ADC value
;__Lib_ADC_01.c, 1746 :: 		chnConfig.chnIdx     = (adc16_chn_t)adc_chn;
0x16D6	0xF88D0004  STRB	R0, [SP, #4]
; adc_chn end address is: 0 (R0)
;__Lib_ADC_01.c, 1749 :: 		chnConfig.diffConvEnable = false;
0x16DA	0x2100    MOVS	R1, #0
0x16DC	0xF88D1006  STRB	R1, [SP, #6]
;__Lib_ADC_01.c, 1751 :: 		chnConfig.convCompletedIntEnable  = false;
0x16E0	0x2100    MOVS	R1, #0
0x16E2	0xF88D1005  STRB	R1, [SP, #5]
;__Lib_ADC_01.c, 1754 :: 		ADC16_DRV_ConfigConvChn(ADC16_INSTANCE, ADC16_CHN_GROUP, &chnConfig);
0x16E6	0xA901    ADD	R1, SP, #4
0x16E8	0x460A    MOV	R2, R1
0x16EA	0x2100    MOVS	R1, #0
0x16EC	0x2000    MOVS	R0, #0
0x16EE	0xF7FFFB9D  BL	_ADC16_DRV_ConfigConvChn+0
;__Lib_ADC_01.c, 1757 :: 		ADC16_DRV_WaitConvDone(ADC16_INSTANCE, ADC16_CHN_GROUP);
0x16F2	0x2100    MOVS	R1, #0
0x16F4	0x2000    MOVS	R0, #0
0x16F6	0xF7FFFBAD  BL	_ADC16_DRV_WaitConvDone+0
;__Lib_ADC_01.c, 1760 :: 		adcValue = ADC16_DRV_GetConvValueSigned(ADC16_INSTANCE, ADC16_CHN_GROUP);
0x16FA	0x2100    MOVS	R1, #0
0x16FC	0x2000    MOVS	R0, #0
0x16FE	0xF7FFFBBD  BL	_ADC16_DRV_GetConvValueSigned+0
; adcValue start address is: 24 (R6)
0x1702	0xB206    SXTH	R6, R0
;__Lib_ADC_01.c, 1772 :: 		ADC16_DRV_PauseConv(ADC16_INSTANCE, ADC16_CHN_GROUP);
0x1704	0x2100    MOVS	R1, #0
0x1706	0x2000    MOVS	R0, #0
0x1708	0xF7FFFACC  BL	_ADC16_DRV_PauseConv+0
;__Lib_ADC_01.c, 1773 :: 		return adcValue;
0x170C	0x4630    MOV	R0, R6
; adcValue end address is: 24 (R6)
;__Lib_ADC_01.c, 1774 :: 		}
L_end_ADC0_Get_Sample:
0x170E	0xF8DDE000  LDR	LR, [SP, #0]
0x1712	0xB002    ADD	SP, SP, #8
0x1714	0x4770    BX	LR
; end of _ADC0_Get_Sample
_ADC16_DRV_ConfigConvChn:
;__Lib_ADC_01.c, 1553 :: 		uint32_t chnGroup, const adc16_chn_config_t *configPtr)
; configPtr start address is: 8 (R2)
; chnGroup start address is: 4 (R1)
; instance start address is: 0 (R0)
0x0E2C	0xB081    SUB	SP, SP, #4
0x0E2E	0xF8CDE000  STR	LR, [SP, #0]
; configPtr end address is: 8 (R2)
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
; configPtr start address is: 8 (R2)
;__Lib_ADC_01.c, 1556 :: 		ADC_Type * base = g_adcBase[instance];
0x0E32	0x0084    LSLS	R4, R0, #2
; instance end address is: 0 (R0)
0x0E34	0x4B06    LDR	R3, [PC, #24]
0x0E36	0x191B    ADDS	R3, R3, R4
0x0E38	0x681B    LDR	R3, [R3, #0]
; base start address is: 0 (R0)
0x0E3A	0x4618    MOV	R0, R3
;__Lib_ADC_01.c, 1558 :: 		if (!configPtr)
0x0E3C	0xB90A    CBNZ	R2, L_ADC16_DRV_ConfigConvChn18
; chnGroup end address is: 4 (R1)
; configPtr end address is: 8 (R2)
; base end address is: 0 (R0)
;__Lib_ADC_01.c, 1560 :: 		return kStatus_ADC16_InvalidArgument;
0x0E3E	0x2001    MOVS	R0, #1
0x0E40	0xE002    B	L_end_ADC16_DRV_ConfigConvChn
;__Lib_ADC_01.c, 1561 :: 		}
L_ADC16_DRV_ConfigConvChn18:
;__Lib_ADC_01.c, 1563 :: 		ADC16_HAL_ConfigChn(base, chnGroup, configPtr);
; base start address is: 0 (R0)
; configPtr start address is: 8 (R2)
; chnGroup start address is: 4 (R1)
; configPtr end address is: 8 (R2)
; chnGroup end address is: 4 (R1)
; base end address is: 0 (R0)
0x0E42	0xF7FFFDE9  BL	_ADC16_HAL_ConfigChn+0
;__Lib_ADC_01.c, 1565 :: 		return kStatus_ADC16_Success;
0x0E46	0x2000    MOVS	R0, #0
;__Lib_ADC_01.c, 1566 :: 		}
L_end_ADC16_DRV_ConfigConvChn:
0x0E48	0xF8DDE000  LDR	LR, [SP, #0]
0x0E4C	0xB001    ADD	SP, SP, #4
0x0E4E	0x4770    BX	LR
0x0E50	0x6FEC0000  	_g_adcBase+0
; end of _ADC16_DRV_ConfigConvChn
_ADC16_HAL_ConfigChn:
;__Lib_ADC_01.c, 1519 :: 		void ADC16_HAL_ConfigChn(ADC_Type * base, uint32_t chnGroup, const adc16_chn_config_t *configPtr)
; configPtr start address is: 8 (R2)
; chnGroup start address is: 4 (R1)
; base start address is: 0 (R0)
; configPtr end address is: 8 (R2)
; chnGroup end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
; configPtr start address is: 8 (R2)
;__Lib_ADC_01.c, 1522 :: 		uint16_t tmp = 0U;
; tmp start address is: 16 (R4)
0x0A18	0xF2400400  MOVW	R4, #0
;__Lib_ADC_01.c, 1525 :: 		if (configPtr->convCompletedIntEnable)
0x0A1C	0x1C53    ADDS	R3, R2, #1
0x0A1E	0x781B    LDRB	R3, [R3, #0]
0x0A20	0xB11B    CBZ	R3, L__ADC16_HAL_ConfigChn28
;__Lib_ADC_01.c, 1527 :: 		tmp |= ADC_SC1_AIEN_MASK;
0x0A22	0xF0440440  ORR	R4, R4, #64
0x0A26	0xB2A4    UXTH	R4, R4
; tmp end address is: 16 (R4)
;__Lib_ADC_01.c, 1528 :: 		}
0x0A28	0xE7FF    B	L_ADC16_HAL_ConfigChn16
L__ADC16_HAL_ConfigChn28:
;__Lib_ADC_01.c, 1525 :: 		if (configPtr->convCompletedIntEnable)
;__Lib_ADC_01.c, 1528 :: 		}
L_ADC16_HAL_ConfigChn16:
;__Lib_ADC_01.c, 1532 :: 		if (configPtr->diffConvEnable)
; tmp start address is: 16 (R4)
0x0A2A	0x1C93    ADDS	R3, R2, #2
0x0A2C	0x781B    LDRB	R3, [R3, #0]
0x0A2E	0xB11B    CBZ	R3, L__ADC16_HAL_ConfigChn29
;__Lib_ADC_01.c, 1534 :: 		tmp |= ADC_SC1_DIFF_MASK;
0x0A30	0xF0440420  ORR	R4, R4, #32
0x0A34	0xB2A4    UXTH	R4, R4
; tmp end address is: 16 (R4)
;__Lib_ADC_01.c, 1535 :: 		}
0x0A36	0xE7FF    B	L_ADC16_HAL_ConfigChn17
L__ADC16_HAL_ConfigChn29:
;__Lib_ADC_01.c, 1532 :: 		if (configPtr->diffConvEnable)
;__Lib_ADC_01.c, 1535 :: 		}
L_ADC16_HAL_ConfigChn17:
;__Lib_ADC_01.c, 1539 :: 		tmp |= ADC_SC1_ADCH((uint32_t)(configPtr->chnIdx));
; tmp start address is: 16 (R4)
0x0A38	0x7813    LDRB	R3, [R2, #0]
; configPtr end address is: 8 (R2)
0x0A3A	0xF003031F  AND	R3, R3, #31
0x0A3E	0xEA440503  ORR	R5, R4, R3, LSL #0
; tmp end address is: 16 (R4)
;__Lib_ADC_01.c, 1541 :: 		ADC_WR_SC1(base, chnGroup, tmp);
0x0A42	0x008B    LSLS	R3, R1, #2
; chnGroup end address is: 4 (R1)
0x0A44	0x18C4    ADDS	R4, R0, R3
; base end address is: 0 (R0)
0x0A46	0xB2AB    UXTH	R3, R5
0x0A48	0x6023    STR	R3, [R4, #0]
;__Lib_ADC_01.c, 1542 :: 		}
L_end_ADC16_HAL_ConfigChn:
0x0A4A	0x4770    BX	LR
; end of _ADC16_HAL_ConfigChn
_ADC16_DRV_WaitConvDone:
;__Lib_ADC_01.c, 1579 :: 		void ADC16_DRV_WaitConvDone(uint32_t instance, uint32_t chnGroup)
; chnGroup start address is: 4 (R1)
; instance start address is: 0 (R0)
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
;__Lib_ADC_01.c, 1582 :: 		ADC_Type * base = g_adcBase[instance];
0x0E54	0x0083    LSLS	R3, R0, #2
; instance end address is: 0 (R0)
0x0E56	0x4A08    LDR	R2, [PC, #32]
0x0E58	0x18D2    ADDS	R2, R2, R3
0x0E5A	0x6810    LDR	R0, [R2, #0]
; base start address is: 0 (R0)
; base end address is: 0 (R0)
; chnGroup end address is: 4 (R1)
;__Lib_ADC_01.c, 1585 :: 		while ( !(1U == ADC_BRD_SC1_COCO(base, chnGroup)))
L_ADC16_DRV_WaitConvDone19:
; base start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
0x0E5C	0x008A    LSLS	R2, R1, #2
0x0E5E	0x1882    ADDS	R2, R0, R2
0x0E60	0xF1A24280  SUB	R2, R2, #1073741824
0x0E64	0x0152    LSLS	R2, R2, #5
0x0E66	0xF1024284  ADD	R2, R2, #1107296256
0x0E6A	0x321C    ADDS	R2, #28
0x0E6C	0x6812    LDR	R2, [R2, #0]
0x0E6E	0x2A01    CMP	R2, #1
0x0E70	0xD000    BEQ	L_ADC16_DRV_WaitConvDone20
;__Lib_ADC_01.c, 1586 :: 		{};
; base end address is: 0 (R0)
; chnGroup end address is: 4 (R1)
0x0E72	0xE7F3    B	L_ADC16_DRV_WaitConvDone19
L_ADC16_DRV_WaitConvDone20:
;__Lib_ADC_01.c, 1587 :: 		}
L_end_ADC16_DRV_WaitConvDone:
0x0E74	0x4770    BX	LR
0x0E76	0xBF00    NOP
0x0E78	0x6FEC0000  	_g_adcBase+0
; end of _ADC16_DRV_WaitConvDone
_ADC16_DRV_GetConvValueSigned:
;__Lib_ADC_01.c, 1729 :: 		int16_t ADC16_DRV_GetConvValueSigned(uint32_t instance, uint32_t chnGroup)
; chnGroup start address is: 4 (R1)
; instance start address is: 0 (R0)
0x0E7C	0xB081    SUB	SP, SP, #4
0x0E7E	0xF8CDE000  STR	LR, [SP, #0]
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
;__Lib_ADC_01.c, 1731 :: 		return (int16_t)ADC16_DRV_GetConvValueRAW(instance, chnGroup);
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
0x0E82	0xF7FFFE13  BL	_ADC16_DRV_GetConvValueRAW+0
0x0E86	0xB200    SXTH	R0, R0
;__Lib_ADC_01.c, 1732 :: 		}
L_end_ADC16_DRV_GetConvValueSigned:
0x0E88	0xF8DDE000  LDR	LR, [SP, #0]
0x0E8C	0xB001    ADD	SP, SP, #4
0x0E8E	0x4770    BX	LR
; end of _ADC16_DRV_GetConvValueSigned
_ADC16_DRV_GetConvValueRAW:
;__Lib_ADC_01.c, 1595 :: 		uint16_t ADC16_DRV_GetConvValueRAW(uint32_t instance, uint32_t chnGroup)
; chnGroup start address is: 4 (R1)
; instance start address is: 0 (R0)
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
;__Lib_ADC_01.c, 1599 :: 		ADC_Type * base = g_adcBase[instance];
0x0AAC	0x0083    LSLS	R3, R0, #2
; instance end address is: 0 (R0)
0x0AAE	0x4A07    LDR	R2, [PC, #28]
0x0AB0	0x18D2    ADDS	R2, R2, R3
0x0AB2	0x6812    LDR	R2, [R2, #0]
;__Lib_ADC_01.c, 1602 :: 		return (ADC_BRD_R_D(base, chnGroup));
0x0AB4	0xF2020310  ADDW	R3, R2, #16
0x0AB8	0x008A    LSLS	R2, R1, #2
; chnGroup end address is: 4 (R1)
0x0ABA	0x189A    ADDS	R2, R3, R2
0x0ABC	0x6813    LDR	R3, [R2, #0]
0x0ABE	0xF64F72FF  MOVW	R2, #65535
0x0AC2	0xEA030202  AND	R2, R3, R2, LSL #0
0x0AC6	0xB290    UXTH	R0, R2
;__Lib_ADC_01.c, 1603 :: 		}
L_end_ADC16_DRV_GetConvValueRAW:
0x0AC8	0x4770    BX	LR
0x0ACA	0xBF00    NOP
0x0ACC	0x6FEC0000  	_g_adcBase+0
; end of _ADC16_DRV_GetConvValueRAW
_ADC16_DRV_PauseConv:
;__Lib_ADC_01.c, 1611 :: 		void ADC16_DRV_PauseConv(uint32_t instance, uint32_t chnGroup)
; chnGroup start address is: 4 (R1)
; instance start address is: 0 (R0)
0x0CA4	0xB082    SUB	SP, SP, #8
0x0CA6	0xF8CDE000  STR	LR, [SP, #0]
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
; instance start address is: 0 (R0)
; chnGroup start address is: 4 (R1)
;__Lib_ADC_01.c, 1616 :: 		configStruct.chnIdx = kAdc16Chn31;
0x0CAA	0x221F    MOVS	R2, #31
0x0CAC	0xF88D2004  STRB	R2, [SP, #4]
;__Lib_ADC_01.c, 1617 :: 		configStruct.convCompletedIntEnable = false;
0x0CB0	0x2200    MOVS	R2, #0
0x0CB2	0xF88D2005  STRB	R2, [SP, #5]
;__Lib_ADC_01.c, 1619 :: 		configStruct.diffConvEnable = false;
0x0CB6	0x2200    MOVS	R2, #0
0x0CB8	0xF88D2006  STRB	R2, [SP, #6]
;__Lib_ADC_01.c, 1621 :: 		ADC16_DRV_ConfigConvChn(instance, chnGroup, &configStruct);
0x0CBC	0xAA01    ADD	R2, SP, #4
; chnGroup end address is: 4 (R1)
; instance end address is: 0 (R0)
0x0CBE	0xF000F8B5  BL	_ADC16_DRV_ConfigConvChn+0
;__Lib_ADC_01.c, 1622 :: 		}
L_end_ADC16_DRV_PauseConv:
0x0CC2	0xF8DDE000  LDR	LR, [SP, #0]
0x0CC6	0xB002    ADD	SP, SP, #8
0x0CC8	0x4770    BX	LR
; end of _ADC16_DRV_PauseConv
_CalculatePPM:
;HEXIWEAR_Alcohol_Click.c, 161 :: 		void CalculatePPM()
0x194C	0xB081    SUB	SP, SP, #4
0x194E	0xF8CDE000  STR	LR, [SP, #0]
;HEXIWEAR_Alcohol_Click.c, 169 :: 		Vrl = (float)adc_rd * Vadc_33;
0x1952	0x481E    LDR	R0, [PC, #120]
0x1954	0x8800    LDRH	R0, [R0, #0]
0x1956	0xEE000A90  VMOV	S1, R0
0x195A	0xEEF80A60  VCVT.F32.U32	S1, S1
0x195E	0x481C    LDR	R0, [PC, #112]
0x1960	0xEE000A10  VMOV	S0, R0
0x1964	0xEE600A80  VMUL.F32	S1, S1, S0
0x1968	0x481A    LDR	R0, [PC, #104]
0x196A	0xED400A00  VSTR.32	S1, [R0, #0]
;HEXIWEAR_Alcohol_Click.c, 172 :: 		SensorRes = ( ( 5.0 - Vrl ) / Vrl ) * LoadRes;
0x196E	0xEEB10A04  VMOV.F32	S0, #5
0x1972	0xEE300A60  VSUB.F32	S0, S0, S1
0x1976	0xEEC00A20  VDIV.F32	S1, S0, S1
0x197A	0x4817    LDR	R0, [PC, #92]
0x197C	0xEE000A10  VMOV	S0, R0
0x1980	0xEE600A80  VMUL.F32	S1, S1, S0
0x1984	0x4815    LDR	R0, [PC, #84]
0x1986	0xED400A00  VSTR.32	S1, [R0, #0]
;HEXIWEAR_Alcohol_Click.c, 173 :: 		ratio     = SensorRes / LoadRes;
0x198A	0x4813    LDR	R0, [PC, #76]
0x198C	0xEE000A10  VMOV	S0, R0
0x1990	0xEE800A80  VDIV.F32	S0, S1, S0
0x1994	0x4812    LDR	R0, [PC, #72]
0x1996	0xED000A00  VSTR.32	S0, [R0, #0]
;HEXIWEAR_Alcohol_Click.c, 176 :: 		lgPPM = ( log10( ratio ) * -1.5512 ) + 2.5911;
0x199A	0xF7FFFC93  BL	_log10+0
0x199E	0x4811    LDR	R0, [PC, #68]
0x19A0	0xEE000A90  VMOV	S1, R0
0x19A4	0xEE600A20  VMUL.F32	S1, S0, S1
0x19A8	0x480F    LDR	R0, [PC, #60]
0x19AA	0xEE000A10  VMOV	S0, R0
0x19AE	0xEE300A80  VADD.F32	S0, S1, S0
;HEXIWEAR_Alcohol_Click.c, 178 :: 		ppm = pow( 10, lgPPM );
0x19B2	0xEEF00A40  VMOV.F32	S1, S0
0x19B6	0xEEB20A04  VMOV.F32	S0, #10
0x19BA	0xF7FFFE01  BL	_pow+0
0x19BE	0x480B    LDR	R0, [PC, #44]
0x19C0	0xED000A00  VSTR.32	S0, [R0, #0]
;HEXIWEAR_Alcohol_Click.c, 179 :: 		}
L_end_CalculatePPM:
0x19C4	0xF8DDE000  LDR	LR, [SP, #0]
0x19C8	0xB001    ADD	SP, SP, #4
0x19CA	0x4770    BX	LR
0x19CC	0x00061FFF  	_adc_rd+0
0x19D0	0x33333A53  	#978531123
0x19D4	0x000C1FFF  	_Vrl+0
0x19D8	0x98004623  	#1176737792
0x19DC	0x00101FFF  	_SensorRes+0
0x19E0	0x00141FFF  	_ratio+0
0x19E4	0x8DB9BFC6  	#-1077506631
0x19E8	0xD4954025  	#1076221077
0x19EC	0x00181FFF  	_ppm+0
; end of _CalculatePPM
_log10:
;__Lib_CMath.c, 392 :: 		double log10(double x) {
0x12C4	0xB081    SUB	SP, SP, #4
0x12C6	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
; x end address is: 0 (S0)
; x start address is: 0 (S0)
;__Lib_CMath.c, 393 :: 		return log(x) * 0.4342944819;
; x end address is: 0 (S0)
0x12CA	0xF7FFFCFF  BL	_log+0
0x12CE	0x4904    LDR	R1, [PC, #16]
0x12D0	0xEE001A90  VMOV	S1, R1
0x12D4	0xEE200A20  VMUL.F32	S0, S0, S1
;__Lib_CMath.c, 394 :: 		}
L_end_log10:
0x12D8	0xF8DDE000  LDR	LR, [SP, #0]
0x12DC	0xB001    ADD	SP, SP, #4
0x12DE	0x4770    BX	LR
0x12E0	0x5BD93EDE  	#1054759897
; end of _log10
_log:
;__Lib_CMath.c, 365 :: 		double log(double x) {
0x0CCC	0xB082    SUB	SP, SP, #8
0x0CCE	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
; x end address is: 0 (S0)
; x start address is: 0 (S0)
;__Lib_CMath.c, 381 :: 		if(x <= 0.0)
0x0CD2	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0CD6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0CDA	0xDC04    BGT	L_log59
; x end address is: 0 (S0)
;__Lib_CMath.c, 382 :: 		return 0.0;
0x0CDC	0xF04F0100  MOV	R1, #0
0x0CE0	0xEE001A10  VMOV	S0, R1
0x0CE4	0xE022    B	L_end_log
L_log59:
;__Lib_CMath.c, 383 :: 		x = frexp(x, &exp) * 2.0 - 1.0;
; x start address is: 0 (S0)
0x0CE6	0xA901    ADD	R1, SP, #4
0x0CE8	0x4608    MOV	R0, R1
; x end address is: 0 (S0)
0x0CEA	0xF7FFFD95  BL	_frexp+0
0x0CEE	0xEEF00A00  VMOV.F32	S1, #2
0x0CF2	0xEE600A20  VMUL.F32	S1, S0, S1
0x0CF6	0xEEB70A00  VMOV.F32	S0, #1
0x0CFA	0xEE300AC0  VSUB.F32	S0, S1, S0
;__Lib_CMath.c, 384 :: 		exp--;
0x0CFE	0xF9BD1004  LDRSH	R1, [SP, #4]
0x0D02	0x1E49    SUBS	R1, R1, #1
0x0D04	0xF8AD1004  STRH	R1, [SP, #4]
;__Lib_CMath.c, 385 :: 		x = eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1);
0x0D08	0x2108    MOVS	R1, #8
0x0D0A	0xB209    SXTH	R1, R1
0x0D0C	0x4809    LDR	R0, [PC, #36]
0x0D0E	0xF7FFFE11  BL	__Lib_CMath_eval_poly+0
;__Lib_CMath.c, 386 :: 		return x + 0.69314718055995 * exp;
0x0D12	0xF9BD1004  LDRSH	R1, [SP, #4]
0x0D16	0xEE011A10  VMOV	S2, R1
0x0D1A	0xEEB81AC1  VCVT.F32.S32	S2, S2
0x0D1E	0x4906    LDR	R1, [PC, #24]
0x0D20	0xEE001A90  VMOV	S1, R1
0x0D24	0xEE600A81  VMUL.F32	S1, S1, S2
0x0D28	0xEE300A20  VADD.F32	S0, S0, S1
;__Lib_CMath.c, 388 :: 		}
L_end_log:
0x0D2C	0xF8DDE000  LDR	LR, [SP, #0]
0x0D30	0xB002    ADD	SP, SP, #8
0x0D32	0x4770    BX	LR
0x0D34	0x6FAC0000  	log_coeff_L0+0
0x0D38	0x72183F31  	#1060205080
; end of _log
_frexp:
;__Lib_CMath.c, 79 :: 		double frexp(double value, int * eptr) {
; eptr start address is: 0 (R0)
0x0818	0xB081    SUB	SP, SP, #4
; value start address is: 0 (S0)
; eptr end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; eptr start address is: 0 (R0)
;__Lib_CMath.c, 83 :: 		uv.fl = value;
0x081A	0xED0D0A00  VSTR.32	S0, [SP, #0]
; value end address is: 0 (S0)
;__Lib_CMath.c, 84 :: 		bb = uv.flt.exp - EXCESS;
0x081E	0xF8BD1002  LDRH	R1, [SP, #2]
0x0822	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0826	0x397E    SUBS	R1, #126
; bb start address is: 4 (R1)
0x0828	0xB209    SXTH	R1, R1
;__Lib_CMath.c, 85 :: 		*eptr = bb;
0x082A	0x8001    STRH	R1, [R0, #0]
; eptr end address is: 0 (R0)
; bb end address is: 4 (R1)
;__Lib_CMath.c, 86 :: 		uv.flt.exp = EXCESS;
0x082C	0x227E    MOVS	R2, #126
0x082E	0xF8BD1002  LDRH	R1, [SP, #2]
0x0832	0xF36211CE  BFI	R1, R2, #7, #8
0x0836	0xF8AD1002  STRH	R1, [SP, #2]
;__Lib_CMath.c, 87 :: 		return uv.fl;
0x083A	0xED1D0A00  VLDR.32	S0, [SP, #0]
;__Lib_CMath.c, 94 :: 		}
L_end_frexp:
0x083E	0xB001    ADD	SP, SP, #4
0x0840	0x4770    BX	LR
; end of _frexp
__Lib_CMath_eval_poly:
;__Lib_CMath.c, 117 :: 		static double eval_poly(double x, const double code * d, int n) {
; n start address is: 4 (R1)
; d start address is: 0 (R0)
0x0934	0xB081    SUB	SP, SP, #4
; x start address is: 0 (S0)
0x0936	0xEEF00A40  VMOV.F32	S1, S0
; n end address is: 4 (R1)
; d end address is: 0 (R0)
; x end address is: 0 (S0)
; x start address is: 4 (S1)
; d start address is: 0 (R0)
; n start address is: 4 (R1)
;__Lib_CMath.c, 120 :: 		res = d[n];
0x093A	0x008A    LSLS	R2, R1, #2
0x093C	0x1882    ADDS	R2, R0, R2
0x093E	0xED120A00  VLDR.32	S0, [R2, #0]
; res start address is: 8 (S2)
0x0942	0xEEB01A40  VMOV.F32	S2, S0
; x end address is: 4 (S1)
; res end address is: 8 (S2)
; n end address is: 4 (R1)
0x0946	0xEEB00A41  VMOV.F32	S0, S2
0x094A	0xEEB01A60  VMOV.F32	S2, S1
;__Lib_CMath.c, 121 :: 		while(n)
L___Lib_CMath_eval_poly17:
; res start address is: 0 (S0)
; x start address is: 8 (S2)
; n start address is: 4 (R1)
; d start address is: 0 (R0)
; d end address is: 0 (R0)
; x start address is: 8 (S2)
; x end address is: 8 (S2)
0x094E	0xB179    CBZ	R1, L___Lib_CMath_eval_poly18
; d end address is: 0 (R0)
; x end address is: 8 (S2)
;__Lib_CMath.c, 122 :: 		res = x * res + d[--n];
; x start address is: 8 (S2)
; d start address is: 0 (R0)
0x0950	0xEE610A00  VMUL.F32	S1, S2, S0
; res end address is: 0 (S0)
0x0954	0x1E4A    SUBS	R2, R1, #1
0x0956	0xB212    SXTH	R2, R2
0x0958	0xB211    SXTH	R1, R2
0x095A	0x0092    LSLS	R2, R2, #2
0x095C	0x1882    ADDS	R2, R0, R2
0x095E	0xED120A00  VLDR.32	S0, [R2, #0]
0x0962	0xEE300A80  VADD.F32	S0, S1, S0
; res start address is: 0 (S0)
0x0966	0xED0D0A00  VSTR.32	S0, [SP, #0]
; d end address is: 0 (R0)
; x end address is: 8 (S2)
; n end address is: 4 (R1)
0x096A	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x096E	0xE7EE    B	L___Lib_CMath_eval_poly17
L___Lib_CMath_eval_poly18:
;__Lib_CMath.c, 124 :: 		return res;
; res end address is: 0 (S0)
;__Lib_CMath.c, 125 :: 		}
L_end_eval_poly:
0x0970	0xB001    ADD	SP, SP, #4
0x0972	0x4770    BX	LR
; end of __Lib_CMath_eval_poly
_pow:
;__Lib_CMath.c, 397 :: 		double pow(double x, double y) {
0x15C0	0xB082    SUB	SP, SP, #8
0x15C2	0xF8CDE000  STR	LR, [SP, #0]
; y start address is: 4 (S1)
; x start address is: 0 (S0)
0x15C6	0xEEF02A40  VMOV.F32	S5, S0
0x15CA	0xEEB02A60  VMOV.F32	S4, S1
; y end address is: 4 (S1)
; x end address is: 0 (S0)
; x start address is: 20 (S5)
; y start address is: 16 (S4)
;__Lib_CMath.c, 398 :: 		unsigned char sign = 0;       // Promenjeno unsigned int u
; sign start address is: 0 (R0)
0x15CE	0x2000    MOVS	R0, #0
;__Lib_CMath.c, 402 :: 		if(y == 0.0)
0x15D0	0xEEB52AC0  VCMPE.F32	S4, #0.0
0x15D4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x15D8	0xD102    BNE	L_pow60
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__Lib_CMath.c, 403 :: 		return 1.0;
0x15DA	0xEEB70A00  VMOV.F32	S0, #1
0x15DE	0xE03E    B	L_end_pow
L_pow60:
;__Lib_CMath.c, 404 :: 		if(x == 0.0)
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x15E0	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x15E4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x15E8	0xD104    BNE	L_pow61
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; sign end address is: 0 (R0)
;__Lib_CMath.c, 405 :: 		return 0.0;
0x15EA	0xF04F0200  MOV	R2, #0
0x15EE	0xEE002A10  VMOV	S0, R2
0x15F2	0xE034    B	L_end_pow
L_pow61:
;__Lib_CMath.c, 406 :: 		if(x < 0.0) {
; sign start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x15F4	0xEEF52AC0  VCMPE.F32	S5, #0.0
0x15F8	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x15FC	0xDA1B    BGE	L__pow80
; sign end address is: 0 (R0)
;__Lib_CMath.c, 407 :: 		yi = (long)y;
0x15FE	0xEEBD0A42  VCVT.S32.F32	S0, S4
0x1602	0xEE102A10  VMOV	R2, S0
; yi start address is: 0 (R0)
0x1606	0x4610    MOV	R0, R2
;__Lib_CMath.c, 408 :: 		if((double)yi != y)
0x1608	0xEE002A10  VMOV	S0, R2
0x160C	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x1610	0xEEB40AC2  VCMPE.F32	S0, S4
0x1614	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x1618	0xD004    BEQ	L_pow63
; x end address is: 20 (S5)
; y end address is: 16 (S4)
; yi end address is: 0 (R0)
;__Lib_CMath.c, 409 :: 		return 0.0;
0x161A	0xF04F0200  MOV	R2, #0
0x161E	0xEE002A10  VMOV	S0, R2
0x1622	0xE01C    B	L_end_pow
L_pow63:
;__Lib_CMath.c, 410 :: 		sign = yi & 1;
; yi start address is: 0 (R0)
; y start address is: 16 (S4)
; x start address is: 20 (S5)
0x1624	0xF0000201  AND	R2, R0, #1
; yi end address is: 0 (R0)
; sign start address is: 0 (R0)
0x1628	0xB2D0    UXTB	R0, R2
;__Lib_CMath.c, 411 :: 		x = -x;
0x162A	0xEEF10A62  VNEG.F32	S1, S5
; x end address is: 20 (S5)
; x start address is: 4 (S1)
; sign end address is: 0 (R0)
; x end address is: 4 (S1)
0x162E	0xB2C5    UXTB	R5, R0
0x1630	0xEEB00A60  VMOV.F32	S0, S1
;__Lib_CMath.c, 412 :: 		}
0x1634	0xE005    B	L_pow62
L__pow80:
;__Lib_CMath.c, 406 :: 		if(x < 0.0) {
0x1636	0xF88D0004  STRB	R0, [SP, #4]
0x163A	0xEEB00A62  VMOV.F32	S0, S5
0x163E	0xF89D5004  LDRB	R5, [SP, #4]
;__Lib_CMath.c, 412 :: 		}
L_pow62:
;__Lib_CMath.c, 413 :: 		x = log(x);
; x start address is: 0 (S0)
; sign start address is: 20 (R5)
; x end address is: 0 (S0)
0x1642	0xF7FFFB43  BL	_log+0
;__Lib_CMath.c, 414 :: 		x = x*y;
0x1646	0xEE200A02  VMUL.F32	S0, S0, S4
; y end address is: 16 (S4)
;__Lib_CMath.c, 415 :: 		x = exp(x);
0x164A	0xF7FFFB77  BL	_exp+0
; x start address is: 4 (S1)
0x164E	0xEEF00A40  VMOV.F32	S1, S0
;__Lib_CMath.c, 417 :: 		if(sign)
0x1652	0xB115    CBZ	R5, L_pow64
; sign end address is: 20 (R5)
;__Lib_CMath.c, 418 :: 		return -x;
0x1654	0xEEB10A60  VNEG.F32	S0, S1
; x end address is: 4 (S1)
0x1658	0xE001    B	L_end_pow
L_pow64:
;__Lib_CMath.c, 419 :: 		return x;
; x start address is: 4 (S1)
0x165A	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__Lib_CMath.c, 420 :: 		}
L_end_pow:
0x165E	0xF8DDE000  LDR	LR, [SP, #0]
0x1662	0xB002    ADD	SP, SP, #8
0x1664	0x4770    BX	LR
; end of _pow
_exp:
;__Lib_CMath.c, 324 :: 		double exp(double x) {
0x0D3C	0xB081    SUB	SP, SP, #4
0x0D3E	0xF8CDE000  STR	LR, [SP, #0]
; x start address is: 0 (S0)
0x0D42	0xEEF01A40  VMOV.F32	S3, S0
; x end address is: 0 (S0)
; x start address is: 12 (S3)
;__Lib_CMath.c, 342 :: 		if(x == 0.0)
0x0D46	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x0D4A	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D4E	0xD102    BNE	L_exp53
; x end address is: 12 (S3)
;__Lib_CMath.c, 343 :: 		return 1.0;
0x0D50	0xEEB70A00  VMOV.F32	S0, #1
0x0D54	0xE05C    B	L_end_exp
L_exp53:
;__Lib_CMath.c, 344 :: 		if (x > EXP_MAX)    //too big?
; x start address is: 12 (S3)
0x0D56	0x4930    LDR	R1, [PC, #192]
0x0D58	0xEE001A10  VMOV	S0, R1
0x0D5C	0xEEF41AC0  VCMPE.F32	S3, S0
0x0D60	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D64	0xDD03    BLE	L_exp54
; x end address is: 12 (S3)
;__Lib_CMath.c, 345 :: 		return DBL_MAX;
0x0D66	0x492D    LDR	R1, [PC, #180]
0x0D68	0xEE001A10  VMOV	S0, R1
0x0D6C	0xE050    B	L_end_exp
L_exp54:
;__Lib_CMath.c, 346 :: 		if (x < EXP_MIN)    //too small?
; x start address is: 12 (S3)
0x0D6E	0x492C    LDR	R1, [PC, #176]
0x0D70	0xEE001A10  VMOV	S0, R1
0x0D74	0xEEF41AC0  VCMPE.F32	S3, S0
0x0D78	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D7C	0xDA04    BGE	L_exp55
; x end address is: 12 (S3)
;__Lib_CMath.c, 347 :: 		return 0.0;
0x0D7E	0xF04F0100  MOV	R1, #0
0x0D82	0xEE001A10  VMOV	S0, R1
0x0D86	0xE043    B	L_end_exp
L_exp55:
;__Lib_CMath.c, 348 :: 		sign = x < 0.0;
; x start address is: 12 (S3)
0x0D88	0xEEF51AC0  VCMPE.F32	S3, #0.0
0x0D8C	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0D90	0xF2400100  MOVW	R1, #0
0x0D94	0xDA00    BGE	L__exp99
0x0D96	0x2101    MOVS	R1, #1
L__exp99:
; sign start address is: 12 (R3)
0x0D98	0xB2CB    UXTB	R3, R1
;__Lib_CMath.c, 349 :: 		if(sign)
0x0D9A	0xB2C9    UXTB	R1, R1
0x0D9C	0xB111    CBZ	R1, L__exp79
;__Lib_CMath.c, 350 :: 		x = -x;
0x0D9E	0xEEF10A61  VNEG.F32	S1, S3
; x end address is: 12 (S3)
; x start address is: 4 (S1)
; x end address is: 4 (S1)
0x0DA2	0xE001    B	L_exp56
L__exp79:
;__Lib_CMath.c, 349 :: 		if(sign)
0x0DA4	0xEEF00A61  VMOV.F32	S1, S3
;__Lib_CMath.c, 350 :: 		x = -x;
L_exp56:
;__Lib_CMath.c, 351 :: 		x *= 1.4426950409;            // convert to log2 //
; x start address is: 4 (S1)
0x0DA8	0x491E    LDR	R1, [PC, #120]
0x0DAA	0xEE001A10  VMOV	S0, R1
0x0DAE	0xEE200A80  VMUL.F32	S0, S1, S0
; x end address is: 4 (S1)
; x start address is: 12 (S3)
0x0DB2	0xEEF01A40  VMOV.F32	S3, S0
;__Lib_CMath.c, 352 :: 		exp = (int)floor(x);
0x0DB6	0xF7FFFD63  BL	_floor+0
0x0DBA	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x0DBE	0xEE101A10  VMOV	R1, S0
0x0DC2	0xB209    SXTH	R1, R1
; exp start address is: 16 (R4)
0x0DC4	0xB20C    SXTH	R4, R1
;__Lib_CMath.c, 353 :: 		x -= (double)exp;
0x0DC6	0xEE001A10  VMOV	S0, R1
0x0DCA	0xEEB80AC0  VCVT.F32.S32	S0, S0
0x0DCE	0xEE310AC0  VSUB.F32	S0, S3, S0
; x end address is: 12 (S3)
;__Lib_CMath.c, 354 :: 		x = ldexp(eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1), exp);
0x0DD2	0x2109    MOVS	R1, #9
0x0DD4	0xB209    SXTH	R1, R1
0x0DD6	0x4814    LDR	R0, [PC, #80]
0x0DD8	0xF7FFFDAC  BL	__Lib_CMath_eval_poly+0
0x0DDC	0xB220    SXTH	R0, R4
; exp end address is: 16 (R4)
0x0DDE	0xF7FFFE35  BL	_ldexp+0
; x start address is: 4 (S1)
0x0DE2	0xEEF00A40  VMOV.F32	S1, S0
;__Lib_CMath.c, 355 :: 		if(sign) {
0x0DE6	0xB18B    CBZ	R3, L_exp57
; sign end address is: 12 (R3)
;__Lib_CMath.c, 356 :: 		if (x == DBL_MAX)
0x0DE8	0x490C    LDR	R1, [PC, #48]
0x0DEA	0xEE001A10  VMOV	S0, R1
0x0DEE	0xEEF40AC0  VCMPE.F32	S1, S0
0x0DF2	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0DF6	0xD104    BNE	L_exp58
; x end address is: 4 (S1)
;__Lib_CMath.c, 357 :: 		return 0.0;
0x0DF8	0xF04F0100  MOV	R1, #0
0x0DFC	0xEE001A10  VMOV	S0, R1
0x0E00	0xE006    B	L_end_exp
L_exp58:
;__Lib_CMath.c, 358 :: 		return 1.0/x;
; x start address is: 4 (S1)
0x0E02	0xEEB70A00  VMOV.F32	S0, #1
0x0E06	0xEE800A20  VDIV.F32	S0, S0, S1
; x end address is: 4 (S1)
0x0E0A	0xE001    B	L_end_exp
;__Lib_CMath.c, 359 :: 		}
L_exp57:
;__Lib_CMath.c, 360 :: 		return x;
; x start address is: 4 (S1)
0x0E0C	0xEEB00A60  VMOV.F32	S0, S1
; x end address is: 4 (S1)
;__Lib_CMath.c, 361 :: 		}
L_end_exp:
0x0E10	0xF8DDE000  LDR	LR, [SP, #0]
0x0E14	0xB001    ADD	SP, SP, #4
0x0E16	0x4770    BX	LR
0x0E18	0xD4FE42B2  	#1119016190
0x0E1C	0xFFFF7F7F  	#2139095039
0x0E20	0xAC50C2AE  	#-1028740016
0x0E24	0xAA3B3FB8  	#1069066811
0x0E28	0x6F840000  	exp_coeff_L0+0
; end of _exp
_floor:
;__Lib_CMath.c, 38 :: 		double floor(double x) {
0x0880	0xB081    SUB	SP, SP, #4
0x0882	0xED0D0A00  VSTR.32	S0, [SP, #0]
;__Lib_CMath.c, 42 :: 		expon = ((*(unsigned long *)&x >> 23) & 255);
0x0886	0xA900    ADD	R1, SP, #0
0x0888	0x6809    LDR	R1, [R1, #0]
0x088A	0x0DC9    LSRS	R1, R1, #23
0x088C	0xF00101FF  AND	R1, R1, #255
;__Lib_CMath.c, 43 :: 		expon = expon- 127;
0x0890	0xB209    SXTH	R1, R1
0x0892	0x397F    SUBS	R1, #127
0x0894	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x0896	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 44 :: 		if(expon < 0)
0x0898	0x2900    CMP	R1, #0
0x089A	0xDA0E    BGE	L_floor1
; expon end address is: 0 (R0)
;__Lib_CMath.c, 45 :: 		if (x < 0.0)
0x089C	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x08A0	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x08A4	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x08A8	0xDA02    BGE	L_floor2
;__Lib_CMath.c, 46 :: 		return -1.0;
0x08AA	0xEEBF0A00  VMOV.F32	S0, #-1
0x08AE	0xE024    B	L_end_floor
L_floor2:
;__Lib_CMath.c, 48 :: 		return  0.0;
0x08B0	0xF04F0100  MOV	R1, #0
0x08B4	0xEE001A10  VMOV	S0, R1
0x08B8	0xE01F    B	L_end_floor
L_floor1:
;__Lib_CMath.c, 49 :: 		if((unsigned)expon > sizeof(double) * CHAR_BIT - 8)
; expon start address is: 0 (R0)
0x08BA	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x08BC	0x2918    CMP	R1, #24
0x08BE	0xD902    BLS	L_floor4
;__Lib_CMath.c, 50 :: 		return x;           /* already an integer */
0x08C0	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x08C4	0xE019    B	L_end_floor
L_floor4:
;__Lib_CMath.c, 51 :: 		i = _FRNDINT(x);
0x08C6	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x08CA	0xEEBD0A40  VCVT.S32.F32	S0, S0
0x08CE	0xEE101A10  VMOV	R1, S0
0x08D2	0xEE001A90  VMOV	S1, R1
0x08D6	0xEEF80AE0  VCVT.F32.S32	S1, S1
; i start address is: 8 (S2)
0x08DA	0xEEB01A60  VMOV.F32	S2, S1
;__Lib_CMath.c, 53 :: 		if(i > x)
0x08DE	0xED1D0A00  VLDR.32	S0, [SP, #0]
0x08E2	0xEEF40AC0  VCMPE.F32	S1, S0
0x08E6	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x08EA	0xDD04    BLE	L_floor5
;__Lib_CMath.c, 54 :: 		return i - 1.0;
0x08EC	0xEEB70A00  VMOV.F32	S0, #1
0x08F0	0xEE310A40  VSUB.F32	S0, S2, S0
; i end address is: 8 (S2)
0x08F4	0xE001    B	L_end_floor
L_floor5:
;__Lib_CMath.c, 55 :: 		return i;
; i start address is: 8 (S2)
0x08F6	0xEEB00A41  VMOV.F32	S0, S2
; i end address is: 8 (S2)
;__Lib_CMath.c, 56 :: 		}
L_end_floor:
0x08FA	0xB001    ADD	SP, SP, #4
0x08FC	0x4770    BX	LR
; end of _floor
_ldexp:
;__Lib_CMath.c, 97 :: 		double ldexp(double value, int newexp) {
; newexp start address is: 0 (R0)
0x0A4C	0xB081    SUB	SP, SP, #4
; value start address is: 0 (S0)
; newexp end address is: 0 (R0)
; value end address is: 0 (S0)
; value start address is: 0 (S0)
; newexp start address is: 0 (R0)
;__Lib_CMath.c, 100 :: 		uv.fl = value;
0x0A4E	0xED0D0A00  VSTR.32	S0, [SP, #0]
;__Lib_CMath.c, 101 :: 		newexp += uv.flt.exp;
0x0A52	0xF8BD1002  LDRH	R1, [SP, #2]
0x0A56	0xF3C111C7  UBFX	R1, R1, #7, #8
0x0A5A	0x1841    ADDS	R1, R0, R1
0x0A5C	0xB208    SXTH	R0, R1
;__Lib_CMath.c, 102 :: 		if (newexp < 0)
0x0A5E	0xB209    SXTH	R1, R1
0x0A60	0x2900    CMP	R1, #0
0x0A62	0xDA04    BGE	L_ldexp11
; value end address is: 0 (S0)
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 103 :: 		return 0.0;
0x0A64	0xF04F0100  MOV	R1, #0
0x0A68	0xEE001A10  VMOV	S0, R1
0x0A6C	0xE019    B	L_end_ldexp
L_ldexp11:
;__Lib_CMath.c, 105 :: 		if (newexp > MAX_EXPONENT)
; newexp start address is: 0 (R0)
; value start address is: 0 (S0)
0x0A6E	0xF1B00FFF  CMP	R0, #255
0x0A72	0xDD0D    BLE	L_ldexp13
; newexp end address is: 0 (R0)
;__Lib_CMath.c, 106 :: 		if (value < 0.0)
0x0A74	0xEEB50AC0  VCMPE.F32	S0, #0.0
0x0A78	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x0A7C	0xDA04    BGE	L_ldexp14
; value end address is: 0 (S0)
;__Lib_CMath.c, 107 :: 		return -DBL_MAX;
0x0A7E	0xF46F0100  MVN	R1, #8388608
0x0A82	0xEE001A10  VMOV	S0, R1
0x0A86	0xE00C    B	L_end_ldexp
L_ldexp14:
;__Lib_CMath.c, 109 :: 		return DBL_MAX;
0x0A88	0x4907    LDR	R1, [PC, #28]
0x0A8A	0xEE001A10  VMOV	S0, R1
0x0A8E	0xE008    B	L_end_ldexp
L_ldexp13:
;__Lib_CMath.c, 111 :: 		uv.flt.exp = newexp;
; newexp start address is: 0 (R0)
0x0A90	0xB282    UXTH	R2, R0
; newexp end address is: 0 (R0)
0x0A92	0xF8BD1002  LDRH	R1, [SP, #2]
0x0A96	0xF36211CE  BFI	R1, R2, #7, #8
0x0A9A	0xF8AD1002  STRH	R1, [SP, #2]
;__Lib_CMath.c, 112 :: 		return uv.fl;
0x0A9E	0xED1D0A00  VLDR.32	S0, [SP, #0]
;__Lib_CMath.c, 114 :: 		}
L_end_ldexp:
0x0AA2	0xB001    ADD	SP, SP, #4
0x0AA4	0x4770    BX	LR
0x0AA6	0xBF00    NOP
0x0AA8	0xFFFF7F7F  	#2139095039
; end of _ldexp
_DisplayAlcoholValue:
;HEXIWEAR_Alcohol_Click.c, 191 :: 		void DisplayAlcoholValue( unsigned int value )
0x188C	0xB082    SUB	SP, SP, #8
0x188E	0xF8CDE000  STR	LR, [SP, #0]
0x1892	0xF8AD0004  STRH	R0, [SP, #4]
;HEXIWEAR_Alcohol_Click.c, 193 :: 		if ( value_old != value )
0x1896	0xF8BD1004  LDRH	R1, [SP, #4]
0x189A	0xEE001A90  VMOV	S1, R1
0x189E	0xEEF80A60  VCVT.F32.U32	S1, S1
0x18A2	0x4919    LDR	R1, [PC, #100]
0x18A4	0xED110A00  VLDR.32	S0, [R1, #0]
0x18A8	0xEEB40AE0  VCMPE.F32	S0, S1
0x18AC	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x18B0	0xD01C    BEQ	L_DisplayAlcoholValue4
;HEXIWEAR_Alcohol_Click.c, 196 :: 		OLED_SetFont( guiFont_Tahoma_8_Regular, OLED_COLOR_WHITE, 0 );
0x18B2	0x4916    LDR	R1, [PC, #88]
0x18B4	0x2200    MOVS	R2, #0
0x18B6	0x4608    MOV	R0, R1
0x18B8	0xF64F71FF  MOVW	R1, #65535
0x18BC	0xF7FFFED4  BL	_OLED_SetFont+0
;HEXIWEAR_Alcohol_Click.c, 197 :: 		OLED_WriteText( text, 50, 75 );
0x18C0	0x224B    MOVS	R2, #75
0x18C2	0x2132    MOVS	R1, #50
0x18C4	0x4812    LDR	R0, [PC, #72]
0x18C6	0xF7FFFFAF  BL	_OLED_WriteText+0
;HEXIWEAR_Alcohol_Click.c, 199 :: 		WordToStr(value, text);
0x18CA	0x4911    LDR	R1, [PC, #68]
0x18CC	0xF8BD0004  LDRH	R0, [SP, #4]
0x18D0	0xF7FFFF84  BL	_WordToStr+0
;HEXIWEAR_Alcohol_Click.c, 201 :: 		OLED_SetFont( guiFont_Tahoma_8_Regular, OLED_COLOR_BLACK, 0 );
0x18D4	0x490D    LDR	R1, [PC, #52]
0x18D6	0x2200    MOVS	R2, #0
0x18D8	0x4608    MOV	R0, R1
0x18DA	0xF2400100  MOVW	R1, #0
0x18DE	0xF7FFFEC3  BL	_OLED_SetFont+0
;HEXIWEAR_Alcohol_Click.c, 202 :: 		OLED_WriteText( text, 50, 75 );
0x18E2	0x224B    MOVS	R2, #75
0x18E4	0x2132    MOVS	R1, #50
0x18E6	0x480A    LDR	R0, [PC, #40]
0x18E8	0xF7FFFF9E  BL	_OLED_WriteText+0
;HEXIWEAR_Alcohol_Click.c, 203 :: 		}
L_DisplayAlcoholValue4:
;HEXIWEAR_Alcohol_Click.c, 204 :: 		value_old = value;
0x18EC	0xF8BD1004  LDRH	R1, [SP, #4]
0x18F0	0xEE001A10  VMOV	S0, R1
0x18F4	0xEEB80A40  VCVT.F32.U32	S0, S0
0x18F8	0x4903    LDR	R1, [PC, #12]
0x18FA	0xED010A00  VSTR.32	S0, [R1, #0]
;HEXIWEAR_Alcohol_Click.c, 205 :: 		}
L_end_DisplayAlcoholValue:
0x18FE	0xF8DDE000  LDR	LR, [SP, #0]
0x1902	0xB002    ADD	SP, SP, #8
0x1904	0x4770    BX	LR
0x1906	0xBF00    NOP
0x1908	0x00081FFF  	_value_old+0
0x190C	0x68460000  	_guiFont_Tahoma_8_Regular+0
0x1910	0x001C1FFF  	_text+0
; end of _DisplayAlcoholValue
_WordToStr:
;__Lib_Conversions.c, 114 :: 		void WordToStr(unsigned input, char * output) {
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x17DC	0x460A    MOV	R2, R1
0x17DE	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		for(len=0;len < 5; len++)
; len start address is: 0 (R0)
0x17E0	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x17E2	0xB28D    UXTH	R5, R1
0x17E4	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x17E6	0x2805    CMP	R0, #5
0x17E8	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		output[len] = ' ';
0x17EA	0x180B    ADDS	R3, R1, R0
0x17EC	0x2220    MOVS	R2, #32
0x17EE	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		for(len=0;len < 5; len++)
0x17F0	0x1C40    ADDS	R0, R0, #1
0x17F2	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		output[len] = ' ';
0x17F4	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		output[len--] = 0;
0x17F6	0x180B    ADDS	R3, R1, R0
0x17F8	0x2200    MOVS	R2, #0
0x17FA	0x701A    STRB	R2, [R3, #0]
0x17FC	0x1E40    SUBS	R0, R0, #1
0x17FE	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		while(1) {
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		output[len] = input % 10u + 48;
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1800	0x180C    ADDS	R4, R1, R0
0x1802	0x230A    MOVS	R3, #10
0x1804	0xFBB5F2F3  UDIV	R2, R5, R3
0x1808	0xFB035212  MLS	R2, R3, R2, R5
0x180C	0xB292    UXTH	R2, R2
0x180E	0x3230    ADDS	R2, #48
0x1810	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		input = input / 10u;
0x1812	0x220A    MOVS	R2, #10
0x1814	0xFBB5F2F2  UDIV	R2, R5, R2
0x1818	0xB292    UXTH	R2, R2
0x181A	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		if (input == 0)
0x181C	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		break;
0x181E	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		len--;
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x1820	0x1E40    SUBS	R0, R0, #1
0x1822	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		}
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x1824	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		}
L_end_WordToStr:
0x1826	0x4770    BX	LR
; end of _WordToStr
__Lib_System_InitialSetUpRCCRCC2:
;__Lib_System.c, 994 :: 		static void InitialSetUpRCCRCC2(){
0x1AF8	0xB08F    SUB	SP, SP, #60
;__Lib_System.c, 1001 :: 		asm CPSID I;
0x1AFA	0xB672    CPSID	i
;__Lib_System.c, 1003 :: 		ulOSC_CR       = 12345678;
0x1AFC	0x4897    LDR	R0, [PC, #604]
0x1AFE	0x9000    STR	R0, [SP, #0]
;__Lib_System.c, 1004 :: 		ulSIM_SOPT1    = 12345679;
0x1B00	0x4897    LDR	R0, [PC, #604]
0x1B02	0x9001    STR	R0, [SP, #4]
;__Lib_System.c, 1005 :: 		ulSIM_SOPT2    = 12345680;
0x1B04	0x4897    LDR	R0, [PC, #604]
0x1B06	0x9002    STR	R0, [SP, #8]
;__Lib_System.c, 1006 :: 		ulSIM_CLKDIV1  = 12345681;
0x1B08	0x4897    LDR	R0, [PC, #604]
0x1B0A	0x9003    STR	R0, [SP, #12]
;__Lib_System.c, 1007 :: 		ulMCG_C1       = 12345682;
0x1B0C	0x4897    LDR	R0, [PC, #604]
0x1B0E	0x9004    STR	R0, [SP, #16]
;__Lib_System.c, 1008 :: 		ulMCG_C2       = 12345683;
0x1B10	0x4897    LDR	R0, [PC, #604]
0x1B12	0x9005    STR	R0, [SP, #20]
;__Lib_System.c, 1009 :: 		ulMCG_C4       = 12345684;
0x1B14	0x4897    LDR	R0, [PC, #604]
0x1B16	0x9006    STR	R0, [SP, #24]
;__Lib_System.c, 1010 :: 		ulMCG_C5       = 12345685;
0x1B18	0x4897    LDR	R0, [PC, #604]
0x1B1A	0x9007    STR	R0, [SP, #28]
;__Lib_System.c, 1011 :: 		ulMCG_C6       = 12345686;
0x1B1C	0x4897    LDR	R0, [PC, #604]
0x1B1E	0x9008    STR	R0, [SP, #32]
;__Lib_System.c, 1012 :: 		ulMCG_SC       = 12345687;
0x1B20	0x4897    LDR	R0, [PC, #604]
0x1B22	0x9009    STR	R0, [SP, #36]
;__Lib_System.c, 1013 :: 		ulMCG_C7       = 12345688;
0x1B24	0x4897    LDR	R0, [PC, #604]
0x1B26	0x900A    STR	R0, [SP, #40]
;__Lib_System.c, 1014 :: 		ulSIM_CLKDIV2  = 12345689;
0x1B28	0x4897    LDR	R0, [PC, #604]
0x1B2A	0x900B    STR	R0, [SP, #44]
;__Lib_System.c, 1015 :: 		ulWDOG_STCTRLH = 12345690;
; ulWDOG_STCTRLH start address is: 4 (R1)
0x1B2C	0x4997    LDR	R1, [PC, #604]
;__Lib_System.c, 1016 :: 		ulMCG_MODE     = 12345691;
0x1B2E	0x4898    LDR	R0, [PC, #608]
0x1B30	0x900C    STR	R0, [SP, #48]
;__Lib_System.c, 1018 :: 		Fosc_kHz       = 12345677;
0x1B32	0x4898    LDR	R0, [PC, #608]
0x1B34	0x900D    STR	R0, [SP, #52]
;__Lib_System.c, 1020 :: 		mcg_mode       = ulMCG_MODE & 0x7;
0x1B36	0x980C    LDR	R0, [SP, #48]
0x1B38	0xF0000007  AND	R0, R0, #7
0x1B3C	0x900E    STR	R0, [SP, #56]
;__Lib_System.c, 1023 :: 		if ((ulWDOG_STCTRLH & WDOG_STCTRLH_WDOGEN_MASK) == 0) {
0x1B3E	0xF0010001  AND	R0, R1, #1
; ulWDOG_STCTRLH end address is: 4 (R1)
0x1B42	0xB950    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC231
;__Lib_System.c, 1026 :: 		WDOG->UNLOCK = WDOG_UNLOCK_WDOGUNLOCK(0xC520); // Key 1 //
0x1B44	0xF24C5020  MOVW	R0, #50464
0x1B48	0x4993    LDR	R1, [PC, #588]
0x1B4A	0x8008    STRH	R0, [R1, #0]
;__Lib_System.c, 1028 :: 		WDOG->UNLOCK = WDOG_UNLOCK_WDOGUNLOCK(0xD928); // Key 2 //
0x1B4C	0xF64D1028  MOVW	R0, #55592
0x1B50	0x8008    STRH	R0, [R1, #0]
;__Lib_System.c, 1035 :: 		0x0100U;
0x1B52	0xF24011D2  MOVW	R1, #466
0x1B56	0x4891    LDR	R0, [PC, #580]
0x1B58	0x8001    STRH	R1, [R0, #0]
;__Lib_System.c, 1036 :: 		}
L___Lib_System_InitialSetUpRCCRCC231:
;__Lib_System.c, 1038 :: 		SCB->VTOR = 0;
0x1B5A	0x2100    MOVS	R1, #0
0x1B5C	0x4890    LDR	R0, [PC, #576]
0x1B5E	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1040 :: 		if((RCM->SRS0 & RCM_SRS0_WAKEUP_MASK) != 0x00)
0x1B60	0x4890    LDR	R0, [PC, #576]
0x1B62	0x7800    LDRB	R0, [R0, #0]
0x1B64	0xF0000001  AND	R0, R0, #1
0x1B68	0xB2C0    UXTB	R0, R0
0x1B6A	0xB158    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC232
;__Lib_System.c, 1042 :: 		if((PMC->REGSC & PMC_REGSC_ACKISO_MASK) != 0x00)
0x1B6C	0x488E    LDR	R0, [PC, #568]
0x1B6E	0x7800    LDRB	R0, [R0, #0]
0x1B70	0xF0000008  AND	R0, R0, #8
0x1B74	0xB2C0    UXTB	R0, R0
0x1B76	0xB120    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC233
;__Lib_System.c, 1044 :: 		PMC->REGSC |= PMC_REGSC_ACKISO_MASK; // Release hold with ACKISO:  Only has an effect if recovering from VLLSx.//
0x1B78	0x498B    LDR	R1, [PC, #556]
0x1B7A	0x7808    LDRB	R0, [R1, #0]
0x1B7C	0xF0400008  ORR	R0, R0, #8
0x1B80	0x7008    STRB	R0, [R1, #0]
;__Lib_System.c, 1045 :: 		}
L___Lib_System_InitialSetUpRCCRCC233:
;__Lib_System.c, 1046 :: 		} else {
0x1B82	0xE021    B	L___Lib_System_InitialSetUpRCCRCC234
L___Lib_System_InitialSetUpRCCRCC232:
;__Lib_System.c, 1047 :: 		SIM_SCGC6 |= SIM_SCGC6_RTC_MASK;
0x1B84	0x4889    LDR	R0, [PC, #548]
0x1B86	0x6800    LDR	R0, [R0, #0]
0x1B88	0xF0405100  ORR	R1, R0, #536870912
0x1B8C	0x4887    LDR	R0, [PC, #540]
0x1B8E	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1048 :: 		if ((RTC_CR & RTC_CR_OSCE_MASK) == 0x00) { // Only if the OSCILLATOR is not already enabled //
0x1B90	0x4887    LDR	R0, [PC, #540]
0x1B92	0x6800    LDR	R0, [R0, #0]
0x1B94	0xF4007080  AND	R0, R0, #256
0x1B98	0xB9B0    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC235
;__Lib_System.c, 1049 :: 		RTC_CR = (unsigned long)((RTC_CR & (unsigned long)~(unsigned long)(RTC_CR_SC2P_MASK | RTC_CR_SC4P_MASK | RTC_CR_SC8P_MASK | RTC_CR_SC16P_MASK)) | (unsigned long)SYSTEM_RTC_CR_VALUE);
0x1B9A	0x4885    LDR	R0, [PC, #532]
0x1B9C	0x6801    LDR	R1, [R0, #0]
0x1B9E	0xF46F5070  MVN	R0, #15360
0x1BA2	0xEA010000  AND	R0, R1, R0, LSL #0
0x1BA6	0xF4407140  ORR	R1, R0, #768
0x1BAA	0x4881    LDR	R0, [PC, #516]
0x1BAC	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1050 :: 		RTC_CR |= (unsigned long)RTC_CR_OSCE_MASK;
0x1BAE	0x4880    LDR	R0, [PC, #512]
0x1BB0	0x6800    LDR	R0, [R0, #0]
0x1BB2	0xF4407180  ORR	R1, R0, #256
0x1BB6	0x487E    LDR	R0, [PC, #504]
0x1BB8	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1051 :: 		RTC_CR &= (unsigned long)~(uint32_t)RTC_CR_CLKO_MASK;
0x1BBA	0x487D    LDR	R0, [PC, #500]
0x1BBC	0x6801    LDR	R1, [R0, #0]
0x1BBE	0xF46F7000  MVN	R0, #512
0x1BC2	0x4001    ANDS	R1, R0
0x1BC4	0x487A    LDR	R0, [PC, #488]
0x1BC6	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1052 :: 		}
L___Lib_System_InitialSetUpRCCRCC235:
;__Lib_System.c, 1053 :: 		}
L___Lib_System_InitialSetUpRCCRCC234:
;__Lib_System.c, 1056 :: 		SMC_PMPROT = SYSTEM_SMC_PMPROT_VALUE; // Enable all modes; mcu familly dependant
0x1BC8	0x21AA    MOVS	R1, #170
0x1BCA	0x487A    LDR	R0, [PC, #488]
0x1BCC	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1058 :: 		if ((ulMCG_MODE & 0x10) == 0) {
0x1BCE	0x980C    LDR	R0, [SP, #48]
0x1BD0	0xF0000010  AND	R0, R0, #16
0x1BD4	0xB958    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC236
;__Lib_System.c, 1060 :: 		SMC_PMCTRL &= ~SMC_PMCTRL_RUNM_MASK; // clear [5:6] bits, set RUN mode as default
0x1BD6	0x4878    LDR	R0, [PC, #480]
0x1BD8	0x7800    LDRB	R0, [R0, #0]
0x1BDA	0xF000019F  AND	R1, R0, #159
0x1BDE	0x4876    LDR	R0, [PC, #472]
0x1BE0	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1062 :: 		while(SMC_PMSTAT != 0x01);
L___Lib_System_InitialSetUpRCCRCC237:
0x1BE2	0x4876    LDR	R0, [PC, #472]
0x1BE4	0x7800    LDRB	R0, [R0, #0]
0x1BE6	0x2801    CMP	R0, #1
0x1BE8	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC238
0x1BEA	0xE7FA    B	L___Lib_System_InitialSetUpRCCRCC237
L___Lib_System_InitialSetUpRCCRCC238:
;__Lib_System.c, 1063 :: 		} else if((ulMCG_MODE & 0x10)) {
0x1BEC	0xE01B    B	L___Lib_System_InitialSetUpRCCRCC239
L___Lib_System_InitialSetUpRCCRCC236:
0x1BEE	0x980C    LDR	R0, [SP, #48]
0x1BF0	0xF0000010  AND	R0, R0, #16
0x1BF4	0xB1B8    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC240
;__Lib_System.c, 1065 :: 		if (Fosc_kHz > 80000) {
0x1BF6	0x990D    LDR	R1, [SP, #52]
0x1BF8	0x4871    LDR	R0, [PC, #452]
0x1BFA	0x4281    CMP	R1, R0
0x1BFC	0xD908    BLS	L___Lib_System_InitialSetUpRCCRCC241
;__Lib_System.c, 1067 :: 		SMC_PMCTRL = SMC_PMCTRL_RUNM_MASK;
0x1BFE	0x2160    MOVS	R1, #96
0x1C00	0x486D    LDR	R0, [PC, #436]
0x1C02	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1069 :: 		while(SMC_PMSTAT != 0x80);
L___Lib_System_InitialSetUpRCCRCC242:
0x1C04	0x486D    LDR	R0, [PC, #436]
0x1C06	0x7800    LDRB	R0, [R0, #0]
0x1C08	0x2880    CMP	R0, #128
0x1C0A	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC243
0x1C0C	0xE7FA    B	L___Lib_System_InitialSetUpRCCRCC242
L___Lib_System_InitialSetUpRCCRCC243:
;__Lib_System.c, 1070 :: 		} else {
0x1C0E	0xE00A    B	L___Lib_System_InitialSetUpRCCRCC244
L___Lib_System_InitialSetUpRCCRCC241:
;__Lib_System.c, 1071 :: 		SMC_PMCTRL &= ~SMC_PMCTRL_RUNM_MASK;
0x1C10	0x4869    LDR	R0, [PC, #420]
0x1C12	0x7800    LDRB	R0, [R0, #0]
0x1C14	0xF000019F  AND	R1, R0, #159
0x1C18	0x4867    LDR	R0, [PC, #412]
0x1C1A	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1072 :: 		while(SMC_PMSTAT != 0x01);
L___Lib_System_InitialSetUpRCCRCC245:
0x1C1C	0x4867    LDR	R0, [PC, #412]
0x1C1E	0x7800    LDRB	R0, [R0, #0]
0x1C20	0x2801    CMP	R0, #1
0x1C22	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC246
0x1C24	0xE7FA    B	L___Lib_System_InitialSetUpRCCRCC245
L___Lib_System_InitialSetUpRCCRCC246:
;__Lib_System.c, 1073 :: 		}
L___Lib_System_InitialSetUpRCCRCC244:
;__Lib_System.c, 1074 :: 		}
L___Lib_System_InitialSetUpRCCRCC240:
L___Lib_System_InitialSetUpRCCRCC239:
;__Lib_System.c, 1076 :: 		SIM_CLKDIV1 = ulSIM_CLKDIV1;
0x1C26	0x9903    LDR	R1, [SP, #12]
0x1C28	0x4866    LDR	R0, [PC, #408]
0x1C2A	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1078 :: 		SIM_SOPT1   = ((SIM_SOPT1 & (unsigned long)(~SIM_SOPT1_OSC32KSEL_MASK)) | (ulSIM_SOPT1 & SIM_SOPT1_OSC32KSEL_MASK));
0x1C2C	0x4866    LDR	R0, [PC, #408]
0x1C2E	0x6801    LDR	R1, [R0, #0]
0x1C30	0xF46F2040  MVN	R0, #786432
0x1C34	0x4001    ANDS	R1, R0
0x1C36	0x9801    LDR	R0, [SP, #4]
0x1C38	0xF4002040  AND	R0, R0, #786432
0x1C3C	0x4301    ORRS	R1, R0
0x1C3E	0x4862    LDR	R0, [PC, #392]
0x1C40	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1080 :: 		SIM_SOPT2   = ((SIM_SOPT2 & (unsigned long)(~SIM_SOPT2_PLLFLLSEL_MASK)) | (ulSIM_SOPT2 & SIM_SOPT2_PLLFLLSEL_MASK));
0x1C42	0x4862    LDR	R0, [PC, #392]
0x1C44	0x6801    LDR	R1, [R0, #0]
0x1C46	0xF46F3040  MVN	R0, #196608
0x1C4A	0x4001    ANDS	R1, R0
0x1C4C	0x9802    LDR	R0, [SP, #8]
0x1C4E	0xF4003040  AND	R0, R0, #196608
0x1C52	0x4301    ORRS	R1, R0
0x1C54	0x485D    LDR	R0, [PC, #372]
0x1C56	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1082 :: 		if ((mcg_mode == MCG_MODE_FEI) || (mcg_mode == MCG_MODE_FBI) || (mcg_mode == MCG_MODE_BLPI)) {
0x1C58	0x980E    LDR	R0, [SP, #56]
0x1C5A	0xB130    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC2124
0x1C5C	0x980E    LDR	R0, [SP, #56]
0x1C5E	0x2801    CMP	R0, #1
0x1C60	0xD003    BEQ	L___Lib_System_InitialSetUpRCCRCC2123
0x1C62	0x980E    LDR	R0, [SP, #56]
0x1C64	0x2802    CMP	R0, #2
0x1C66	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2122
0x1C68	0xE064    B	L___Lib_System_InitialSetUpRCCRCC249
L___Lib_System_InitialSetUpRCCRCC2124:
L___Lib_System_InitialSetUpRCCRCC2123:
L___Lib_System_InitialSetUpRCCRCC2122:
;__Lib_System.c, 1084 :: 		if (((ulOSC_CR & OSC_CR_ERCLKEN_MASK) != 0x00) || (((ulMCG_C5 & MCG_C5_PLLCLKEN0_MASK) != 0x00) && ((ulMCG_C7 & MCG_C7_OSCSEL_MASK) == 0x00))){
0x1C6A	0x9800    LDR	R0, [SP, #0]
0x1C6C	0xF0000080  AND	R0, R0, #128
0x1C70	0xB950    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC2127
0x1C72	0x9807    LDR	R0, [SP, #28]
0x1C74	0xF0000040  AND	R0, R0, #64
0x1C78	0xB128    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC2126
0x1C7A	0x980A    LDR	R0, [SP, #40]
0x1C7C	0xF0000003  AND	R0, R0, #3
0x1C80	0x2800    CMP	R0, #0
0x1C82	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC2125
0x1C84	0xE000    B	L___Lib_System_InitialSetUpRCCRCC2119
L___Lib_System_InitialSetUpRCCRCC2126:
L___Lib_System_InitialSetUpRCCRCC2125:
0x1C86	0xE015    B	L___Lib_System_InitialSetUpRCCRCC254
L___Lib_System_InitialSetUpRCCRCC2119:
L___Lib_System_InitialSetUpRCCRCC2127:
;__Lib_System.c, 1086 :: 		SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
0x1C88	0x4851    LDR	R0, [PC, #324]
0x1C8A	0x6800    LDR	R0, [R0, #0]
0x1C8C	0xF4407100  ORR	R1, R0, #512
0x1C90	0x484F    LDR	R0, [PC, #316]
0x1C92	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1088 :: 		PORTA_PCR18 &= (unsigned long)~(unsigned long)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
0x1C94	0x484F    LDR	R0, [PC, #316]
0x1C96	0x6801    LDR	R1, [R0, #0]
0x1C98	0x484F    LDR	R0, [PC, #316]
0x1C9A	0x4001    ANDS	R1, R0
0x1C9C	0x484D    LDR	R0, [PC, #308]
0x1C9E	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1089 :: 		if ((ulMCG_C2 & MCG_C2_EREFS_MASK) != 0x00) {
0x1CA0	0x9805    LDR	R0, [SP, #20]
0x1CA2	0xF0000004  AND	R0, R0, #4
0x1CA6	0xB128    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC255
;__Lib_System.c, 1091 :: 		PORTA_PCR19 &= (unsigned long)~(unsigned long)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
0x1CA8	0x484C    LDR	R0, [PC, #304]
0x1CAA	0x6801    LDR	R1, [R0, #0]
0x1CAC	0x484A    LDR	R0, [PC, #296]
0x1CAE	0x4001    ANDS	R1, R0
0x1CB0	0x484A    LDR	R0, [PC, #296]
0x1CB2	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1092 :: 		}
L___Lib_System_InitialSetUpRCCRCC255:
;__Lib_System.c, 1093 :: 		}
L___Lib_System_InitialSetUpRCCRCC254:
;__Lib_System.c, 1094 :: 		MCG_SC = ulMCG_SC;       // Set SC (fast clock internal reference divider)
0x1CB4	0x9909    LDR	R1, [SP, #36]
0x1CB6	0x484A    LDR	R0, [PC, #296]
0x1CB8	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1095 :: 		MCG_C1 = ulMCG_C1;       // Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.)
0x1CBA	0x9904    LDR	R1, [SP, #16]
0x1CBC	0x4849    LDR	R0, [PC, #292]
0x1CBE	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1097 :: 		if ((ulMCG_C1 & MCG_C1_IREFS_MASK) != 0x00) {
0x1CC0	0x9804    LDR	R0, [SP, #16]
0x1CC2	0xF0000004  AND	R0, R0, #4
0x1CC6	0xB140    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC256
;__Lib_System.c, 1098 :: 		while((MCG_S & MCG_S_IREFST_MASK) == 0x00) {
L___Lib_System_InitialSetUpRCCRCC257:
0x1CC8	0x4847    LDR	R0, [PC, #284]
0x1CCA	0x7800    LDRB	R0, [R0, #0]
0x1CCC	0xF0000010  AND	R0, R0, #16
0x1CD0	0xB2C0    UXTB	R0, R0
0x1CD2	0x2800    CMP	R0, #0
0x1CD4	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC258
;__Lib_System.c, 1099 :: 		}
0x1CD6	0xE7F7    B	L___Lib_System_InitialSetUpRCCRCC257
L___Lib_System_InitialSetUpRCCRCC258:
;__Lib_System.c, 1100 :: 		} else {
0x1CD8	0xE006    B	L___Lib_System_InitialSetUpRCCRCC259
L___Lib_System_InitialSetUpRCCRCC256:
;__Lib_System.c, 1101 :: 		while((MCG_S & MCG_S_IREFST_MASK) != 0x00) {
L___Lib_System_InitialSetUpRCCRCC260:
0x1CDA	0x4843    LDR	R0, [PC, #268]
0x1CDC	0x7800    LDRB	R0, [R0, #0]
0x1CDE	0xF0000010  AND	R0, R0, #16
0x1CE2	0xB2C0    UXTB	R0, R0
0x1CE4	0xB100    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC261
;__Lib_System.c, 1102 :: 		}
0x1CE6	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC260
L___Lib_System_InitialSetUpRCCRCC261:
;__Lib_System.c, 1103 :: 		}
L___Lib_System_InitialSetUpRCCRCC259:
;__Lib_System.c, 1104 :: 		MCG_C2 = (MCG_C2 & (unsigned char)(~MCG_C2_FCFTRIM_MASK)) | (ulMCG_C2 & (unsigned char)(~MCG_C2_LP_MASK)); // Set C2 (freq. range, ext. and int. reference selection etc. excluding trim bits; low power bit is set later)
0x1CE8	0x4840    LDR	R0, [PC, #256]
0x1CEA	0x7800    LDRB	R0, [R0, #0]
0x1CEC	0xF00001BF  AND	R1, R0, #191
0x1CF0	0xB2C9    UXTB	R1, R1
0x1CF2	0x9805    LDR	R0, [SP, #20]
0x1CF4	0xF00000FD  AND	R0, R0, #253
0x1CF8	0x4301    ORRS	R1, R0
0x1CFA	0x483C    LDR	R0, [PC, #240]
0x1CFC	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1105 :: 		MCG_C4 = (ulMCG_C4 & (unsigned char)(~(MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK))) | (MCG_C4 & (MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK)); // Set C4 (FLL output; trim values not changed)
0x1CFE	0x9806    LDR	R0, [SP, #24]
0x1D00	0xF00001E0  AND	R1, R0, #224
0x1D04	0x483A    LDR	R0, [PC, #232]
0x1D06	0x7800    LDRB	R0, [R0, #0]
0x1D08	0xF000001F  AND	R0, R0, #31
0x1D0C	0xB2C0    UXTB	R0, R0
0x1D0E	0x4301    ORRS	R1, R0
0x1D10	0x4837    LDR	R0, [PC, #220]
0x1D12	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1106 :: 		OSC_CR = ulOSC_CR;       // Set OSC_CR (OSCERCLK enable, oscillator capacitor load)
0x1D14	0x9900    LDR	R1, [SP, #0]
0x1D16	0x4837    LDR	R0, [PC, #220]
0x1D18	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1107 :: 		MCG_C7 = ulMCG_C7;       // Set C7 (OSC Clock Select)
0x1D1A	0x990A    LDR	R1, [SP, #40]
0x1D1C	0x4836    LDR	R0, [PC, #216]
0x1D1E	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1108 :: 		if (mcg_mode == MCG_MODE_BLPI){
0x1D20	0x980E    LDR	R0, [SP, #56]
0x1D22	0x2802    CMP	R0, #2
0x1D24	0xD105    BNE	L___Lib_System_InitialSetUpRCCRCC262
;__Lib_System.c, 1110 :: 		MCG_C2 |= MCG_C2_LP_MASK;         // Disable FLL and PLL in bypass mode
0x1D26	0x4831    LDR	R0, [PC, #196]
0x1D28	0x7800    LDRB	R0, [R0, #0]
0x1D2A	0xF0400102  ORR	R1, R0, #2
0x1D2E	0x482F    LDR	R0, [PC, #188]
0x1D30	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1111 :: 		}
L___Lib_System_InitialSetUpRCCRCC262:
;__Lib_System.c, 1112 :: 		}else { // MCG_MODE
0x1D32	0xE0BD    B	L___Lib_System_InitialSetUpRCCRCC263
L___Lib_System_InitialSetUpRCCRCC249:
;__Lib_System.c, 1114 :: 		if (((ulOSC_CR & OSC_CR_ERCLKEN_MASK) != 0x00) || ((ulMCG_C7 & MCG_C7_OSCSEL_MASK) == 0x00)) {
0x1D34	0x9800    LDR	R0, [SP, #0]
0x1D36	0xF0000080  AND	R0, R0, #128
0x1D3A	0xB920    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC2129
0x1D3C	0x980A    LDR	R0, [SP, #40]
0x1D3E	0xF0000003  AND	R0, R0, #3
0x1D42	0xB100    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC2128
0x1D44	0xE066    B	L___Lib_System_InitialSetUpRCCRCC266
L___Lib_System_InitialSetUpRCCRCC2129:
L___Lib_System_InitialSetUpRCCRCC2128:
;__Lib_System.c, 1116 :: 		SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
0x1D46	0x4822    LDR	R0, [PC, #136]
0x1D48	0x6800    LDR	R0, [R0, #0]
0x1D4A	0xF4407100  ORR	R1, R0, #512
0x1D4E	0x4820    LDR	R0, [PC, #128]
0x1D50	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1118 :: 		PORTA_PCR18 &= (unsigned long)~(unsigned long)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
0x1D52	0x4820    LDR	R0, [PC, #128]
0x1D54	0x6801    LDR	R1, [R0, #0]
0x1D56	0x4820    LDR	R0, [PC, #128]
0x1D58	0x4001    ANDS	R1, R0
0x1D5A	0xE04F    B	#158
0x1D5C	0x00800000  	#128
0x1D60	0x00000008  	#524288
0x1D64	0x00000001  	#65536
0x1D68	0x00000144  	#21233664
0x1D6C	0x00220000  	#34
0x1D70	0x00240000  	#36
0x1D74	0x00000000  	#0
0x1D78	0x00020000  	#2
0x1D7C	0x00460000  	#70
0x1D80	0x00000000  	#0
0x1D84	0x00000000  	#0
0x1D88	0x00090000  	#9
0x1D8C	0x00000000  	#0
0x1D90	0x00070000  	#7
0x1D94	0xD4C00001  	#120000
0x1D98	0x200E4005  	#1074077710
0x1D9C	0x20004005  	#1074077696
0x1DA0	0xED08E000  	#3758157064
0x1DA4	0xF0004007  	#1074262016
0x1DA8	0xD0024007  	#1074253826
0x1DAC	0x803C4004  	SIM_SCGC6+0
0x1DB0	0xD0104003  	RTC_CR+0
0x1DB4	0xE0004007  	SMC_PMPROT+0
0x1DB8	0xE0014007  	SMC_PMCTRL+0
0x1DBC	0xE0034007  	SMC_PMSTAT+0
0x1DC0	0x38800001  	#80000
0x1DC4	0x80444004  	SIM_CLKDIV1+0
0x1DC8	0x70004004  	SIM_SOPT1+0
0x1DCC	0x80044004  	SIM_SOPT2+0
0x1DD0	0x80384004  	SIM_SCGC5+0
0x1DD4	0x90484004  	PORTA_PCR18+0
0x1DD8	0xF8FFFEFF  	#-16779009
0x1DDC	0x904C4004  	PORTA_PCR19+0
0x1DE0	0x40084006  	MCG_SC+0
0x1DE4	0x40004006  	MCG_C1+0
0x1DE8	0x40064006  	MCG_S+0
0x1DEC	0x40014006  	MCG_C2+0
0x1DF0	0x40034006  	MCG_C4+0
0x1DF4	0x50004006  	OSC_CR+0
0x1DF8	0x400C4006  	MCG_C7+0
0x1DFC	0x487F    LDR	R0, [PC, #508]
0x1DFE	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1119 :: 		if ((ulMCG_C2 & MCG_C2_EREFS_MASK) != 0x00) {
0x1E00	0x9805    LDR	R0, [SP, #20]
0x1E02	0xF0000004  AND	R0, R0, #4
0x1E06	0xB128    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC267
;__Lib_System.c, 1121 :: 		PORTA_PCR19 &= (unsigned long)~(unsigned long)((PORT_PCR_ISF_MASK | PORT_PCR_MUX(0x07)));
0x1E08	0x487D    LDR	R0, [PC, #500]
0x1E0A	0x6801    LDR	R1, [R0, #0]
0x1E0C	0x487D    LDR	R0, [PC, #500]
0x1E0E	0x4001    ANDS	R1, R0
0x1E10	0x487B    LDR	R0, [PC, #492]
0x1E12	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1122 :: 		}
L___Lib_System_InitialSetUpRCCRCC267:
;__Lib_System.c, 1123 :: 		}
L___Lib_System_InitialSetUpRCCRCC266:
;__Lib_System.c, 1124 :: 		MCG_SC = ulMCG_SC;                  // Set SC (fast clock internal reference divider)
0x1E14	0x9909    LDR	R1, [SP, #36]
0x1E16	0x487C    LDR	R0, [PC, #496]
0x1E18	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1125 :: 		MCG_C2 = (MCG_C2 & (unsigned char)(~(MCG_C2_FCFTRIM_MASK))) | (ulMCG_C2 & (unsigned char)(~MCG_C2_LP_MASK)); // Set C2 (freq. range, ext. and int. reference selection etc. excluding trim bits; low power bit is set later)
0x1E1A	0x487C    LDR	R0, [PC, #496]
0x1E1C	0x7800    LDRB	R0, [R0, #0]
0x1E1E	0xF00001BF  AND	R1, R0, #191
0x1E22	0xB2C9    UXTB	R1, R1
0x1E24	0x9805    LDR	R0, [SP, #20]
0x1E26	0xF00000FD  AND	R0, R0, #253
0x1E2A	0x4301    ORRS	R1, R0
0x1E2C	0x4877    LDR	R0, [PC, #476]
0x1E2E	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1126 :: 		OSC_CR = ulOSC_CR;                  // Set OSC_CR (OSCERCLK enable, oscillator capacitor load)
0x1E30	0x9900    LDR	R1, [SP, #0]
0x1E32	0x4877    LDR	R0, [PC, #476]
0x1E34	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1127 :: 		MCG_C7 = ulMCG_C7;                  // Set C7 (OSC Clock Select)
0x1E36	0x990A    LDR	R1, [SP, #40]
0x1E38	0x4876    LDR	R0, [PC, #472]
0x1E3A	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1128 :: 		if (mcg_mode == MCG_MODE_PEE)
0x1E3C	0x980E    LDR	R0, [SP, #56]
0x1E3E	0x2807    CMP	R0, #7
0x1E40	0xD105    BNE	L___Lib_System_InitialSetUpRCCRCC268
;__Lib_System.c, 1129 :: 		MCG_C1 = ulMCG_C1 | MCG_C1_CLKS(0x02); // Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.) - PBE mode
0x1E42	0x9804    LDR	R0, [SP, #16]
0x1E44	0xF0400180  ORR	R1, R0, #128
0x1E48	0x4873    LDR	R0, [PC, #460]
0x1E4A	0x7001    STRB	R1, [R0, #0]
0x1E4C	0xE002    B	L___Lib_System_InitialSetUpRCCRCC269
L___Lib_System_InitialSetUpRCCRCC268:
;__Lib_System.c, 1131 :: 		MCG_C1 = ulMCG_C1;       // Set C1 (clock source selection, FLL ext. reference divider, int. reference enable etc.)
0x1E4E	0x9904    LDR	R1, [SP, #16]
0x1E50	0x4871    LDR	R0, [PC, #452]
0x1E52	0x7001    STRB	R1, [R0, #0]
L___Lib_System_InitialSetUpRCCRCC269:
;__Lib_System.c, 1133 :: 		if (((ulMCG_C2 & MCG_C2_EREFS_MASK) != 0x00) && ((ulMCG_C7 & MCG_C7_OSCSEL_MASK) == 0x00)) {
0x1E54	0x9805    LDR	R0, [SP, #20]
0x1E56	0xF0000004  AND	R0, R0, #4
0x1E5A	0xB150    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC2131
0x1E5C	0x980A    LDR	R0, [SP, #40]
0x1E5E	0xF0000003  AND	R0, R0, #3
0x1E62	0xB930    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC2130
L___Lib_System_InitialSetUpRCCRCC2117:
;__Lib_System.c, 1134 :: 		while((MCG_S & MCG_S_OSCINIT0_MASK) == 0x00) { // Check that the oscillator is running
L___Lib_System_InitialSetUpRCCRCC273:
0x1E64	0x486D    LDR	R0, [PC, #436]
0x1E66	0x7800    LDRB	R0, [R0, #0]
0x1E68	0xF0000002  AND	R0, R0, #2
0x1E6C	0xB2C0    UXTB	R0, R0
0x1E6E	0xB900    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC274
;__Lib_System.c, 1135 :: 		}
0x1E70	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC273
L___Lib_System_InitialSetUpRCCRCC274:
;__Lib_System.c, 1133 :: 		if (((ulMCG_C2 & MCG_C2_EREFS_MASK) != 0x00) && ((ulMCG_C7 & MCG_C7_OSCSEL_MASK) == 0x00)) {
L___Lib_System_InitialSetUpRCCRCC2131:
L___Lib_System_InitialSetUpRCCRCC2130:
;__Lib_System.c, 1138 :: 		if ((ulMCG_C1 & MCG_C1_IREFS_MASK) != 0x00) {
0x1E72	0x9804    LDR	R0, [SP, #16]
0x1E74	0xF0000004  AND	R0, R0, #4
0x1E78	0xB140    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC275
;__Lib_System.c, 1139 :: 		while((MCG_S & MCG_S_IREFST_MASK) == 0x00) {
L___Lib_System_InitialSetUpRCCRCC276:
0x1E7A	0x4868    LDR	R0, [PC, #416]
0x1E7C	0x7800    LDRB	R0, [R0, #0]
0x1E7E	0xF0000010  AND	R0, R0, #16
0x1E82	0xB2C0    UXTB	R0, R0
0x1E84	0x2800    CMP	R0, #0
0x1E86	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC277
;__Lib_System.c, 1140 :: 		}
0x1E88	0xE7F7    B	L___Lib_System_InitialSetUpRCCRCC276
L___Lib_System_InitialSetUpRCCRCC277:
;__Lib_System.c, 1141 :: 		} else {
0x1E8A	0xE006    B	L___Lib_System_InitialSetUpRCCRCC278
L___Lib_System_InitialSetUpRCCRCC275:
;__Lib_System.c, 1142 :: 		while((MCG_S & MCG_S_IREFST_MASK) != 0x00) {
L___Lib_System_InitialSetUpRCCRCC279:
0x1E8C	0x4863    LDR	R0, [PC, #396]
0x1E8E	0x7800    LDRB	R0, [R0, #0]
0x1E90	0xF0000010  AND	R0, R0, #16
0x1E94	0xB2C0    UXTB	R0, R0
0x1E96	0xB100    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC280
;__Lib_System.c, 1143 :: 		}
0x1E98	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC279
L___Lib_System_InitialSetUpRCCRCC280:
;__Lib_System.c, 1144 :: 		}
L___Lib_System_InitialSetUpRCCRCC278:
;__Lib_System.c, 1145 :: 		MCG_C4 = (ulMCG_C4 & (unsigned char)(~(MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK))) | (MCG_C4 & (MCG_C4_FCTRIM_MASK | MCG_C4_SCFTRIM_MASK)); // Set C4 (FLL output; trim values not changed)
0x1E9A	0x9806    LDR	R0, [SP, #24]
0x1E9C	0xF00001E0  AND	R1, R0, #224
0x1EA0	0x485F    LDR	R0, [PC, #380]
0x1EA2	0x7800    LDRB	R0, [R0, #0]
0x1EA4	0xF000001F  AND	R0, R0, #31
0x1EA8	0xB2C0    UXTB	R0, R0
0x1EAA	0x4301    ORRS	R1, R0
0x1EAC	0x485C    LDR	R0, [PC, #368]
0x1EAE	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1146 :: 		}// end MCG_MODE
L___Lib_System_InitialSetUpRCCRCC263:
;__Lib_System.c, 1150 :: 		MCG_C5 = ulMCG_C5 & (unsigned char)(~MCG_C5_PLLCLKEN0_MASK); // Set C5 (PLL settings, PLL reference divider etc.)
0x1EB0	0x9807    LDR	R0, [SP, #28]
0x1EB2	0xF00001BF  AND	R1, R0, #191
0x1EB6	0x485B    LDR	R0, [PC, #364]
0x1EB8	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1151 :: 		MCG_C6 = ulMCG_C6 & (unsigned char)~(MCG_C6_PLLS_MASK); // Set C6 (PLL select, VCO divider etc.)
0x1EBA	0x9808    LDR	R0, [SP, #32]
0x1EBC	0xF00001BF  AND	R1, R0, #191
0x1EC0	0x4859    LDR	R0, [PC, #356]
0x1EC2	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1152 :: 		if (ulMCG_C5 & MCG_C5_PLLCLKEN0_MASK) {
0x1EC4	0x9807    LDR	R0, [SP, #28]
0x1EC6	0xF0000040  AND	R0, R0, #64
0x1ECA	0xB128    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC281
;__Lib_System.c, 1153 :: 		MCG_C5 |= MCG_C5_PLLCLKEN0_MASK;  // PLL clock enable in mode other than PEE or PBE
0x1ECC	0x4855    LDR	R0, [PC, #340]
0x1ECE	0x7800    LDRB	R0, [R0, #0]
0x1ED0	0xF0400140  ORR	R1, R0, #64
0x1ED4	0x4853    LDR	R0, [PC, #332]
0x1ED6	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1154 :: 		}
L___Lib_System_InitialSetUpRCCRCC281:
;__Lib_System.c, 1157 :: 		if (mcg_mode == MCG_MODE_BLPE){
0x1ED8	0x980E    LDR	R0, [SP, #56]
0x1EDA	0x2805    CMP	R0, #5
0x1EDC	0xD106    BNE	L___Lib_System_InitialSetUpRCCRCC282
;__Lib_System.c, 1158 :: 		MCG_C2 |= (MCG_C2_LP_MASK);         // Disable FLL and PLL in bypass mode
0x1EDE	0x484B    LDR	R0, [PC, #300]
0x1EE0	0x7800    LDRB	R0, [R0, #0]
0x1EE2	0xF0400102  ORR	R1, R0, #2
0x1EE6	0x4849    LDR	R0, [PC, #292]
0x1EE8	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1159 :: 		}
0x1EEA	0xE01C    B	L___Lib_System_InitialSetUpRCCRCC283
L___Lib_System_InitialSetUpRCCRCC282:
;__Lib_System.c, 1160 :: 		else if ((mcg_mode == MCG_MODE_PBE) || (mcg_mode == MCG_MODE_PEE)) {
0x1EEC	0x980E    LDR	R0, [SP, #56]
0x1EEE	0x2806    CMP	R0, #6
0x1EF0	0xD003    BEQ	L___Lib_System_InitialSetUpRCCRCC2133
0x1EF2	0x980E    LDR	R0, [SP, #56]
0x1EF4	0x2807    CMP	R0, #7
0x1EF6	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2132
0x1EF8	0xE015    B	L___Lib_System_InitialSetUpRCCRCC286
L___Lib_System_InitialSetUpRCCRCC2133:
L___Lib_System_InitialSetUpRCCRCC2132:
;__Lib_System.c, 1161 :: 		MCG_C6 |= (MCG_C6_PLLS_MASK);       // Set C6 (PLL select, VCO divider etc.)
0x1EFA	0x484B    LDR	R0, [PC, #300]
0x1EFC	0x7800    LDRB	R0, [R0, #0]
0x1EFE	0xF0400140  ORR	R1, R0, #64
0x1F02	0x4849    LDR	R0, [PC, #292]
0x1F04	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1162 :: 		while((MCG_S & MCG_S_LOCK0_MASK) == 0x00) { // Wait until PLL is locked
L___Lib_System_InitialSetUpRCCRCC287:
0x1F06	0x4845    LDR	R0, [PC, #276]
0x1F08	0x7800    LDRB	R0, [R0, #0]
0x1F0A	0xF0000040  AND	R0, R0, #64
0x1F0E	0xB2C0    UXTB	R0, R0
0x1F10	0xB900    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC288
;__Lib_System.c, 1163 :: 		}
0x1F12	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC287
L___Lib_System_InitialSetUpRCCRCC288:
;__Lib_System.c, 1164 :: 		if (mcg_mode == MCG_MODE_PEE) {
0x1F14	0x980E    LDR	R0, [SP, #56]
0x1F16	0x2807    CMP	R0, #7
0x1F18	0xD105    BNE	L___Lib_System_InitialSetUpRCCRCC289
;__Lib_System.c, 1165 :: 		MCG_C1 &= (unsigned char)~(MCG_C1_CLKS_MASK);
0x1F1A	0x483F    LDR	R0, [PC, #252]
0x1F1C	0x7800    LDRB	R0, [R0, #0]
0x1F1E	0xF000013F  AND	R1, R0, #63
0x1F22	0x483D    LDR	R0, [PC, #244]
0x1F24	0x7001    STRB	R1, [R0, #0]
;__Lib_System.c, 1166 :: 		}
L___Lib_System_InitialSetUpRCCRCC289:
;__Lib_System.c, 1167 :: 		}
L___Lib_System_InitialSetUpRCCRCC286:
L___Lib_System_InitialSetUpRCCRCC283:
;__Lib_System.c, 1169 :: 		if ((mcg_mode == MCG_MODE_FEI) || (mcg_mode == MCG_MODE_FEE)){
0x1F26	0x980E    LDR	R0, [SP, #56]
0x1F28	0xB118    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC2135
0x1F2A	0x980E    LDR	R0, [SP, #56]
0x1F2C	0x2803    CMP	R0, #3
0x1F2E	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2134
0x1F30	0xE029    B	L___Lib_System_InitialSetUpRCCRCC292
L___Lib_System_InitialSetUpRCCRCC2135:
L___Lib_System_InitialSetUpRCCRCC2134:
;__Lib_System.c, 1170 :: 		while((MCG_S & MCG_S_CLKST_MASK) != 0x00) { // Wait until output of the FLL is selected
L___Lib_System_InitialSetUpRCCRCC293:
0x1F32	0x483A    LDR	R0, [PC, #232]
0x1F34	0x7800    LDRB	R0, [R0, #0]
0x1F36	0xF000000C  AND	R0, R0, #12
0x1F3A	0xB2C0    UXTB	R0, R0
0x1F3C	0xB100    CBZ	R0, L___Lib_System_InitialSetUpRCCRCC294
;__Lib_System.c, 1171 :: 		}
0x1F3E	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC293
L___Lib_System_InitialSetUpRCCRCC294:
;__Lib_System.c, 1173 :: 		SIM_SCGC5 |= SIM_SCGC5_LPTMR_MASK;   // Alow software control of LPMTR
0x1F40	0x483A    LDR	R0, [PC, #232]
0x1F42	0x6800    LDR	R0, [R0, #0]
0x1F44	0xF0400101  ORR	R1, R0, #1
0x1F48	0x4838    LDR	R0, [PC, #224]
0x1F4A	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1174 :: 		LPTMR0_CMR = LPTMR_CMR_COMPARE(0);   // Default 1 LPO tick
0x1F4C	0x2100    MOVS	R1, #0
0x1F4E	0x4838    LDR	R0, [PC, #224]
0x1F50	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1175 :: 		LPTMR0_CSR = (LPTMR_CSR_TCF_MASK | LPTMR_CSR_TPS(0x00));
0x1F52	0x2180    MOVS	R1, #128
0x1F54	0x4837    LDR	R0, [PC, #220]
0x1F56	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1176 :: 		LPTMR0_PSR = (LPTMR_PSR_PCS(0x01) | LPTMR_PSR_PBYP_MASK); // Clock source: LPO, Prescaler bypass enable
0x1F58	0x2105    MOVS	R1, #5
0x1F5A	0x4837    LDR	R0, [PC, #220]
0x1F5C	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1177 :: 		LPTMR0_CSR = LPTMR_CSR_TEN_MASK;     // LPMTR enable
0x1F5E	0x2101    MOVS	R1, #1
0x1F60	0x4834    LDR	R0, [PC, #208]
0x1F62	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1178 :: 		while((LPTMR0_CSR & LPTMR_CSR_TCF_MASK) == 0x00) {
L___Lib_System_InitialSetUpRCCRCC295:
0x1F64	0x4833    LDR	R0, [PC, #204]
0x1F66	0x6800    LDR	R0, [R0, #0]
0x1F68	0xF0000080  AND	R0, R0, #128
0x1F6C	0xB900    CBNZ	R0, L___Lib_System_InitialSetUpRCCRCC296
;__Lib_System.c, 1179 :: 		}
0x1F6E	0xE7F9    B	L___Lib_System_InitialSetUpRCCRCC295
L___Lib_System_InitialSetUpRCCRCC296:
;__Lib_System.c, 1180 :: 		LPTMR0_CSR = 0x00;                   // Disable LPTMR
0x1F70	0x2100    MOVS	R1, #0
0x1F72	0x4830    LDR	R0, [PC, #192]
0x1F74	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1181 :: 		SIM_SCGC5 &= (uint32_t)~(uint32_t)SIM_SCGC5_LPTMR_MASK;
0x1F76	0x482D    LDR	R0, [PC, #180]
0x1F78	0x6801    LDR	R1, [R0, #0]
0x1F7A	0xF06F0001  MVN	R0, #1
0x1F7E	0x4001    ANDS	R1, R0
0x1F80	0x482A    LDR	R0, [PC, #168]
0x1F82	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1182 :: 		}
0x1F84	0xE02D    B	L___Lib_System_InitialSetUpRCCRCC297
L___Lib_System_InitialSetUpRCCRCC292:
;__Lib_System.c, 1183 :: 		else if ((mcg_mode == MCG_MODE_FBI) || (mcg_mode == MCG_MODE_BLPI)) {
0x1F86	0x980E    LDR	R0, [SP, #56]
0x1F88	0x2801    CMP	R0, #1
0x1F8A	0xD003    BEQ	L___Lib_System_InitialSetUpRCCRCC2137
0x1F8C	0x980E    LDR	R0, [SP, #56]
0x1F8E	0x2802    CMP	R0, #2
0x1F90	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2136
0x1F92	0xE008    B	L___Lib_System_InitialSetUpRCCRCC2100
L___Lib_System_InitialSetUpRCCRCC2137:
L___Lib_System_InitialSetUpRCCRCC2136:
;__Lib_System.c, 1184 :: 		while((MCG_S & MCG_S_CLKST_MASK) != 0x04) { // Wait until internal reference clock is selected as MCG output
L___Lib_System_InitialSetUpRCCRCC2101:
0x1F94	0x4821    LDR	R0, [PC, #132]
0x1F96	0x7800    LDRB	R0, [R0, #0]
0x1F98	0xF000000C  AND	R0, R0, #12
0x1F9C	0xB2C0    UXTB	R0, R0
0x1F9E	0x2804    CMP	R0, #4
0x1FA0	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2102
;__Lib_System.c, 1185 :: 		}
0x1FA2	0xE7F7    B	L___Lib_System_InitialSetUpRCCRCC2101
L___Lib_System_InitialSetUpRCCRCC2102:
;__Lib_System.c, 1186 :: 		}
0x1FA4	0xE01D    B	L___Lib_System_InitialSetUpRCCRCC2103
L___Lib_System_InitialSetUpRCCRCC2100:
;__Lib_System.c, 1187 :: 		else if ((mcg_mode == MCG_MODE_FBE) || (mcg_mode == MCG_MODE_PBE) || (mcg_mode == MCG_MODE_BLPE)) {
0x1FA6	0x980E    LDR	R0, [SP, #56]
0x1FA8	0x2804    CMP	R0, #4
0x1FAA	0xD006    BEQ	L___Lib_System_InitialSetUpRCCRCC2140
0x1FAC	0x980E    LDR	R0, [SP, #56]
0x1FAE	0x2806    CMP	R0, #6
0x1FB0	0xD003    BEQ	L___Lib_System_InitialSetUpRCCRCC2139
0x1FB2	0x980E    LDR	R0, [SP, #56]
0x1FB4	0x2805    CMP	R0, #5
0x1FB6	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2138
0x1FB8	0xE008    B	L___Lib_System_InitialSetUpRCCRCC2106
L___Lib_System_InitialSetUpRCCRCC2140:
L___Lib_System_InitialSetUpRCCRCC2139:
L___Lib_System_InitialSetUpRCCRCC2138:
;__Lib_System.c, 1188 :: 		while((MCG_S & MCG_S_CLKST_MASK) != 0x08) { // Wait until external reference clock is selected as MCG output
L___Lib_System_InitialSetUpRCCRCC2107:
0x1FBA	0x4818    LDR	R0, [PC, #96]
0x1FBC	0x7800    LDRB	R0, [R0, #0]
0x1FBE	0xF000000C  AND	R0, R0, #12
0x1FC2	0xB2C0    UXTB	R0, R0
0x1FC4	0x2808    CMP	R0, #8
0x1FC6	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2108
;__Lib_System.c, 1189 :: 		}
0x1FC8	0xE7F7    B	L___Lib_System_InitialSetUpRCCRCC2107
L___Lib_System_InitialSetUpRCCRCC2108:
;__Lib_System.c, 1190 :: 		}
0x1FCA	0xE00A    B	L___Lib_System_InitialSetUpRCCRCC2109
L___Lib_System_InitialSetUpRCCRCC2106:
;__Lib_System.c, 1191 :: 		else if (mcg_mode == MCG_MODE_PEE) {
0x1FCC	0x980E    LDR	R0, [SP, #56]
0x1FCE	0x2807    CMP	R0, #7
0x1FD0	0xD107    BNE	L___Lib_System_InitialSetUpRCCRCC2110
;__Lib_System.c, 1192 :: 		while((MCG_S & MCG_S_CLKST_MASK) != 0x0C) { // Wait until output of the PLL is selected
L___Lib_System_InitialSetUpRCCRCC2111:
0x1FD2	0x4812    LDR	R0, [PC, #72]
0x1FD4	0x7800    LDRB	R0, [R0, #0]
0x1FD6	0xF000000C  AND	R0, R0, #12
0x1FDA	0xB2C0    UXTB	R0, R0
0x1FDC	0x280C    CMP	R0, #12
0x1FDE	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC2112
;__Lib_System.c, 1193 :: 		}
0x1FE0	0xE7F7    B	L___Lib_System_InitialSetUpRCCRCC2111
L___Lib_System_InitialSetUpRCCRCC2112:
;__Lib_System.c, 1194 :: 		}
L___Lib_System_InitialSetUpRCCRCC2110:
L___Lib_System_InitialSetUpRCCRCC2109:
L___Lib_System_InitialSetUpRCCRCC2103:
L___Lib_System_InitialSetUpRCCRCC297:
;__Lib_System.c, 1204 :: 		SIM_CLKDIV2 = ((SIM_CLKDIV2) & (unsigned long)(~(SIM_CLKDIV2_USBFRAC_MASK | SIM_CLKDIV2_USBDIV_MASK))) | (ulSIM_CLKDIV2 & (SIM_CLKDIV2_USBFRAC_MASK | SIM_CLKDIV2_USBDIV_MASK));
0x1FE2	0x4816    LDR	R0, [PC, #88]
0x1FE4	0x6801    LDR	R1, [R0, #0]
0x1FE6	0xF06F000F  MVN	R0, #15
0x1FEA	0x4001    ANDS	R1, R0
0x1FEC	0x980B    LDR	R0, [SP, #44]
0x1FEE	0xF000000F  AND	R0, R0, #15
0x1FF2	0x4301    ORRS	R1, R0
0x1FF4	0x4811    LDR	R0, [PC, #68]
0x1FF6	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 1207 :: 		}
L_end_InitialSetUpRCCRCC2:
0x1FF8	0xB00F    ADD	SP, SP, #60
0x1FFA	0x4770    BX	LR
0x1FFC	0x90484004  	PORTA_PCR18+0
0x2000	0x904C4004  	PORTA_PCR19+0
0x2004	0xF8FFFEFF  	#-16779009
0x2008	0x40084006  	MCG_SC+0
0x200C	0x40014006  	MCG_C2+0
0x2010	0x50004006  	OSC_CR+0
0x2014	0x400C4006  	MCG_C7+0
0x2018	0x40004006  	MCG_C1+0
0x201C	0x40064006  	MCG_S+0
0x2020	0x40034006  	MCG_C4+0
0x2024	0x40044006  	MCG_C5+0
0x2028	0x40054006  	MCG_C6+0
0x202C	0x80384004  	SIM_SCGC5+0
0x2030	0x00084004  	LPTMR0_CMR+0
0x2034	0x00004004  	LPTMR0_CSR+0
0x2038	0x00044004  	LPTMR0_PSR+0
0x203C	0x80484004  	SIM_CLKDIV2+0
; end of __Lib_System_InitialSetUpRCCRCC2
__Lib_System_InitialSetUpFosc:
;__Lib_System.c, 954 :: 		static void InitialSetUpFosc(){
;__Lib_System.c, 955 :: 		__System_CLOCK_IN_KHZ = 12345677;
0x1A90	0x4901    LDR	R1, [PC, #4]
0x1A92	0x4802    LDR	R0, [PC, #8]
0x1A94	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 956 :: 		}
L_end_InitialSetUpFosc:
0x1A96	0x4770    BX	LR
0x1A98	0xD4C00001  	#120000
0x1A9C	0x484C1FFF  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_InitialSetUpFosc
___GenExcept:
;__Lib_System.c, 545 :: 		void __GenExcept() {
;__Lib_System.c, 546 :: 		while(1) ;
L___GenExcept27:
0x03FC	0xE7FE    B	L___GenExcept27
;__Lib_System.c, 547 :: 		}
L_end___GenExcept:
0x03FE	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System.c, 578 :: 		void __EnableFPU(){
;__Lib_System.c, 579 :: 		asm CPSID I;
0x1A7C	0xB672    CPSID	i
;__Lib_System.c, 580 :: 		SCB->CPACR |= ((3UL << 10*2) | (3UL << 11*2));    // set CP10, CP11 Full Access //
0x1A7E	0x4903    LDR	R1, [PC, #12]
0x1A80	0x6808    LDR	R0, [R1, #0]
0x1A82	0xF4400070  ORR	R0, R0, #15728640
0x1A86	0x6008    STR	R0, [R1, #0]
;__Lib_System.c, 581 :: 		}
L_end___EnableFPU:
0x1A88	0x4770    BX	LR
0x1A8A	0xBF00    NOP
0x1A8C	0xED88E000  	#3758157192
; end of ___EnableFPU
0x6FF4	0xB500    PUSH	(R14)
0x6FF6	0xF8DFB014  LDR	R11, [PC, #20]
0x6FFA	0xF8DFA014  LDR	R10, [PC, #20]
0x6FFE	0xF8DFC014  LDR	R12, [PC, #20]
0x7002	0xF7FAFC3B  BL	6268
0x7006	0xBD00    POP	(R15)
0x7008	0x4770    BX	LR
0x700A	0xBF00    NOP
0x700C	0x00001FFF  	#536805376
0x7010	0x000C1FFF  	#536805388
0x7014	0x6FE00000  	#28640
0x7074	0xB500    PUSH	(R14)
0x7076	0xF8DFB010  LDR	R11, [PC, #16]
0x707A	0xF8DFA010  LDR	R10, [PC, #16]
0x707E	0xF7FAFC49  BL	6420
0x7082	0xBD00    POP	(R15)
0x7084	0x4770    BX	LR
0x7086	0xBF00    NOP
0x7088	0x00001FFF  	#536805376
0x708C	0x48581FFF  	#536823896
;__Lib_ADC_01.c,434 :: __Lib_ADC_01_adcGateTable [2]
0x0346	0x5BBB ;__Lib_ADC_01_adcGateTable+0
; end of __Lib_ADC_01_adcGateTable
;,0 :: ?Const_Config_Array [16]
0x0400	0x00000000 ;?Const_Config_Array+0
0x0404	0x00000000 ;?Const_Config_Array+4
0x0408	0xFFFFFFFF ;?Const_Config_Array+8
0x040C	0xFFFFFD02 ;?Const_Config_Array+12
; end of ?Const_Config_Array
;OLED_resources.c,4 :: _alcohol_bmp [18438]
0x2040	0x00601000 ;_alcohol_bmp+0
0x2044	0x00000060 ;_alcohol_bmp+4
0x2048	0x00000000 ;_alcohol_bmp+8
0x204C	0x00000000 ;_alcohol_bmp+12
0x2050	0x00000000 ;_alcohol_bmp+16
0x2054	0x00000000 ;_alcohol_bmp+20
0x2058	0x00000000 ;_alcohol_bmp+24
0x205C	0x00000000 ;_alcohol_bmp+28
0x2060	0x00000000 ;_alcohol_bmp+32
0x2064	0x00000000 ;_alcohol_bmp+36
0x2068	0x00000000 ;_alcohol_bmp+40
0x206C	0x00000000 ;_alcohol_bmp+44
0x2070	0x00000000 ;_alcohol_bmp+48
0x2074	0x00000000 ;_alcohol_bmp+52
0x2078	0x00000000 ;_alcohol_bmp+56
0x207C	0x00000000 ;_alcohol_bmp+60
0x2080	0x00000000 ;_alcohol_bmp+64
0x2084	0x00000000 ;_alcohol_bmp+68
0x2088	0x00000000 ;_alcohol_bmp+72
0x208C	0x00000000 ;_alcohol_bmp+76
0x2090	0x00000000 ;_alcohol_bmp+80
0x2094	0x00000000 ;_alcohol_bmp+84
0x2098	0x00000000 ;_alcohol_bmp+88
0x209C	0x00000000 ;_alcohol_bmp+92
0x20A0	0x00000000 ;_alcohol_bmp+96
0x20A4	0x00000000 ;_alcohol_bmp+100
0x20A8	0x00000000 ;_alcohol_bmp+104
0x20AC	0x00000000 ;_alcohol_bmp+108
0x20B0	0x00000000 ;_alcohol_bmp+112
0x20B4	0x00000000 ;_alcohol_bmp+116
0x20B8	0x00000000 ;_alcohol_bmp+120
0x20BC	0x00000000 ;_alcohol_bmp+124
0x20C0	0x00000000 ;_alcohol_bmp+128
0x20C4	0x00000000 ;_alcohol_bmp+132
0x20C8	0x00000000 ;_alcohol_bmp+136
0x20CC	0x00000000 ;_alcohol_bmp+140
0x20D0	0x00000000 ;_alcohol_bmp+144
0x20D4	0x00000000 ;_alcohol_bmp+148
0x20D8	0x00000000 ;_alcohol_bmp+152
0x20DC	0x00000000 ;_alcohol_bmp+156
0x20E0	0x00000000 ;_alcohol_bmp+160
0x20E4	0x00000000 ;_alcohol_bmp+164
0x20E8	0x00000000 ;_alcohol_bmp+168
0x20EC	0x00000000 ;_alcohol_bmp+172
0x20F0	0x00000000 ;_alcohol_bmp+176
0x20F4	0x00000000 ;_alcohol_bmp+180
0x20F8	0x00000000 ;_alcohol_bmp+184
0x20FC	0x00000000 ;_alcohol_bmp+188
0x2100	0x00000000 ;_alcohol_bmp+192
0x2104	0x00000000 ;_alcohol_bmp+196
0x2108	0x00000000 ;_alcohol_bmp+200
0x210C	0x00000000 ;_alcohol_bmp+204
0x2110	0x00000000 ;_alcohol_bmp+208
0x2114	0x00000000 ;_alcohol_bmp+212
0x2118	0x00000000 ;_alcohol_bmp+216
0x211C	0x00000000 ;_alcohol_bmp+220
0x2120	0x00000000 ;_alcohol_bmp+224
0x2124	0x00000000 ;_alcohol_bmp+228
0x2128	0x00000000 ;_alcohol_bmp+232
0x212C	0x00000000 ;_alcohol_bmp+236
0x2130	0x00000000 ;_alcohol_bmp+240
0x2134	0x00000000 ;_alcohol_bmp+244
0x2138	0x00000000 ;_alcohol_bmp+248
0x213C	0x00000000 ;_alcohol_bmp+252
0x2140	0x00000000 ;_alcohol_bmp+256
0x2144	0x00000000 ;_alcohol_bmp+260
0x2148	0x00000000 ;_alcohol_bmp+264
0x214C	0x00000000 ;_alcohol_bmp+268
0x2150	0x00000000 ;_alcohol_bmp+272
0x2154	0x00000000 ;_alcohol_bmp+276
0x2158	0x00000000 ;_alcohol_bmp+280
0x215C	0x00000000 ;_alcohol_bmp+284
0x2160	0x00000000 ;_alcohol_bmp+288
0x2164	0x00000000 ;_alcohol_bmp+292
0x2168	0x00000000 ;_alcohol_bmp+296
0x216C	0x00000000 ;_alcohol_bmp+300
0x2170	0x00000000 ;_alcohol_bmp+304
0x2174	0x00000000 ;_alcohol_bmp+308
0x2178	0x00000000 ;_alcohol_bmp+312
0x217C	0x00000000 ;_alcohol_bmp+316
0x2180	0x00000000 ;_alcohol_bmp+320
0x2184	0x00000000 ;_alcohol_bmp+324
0x2188	0x00000000 ;_alcohol_bmp+328
0x218C	0x00000000 ;_alcohol_bmp+332
0x2190	0x00000000 ;_alcohol_bmp+336
0x2194	0x00000000 ;_alcohol_bmp+340
0x2198	0x00000000 ;_alcohol_bmp+344
0x219C	0x00000000 ;_alcohol_bmp+348
0x21A0	0x00000000 ;_alcohol_bmp+352
0x21A4	0x00000000 ;_alcohol_bmp+356
0x21A8	0x00000000 ;_alcohol_bmp+360
0x21AC	0x00000000 ;_alcohol_bmp+364
0x21B0	0x00000000 ;_alcohol_bmp+368
0x21B4	0x00000000 ;_alcohol_bmp+372
0x21B8	0x00000000 ;_alcohol_bmp+376
0x21BC	0x00000000 ;_alcohol_bmp+380
0x21C0	0x00000000 ;_alcohol_bmp+384
0x21C4	0x00000000 ;_alcohol_bmp+388
0x21C8	0x00000000 ;_alcohol_bmp+392
0x21CC	0x00000000 ;_alcohol_bmp+396
0x21D0	0x00000000 ;_alcohol_bmp+400
0x21D4	0x00000000 ;_alcohol_bmp+404
0x21D8	0x00000000 ;_alcohol_bmp+408
0x21DC	0x00000000 ;_alcohol_bmp+412
0x21E0	0x00000000 ;_alcohol_bmp+416
0x21E4	0x00000000 ;_alcohol_bmp+420
0x21E8	0x00000000 ;_alcohol_bmp+424
0x21EC	0x00000000 ;_alcohol_bmp+428
0x21F0	0x00000000 ;_alcohol_bmp+432
0x21F4	0x00000000 ;_alcohol_bmp+436
0x21F8	0x00000000 ;_alcohol_bmp+440
0x21FC	0x00000000 ;_alcohol_bmp+444
0x2200	0x00000000 ;_alcohol_bmp+448
0x2204	0x00000000 ;_alcohol_bmp+452
0x2208	0x00000000 ;_alcohol_bmp+456
0x220C	0x00000000 ;_alcohol_bmp+460
0x2210	0x00000000 ;_alcohol_bmp+464
0x2214	0x00000000 ;_alcohol_bmp+468
0x2218	0x00000000 ;_alcohol_bmp+472
0x221C	0x00000000 ;_alcohol_bmp+476
0x2220	0x00000000 ;_alcohol_bmp+480
0x2224	0x00000000 ;_alcohol_bmp+484
0x2228	0x00000000 ;_alcohol_bmp+488
0x222C	0x00000000 ;_alcohol_bmp+492
0x2230	0x00000000 ;_alcohol_bmp+496
0x2234	0x00000000 ;_alcohol_bmp+500
0x2238	0x00000000 ;_alcohol_bmp+504
0x223C	0x00000000 ;_alcohol_bmp+508
0x2240	0x00000000 ;_alcohol_bmp+512
0x2244	0x00000000 ;_alcohol_bmp+516
0x2248	0x00000000 ;_alcohol_bmp+520
0x224C	0x00000000 ;_alcohol_bmp+524
0x2250	0x00000000 ;_alcohol_bmp+528
0x2254	0x00000000 ;_alcohol_bmp+532
0x2258	0x00000000 ;_alcohol_bmp+536
0x225C	0x00000000 ;_alcohol_bmp+540
0x2260	0x00000000 ;_alcohol_bmp+544
0x2264	0x00000000 ;_alcohol_bmp+548
0x2268	0x00000000 ;_alcohol_bmp+552
0x226C	0x00000000 ;_alcohol_bmp+556
0x2270	0x00000000 ;_alcohol_bmp+560
0x2274	0x00000000 ;_alcohol_bmp+564
0x2278	0x00000000 ;_alcohol_bmp+568
0x227C	0x00000000 ;_alcohol_bmp+572
0x2280	0x00000000 ;_alcohol_bmp+576
0x2284	0x00000000 ;_alcohol_bmp+580
0x2288	0x00000000 ;_alcohol_bmp+584
0x228C	0x00000000 ;_alcohol_bmp+588
0x2290	0x00000000 ;_alcohol_bmp+592
0x2294	0x00000000 ;_alcohol_bmp+596
0x2298	0x00000000 ;_alcohol_bmp+600
0x229C	0x00000000 ;_alcohol_bmp+604
0x22A0	0x00000000 ;_alcohol_bmp+608
0x22A4	0x00000000 ;_alcohol_bmp+612
0x22A8	0x00000000 ;_alcohol_bmp+616
0x22AC	0x00000000 ;_alcohol_bmp+620
0x22B0	0x00000000 ;_alcohol_bmp+624
0x22B4	0x00000000 ;_alcohol_bmp+628
0x22B8	0x00000000 ;_alcohol_bmp+632
0x22BC	0x00000000 ;_alcohol_bmp+636
0x22C0	0x00000000 ;_alcohol_bmp+640
0x22C4	0x00000000 ;_alcohol_bmp+644
0x22C8	0x00000000 ;_alcohol_bmp+648
0x22CC	0x00000000 ;_alcohol_bmp+652
0x22D0	0x00000000 ;_alcohol_bmp+656
0x22D4	0x00000000 ;_alcohol_bmp+660
0x22D8	0x00000000 ;_alcohol_bmp+664
0x22DC	0x00000000 ;_alcohol_bmp+668
0x22E0	0x00000000 ;_alcohol_bmp+672
0x22E4	0x00000000 ;_alcohol_bmp+676
0x22E8	0x00000000 ;_alcohol_bmp+680
0x22EC	0x00000000 ;_alcohol_bmp+684
0x22F0	0x00000000 ;_alcohol_bmp+688
0x22F4	0x00000000 ;_alcohol_bmp+692
0x22F8	0x00000000 ;_alcohol_bmp+696
0x22FC	0x00000000 ;_alcohol_bmp+700
0x2300	0x00000000 ;_alcohol_bmp+704
0x2304	0x00000000 ;_alcohol_bmp+708
0x2308	0x00000000 ;_alcohol_bmp+712
0x230C	0x00000000 ;_alcohol_bmp+716
0x2310	0x00000000 ;_alcohol_bmp+720
0x2314	0x00000000 ;_alcohol_bmp+724
0x2318	0x00000000 ;_alcohol_bmp+728
0x231C	0x00000000 ;_alcohol_bmp+732
0x2320	0x00000000 ;_alcohol_bmp+736
0x2324	0x00000000 ;_alcohol_bmp+740
0x2328	0x00000000 ;_alcohol_bmp+744
0x232C	0x00000000 ;_alcohol_bmp+748
0x2330	0x00000000 ;_alcohol_bmp+752
0x2334	0x00000000 ;_alcohol_bmp+756
0x2338	0x00000000 ;_alcohol_bmp+760
0x233C	0x00000000 ;_alcohol_bmp+764
0x2340	0x00000000 ;_alcohol_bmp+768
0x2344	0x00000000 ;_alcohol_bmp+772
0x2348	0x00000000 ;_alcohol_bmp+776
0x234C	0x00000000 ;_alcohol_bmp+780
0x2350	0x00000000 ;_alcohol_bmp+784
0x2354	0x00000000 ;_alcohol_bmp+788
0x2358	0x00000000 ;_alcohol_bmp+792
0x235C	0x00000000 ;_alcohol_bmp+796
0x2360	0x00000000 ;_alcohol_bmp+800
0x2364	0x00000000 ;_alcohol_bmp+804
0x2368	0x00000000 ;_alcohol_bmp+808
0x236C	0x00000000 ;_alcohol_bmp+812
0x2370	0x00000000 ;_alcohol_bmp+816
0x2374	0x00000000 ;_alcohol_bmp+820
0x2378	0x00000000 ;_alcohol_bmp+824
0x237C	0x00000000 ;_alcohol_bmp+828
0x2380	0x00000000 ;_alcohol_bmp+832
0x2384	0x00000000 ;_alcohol_bmp+836
0x2388	0x00000000 ;_alcohol_bmp+840
0x238C	0x00000000 ;_alcohol_bmp+844
0x2390	0x00000000 ;_alcohol_bmp+848
0x2394	0x00000000 ;_alcohol_bmp+852
0x2398	0x00000000 ;_alcohol_bmp+856
0x239C	0x00000000 ;_alcohol_bmp+860
0x23A0	0x00000000 ;_alcohol_bmp+864
0x23A4	0x00000000 ;_alcohol_bmp+868
0x23A8	0x00000000 ;_alcohol_bmp+872
0x23AC	0x00000000 ;_alcohol_bmp+876
0x23B0	0x00000000 ;_alcohol_bmp+880
0x23B4	0x00000000 ;_alcohol_bmp+884
0x23B8	0x00000000 ;_alcohol_bmp+888
0x23BC	0x00000000 ;_alcohol_bmp+892
0x23C0	0x00000000 ;_alcohol_bmp+896
0x23C4	0x00000000 ;_alcohol_bmp+900
0x23C8	0x00000000 ;_alcohol_bmp+904
0x23CC	0x00000000 ;_alcohol_bmp+908
0x23D0	0x00000000 ;_alcohol_bmp+912
0x23D4	0x00000000 ;_alcohol_bmp+916
0x23D8	0x00000000 ;_alcohol_bmp+920
0x23DC	0x00000000 ;_alcohol_bmp+924
0x23E0	0x00000000 ;_alcohol_bmp+928
0x23E4	0x00000000 ;_alcohol_bmp+932
0x23E8	0x00000000 ;_alcohol_bmp+936
0x23EC	0x00000000 ;_alcohol_bmp+940
0x23F0	0x00000000 ;_alcohol_bmp+944
0x23F4	0x00000000 ;_alcohol_bmp+948
0x23F8	0x00000000 ;_alcohol_bmp+952
0x23FC	0x00000000 ;_alcohol_bmp+956
0x2400	0x00000000 ;_alcohol_bmp+960
0x2404	0x00000000 ;_alcohol_bmp+964
0x2408	0x00000000 ;_alcohol_bmp+968
0x240C	0x00000000 ;_alcohol_bmp+972
0x2410	0x00000000 ;_alcohol_bmp+976
0x2414	0x00000000 ;_alcohol_bmp+980
0x2418	0x00000000 ;_alcohol_bmp+984
0x241C	0x00000000 ;_alcohol_bmp+988
0x2420	0x00000000 ;_alcohol_bmp+992
0x2424	0x00000000 ;_alcohol_bmp+996
0x2428	0x00000000 ;_alcohol_bmp+1000
0x242C	0x00000000 ;_alcohol_bmp+1004
0x2430	0x00000000 ;_alcohol_bmp+1008
0x2434	0x00000000 ;_alcohol_bmp+1012
0x2438	0x00000000 ;_alcohol_bmp+1016
0x243C	0x00000000 ;_alcohol_bmp+1020
0x2440	0x00000000 ;_alcohol_bmp+1024
0x2444	0x00000000 ;_alcohol_bmp+1028
0x2448	0x00000000 ;_alcohol_bmp+1032
0x244C	0x00000000 ;_alcohol_bmp+1036
0x2450	0x00000000 ;_alcohol_bmp+1040
0x2454	0x00000000 ;_alcohol_bmp+1044
0x2458	0x00000000 ;_alcohol_bmp+1048
0x245C	0x00000000 ;_alcohol_bmp+1052
0x2460	0x00000000 ;_alcohol_bmp+1056
0x2464	0x00000000 ;_alcohol_bmp+1060
0x2468	0x00000000 ;_alcohol_bmp+1064
0x246C	0x00000000 ;_alcohol_bmp+1068
0x2470	0x00000000 ;_alcohol_bmp+1072
0x2474	0x00000000 ;_alcohol_bmp+1076
0x2478	0x00000000 ;_alcohol_bmp+1080
0x247C	0x00000000 ;_alcohol_bmp+1084
0x2480	0x00000000 ;_alcohol_bmp+1088
0x2484	0x00000000 ;_alcohol_bmp+1092
0x2488	0x00000000 ;_alcohol_bmp+1096
0x248C	0x00000000 ;_alcohol_bmp+1100
0x2490	0x00000000 ;_alcohol_bmp+1104
0x2494	0x00000000 ;_alcohol_bmp+1108
0x2498	0x00000000 ;_alcohol_bmp+1112
0x249C	0x00000000 ;_alcohol_bmp+1116
0x24A0	0x00000000 ;_alcohol_bmp+1120
0x24A4	0x00000000 ;_alcohol_bmp+1124
0x24A8	0x00000000 ;_alcohol_bmp+1128
0x24AC	0x00000000 ;_alcohol_bmp+1132
0x24B0	0x00000000 ;_alcohol_bmp+1136
0x24B4	0x00000000 ;_alcohol_bmp+1140
0x24B8	0x00000000 ;_alcohol_bmp+1144
0x24BC	0x00000000 ;_alcohol_bmp+1148
0x24C0	0x00000000 ;_alcohol_bmp+1152
0x24C4	0x00000000 ;_alcohol_bmp+1156
0x24C8	0x00000000 ;_alcohol_bmp+1160
0x24CC	0x00000000 ;_alcohol_bmp+1164
0x24D0	0x00000000 ;_alcohol_bmp+1168
0x24D4	0x00000000 ;_alcohol_bmp+1172
0x24D8	0x00000000 ;_alcohol_bmp+1176
0x24DC	0x00000000 ;_alcohol_bmp+1180
0x24E0	0x00000000 ;_alcohol_bmp+1184
0x24E4	0x00000000 ;_alcohol_bmp+1188
0x24E8	0x00000000 ;_alcohol_bmp+1192
0x24EC	0x00000000 ;_alcohol_bmp+1196
0x24F0	0x00000000 ;_alcohol_bmp+1200
0x24F4	0x00000000 ;_alcohol_bmp+1204
0x24F8	0x00000000 ;_alcohol_bmp+1208
0x24FC	0x00000000 ;_alcohol_bmp+1212
0x2500	0x00000000 ;_alcohol_bmp+1216
0x2504	0x00000000 ;_alcohol_bmp+1220
0x2508	0x00000000 ;_alcohol_bmp+1224
0x250C	0x00000000 ;_alcohol_bmp+1228
0x2510	0x00000000 ;_alcohol_bmp+1232
0x2514	0x00000000 ;_alcohol_bmp+1236
0x2518	0x00000000 ;_alcohol_bmp+1240
0x251C	0x00000000 ;_alcohol_bmp+1244
0x2520	0x00000000 ;_alcohol_bmp+1248
0x2524	0x00000000 ;_alcohol_bmp+1252
0x2528	0x00000000 ;_alcohol_bmp+1256
0x252C	0x00000000 ;_alcohol_bmp+1260
0x2530	0x00000000 ;_alcohol_bmp+1264
0x2534	0x00000000 ;_alcohol_bmp+1268
0x2538	0x00000000 ;_alcohol_bmp+1272
0x253C	0x00000000 ;_alcohol_bmp+1276
0x2540	0x00000000 ;_alcohol_bmp+1280
0x2544	0x00000000 ;_alcohol_bmp+1284
0x2548	0x00000000 ;_alcohol_bmp+1288
0x254C	0x00000000 ;_alcohol_bmp+1292
0x2550	0x00000000 ;_alcohol_bmp+1296
0x2554	0x00000000 ;_alcohol_bmp+1300
0x2558	0x00000000 ;_alcohol_bmp+1304
0x255C	0x00000000 ;_alcohol_bmp+1308
0x2560	0x00000000 ;_alcohol_bmp+1312
0x2564	0x00000000 ;_alcohol_bmp+1316
0x2568	0x00000000 ;_alcohol_bmp+1320
0x256C	0x00000000 ;_alcohol_bmp+1324
0x2570	0x00000000 ;_alcohol_bmp+1328
0x2574	0x00000000 ;_alcohol_bmp+1332
0x2578	0x00000000 ;_alcohol_bmp+1336
0x257C	0x00000000 ;_alcohol_bmp+1340
0x2580	0x00000000 ;_alcohol_bmp+1344
0x2584	0x00000000 ;_alcohol_bmp+1348
0x2588	0x00000000 ;_alcohol_bmp+1352
0x258C	0x00000000 ;_alcohol_bmp+1356
0x2590	0x00000000 ;_alcohol_bmp+1360
0x2594	0x00000000 ;_alcohol_bmp+1364
0x2598	0x00000000 ;_alcohol_bmp+1368
0x259C	0x00000000 ;_alcohol_bmp+1372
0x25A0	0x00000000 ;_alcohol_bmp+1376
0x25A4	0x00000000 ;_alcohol_bmp+1380
0x25A8	0x00000000 ;_alcohol_bmp+1384
0x25AC	0x00000000 ;_alcohol_bmp+1388
0x25B0	0x00000000 ;_alcohol_bmp+1392
0x25B4	0x00000000 ;_alcohol_bmp+1396
0x25B8	0x00000000 ;_alcohol_bmp+1400
0x25BC	0x00000000 ;_alcohol_bmp+1404
0x25C0	0x00000000 ;_alcohol_bmp+1408
0x25C4	0x00000000 ;_alcohol_bmp+1412
0x25C8	0x00000000 ;_alcohol_bmp+1416
0x25CC	0x00000000 ;_alcohol_bmp+1420
0x25D0	0x00000000 ;_alcohol_bmp+1424
0x25D4	0x00000000 ;_alcohol_bmp+1428
0x25D8	0x00000000 ;_alcohol_bmp+1432
0x25DC	0x00000000 ;_alcohol_bmp+1436
0x25E0	0x00000000 ;_alcohol_bmp+1440
0x25E4	0x00000000 ;_alcohol_bmp+1444
0x25E8	0x00000000 ;_alcohol_bmp+1448
0x25EC	0x00000000 ;_alcohol_bmp+1452
0x25F0	0x00000000 ;_alcohol_bmp+1456
0x25F4	0x00000000 ;_alcohol_bmp+1460
0x25F8	0x00000000 ;_alcohol_bmp+1464
0x25FC	0x00000000 ;_alcohol_bmp+1468
0x2600	0x00000000 ;_alcohol_bmp+1472
0x2604	0x00000000 ;_alcohol_bmp+1476
0x2608	0x00000000 ;_alcohol_bmp+1480
0x260C	0x00000000 ;_alcohol_bmp+1484
0x2610	0x00000000 ;_alcohol_bmp+1488
0x2614	0x00000000 ;_alcohol_bmp+1492
0x2618	0x00000000 ;_alcohol_bmp+1496
0x261C	0x00000000 ;_alcohol_bmp+1500
0x2620	0x00000000 ;_alcohol_bmp+1504
0x2624	0x00000000 ;_alcohol_bmp+1508
0x2628	0x00000000 ;_alcohol_bmp+1512
0x262C	0x00000000 ;_alcohol_bmp+1516
0x2630	0x00000000 ;_alcohol_bmp+1520
0x2634	0x00000000 ;_alcohol_bmp+1524
0x2638	0x00000000 ;_alcohol_bmp+1528
0x263C	0x00000000 ;_alcohol_bmp+1532
0x2640	0x00000000 ;_alcohol_bmp+1536
0x2644	0x00000000 ;_alcohol_bmp+1540
0x2648	0x00000000 ;_alcohol_bmp+1544
0x264C	0x00000000 ;_alcohol_bmp+1548
0x2650	0x00000000 ;_alcohol_bmp+1552
0x2654	0x00000000 ;_alcohol_bmp+1556
0x2658	0x00000000 ;_alcohol_bmp+1560
0x265C	0x00000000 ;_alcohol_bmp+1564
0x2660	0x00000000 ;_alcohol_bmp+1568
0x2664	0x00000000 ;_alcohol_bmp+1572
0x2668	0x00000000 ;_alcohol_bmp+1576
0x266C	0x00000000 ;_alcohol_bmp+1580
0x2670	0x00000000 ;_alcohol_bmp+1584
0x2674	0x00000000 ;_alcohol_bmp+1588
0x2678	0x00000000 ;_alcohol_bmp+1592
0x267C	0x00000000 ;_alcohol_bmp+1596
0x2680	0x00000000 ;_alcohol_bmp+1600
0x2684	0x00000000 ;_alcohol_bmp+1604
0x2688	0x00000000 ;_alcohol_bmp+1608
0x268C	0xFFFFFFFF ;_alcohol_bmp+1612
0x2690	0x00000000 ;_alcohol_bmp+1616
0x2694	0x00000000 ;_alcohol_bmp+1620
0x2698	0x00000000 ;_alcohol_bmp+1624
0x269C	0x00000000 ;_alcohol_bmp+1628
0x26A0	0x00000000 ;_alcohol_bmp+1632
0x26A4	0x00000000 ;_alcohol_bmp+1636
0x26A8	0x00000000 ;_alcohol_bmp+1640
0x26AC	0xFFFF0000 ;_alcohol_bmp+1644
0x26B0	0x0000FFFF ;_alcohol_bmp+1648
0x26B4	0x00000000 ;_alcohol_bmp+1652
0x26B8	0x00000000 ;_alcohol_bmp+1656
0x26BC	0x00000000 ;_alcohol_bmp+1660
0x26C0	0x00000000 ;_alcohol_bmp+1664
0x26C4	0x00000000 ;_alcohol_bmp+1668
0x26C8	0x00000000 ;_alcohol_bmp+1672
0x26CC	0xFFFF0000 ;_alcohol_bmp+1676
0x26D0	0x0000FFFF ;_alcohol_bmp+1680
0x26D4	0x00000000 ;_alcohol_bmp+1684
0x26D8	0x00000000 ;_alcohol_bmp+1688
0x26DC	0x00000000 ;_alcohol_bmp+1692
0x26E0	0x00000000 ;_alcohol_bmp+1696
0x26E4	0x00000000 ;_alcohol_bmp+1700
0x26E8	0x00000000 ;_alcohol_bmp+1704
0x26EC	0x00000000 ;_alcohol_bmp+1708
0x26F0	0x00000000 ;_alcohol_bmp+1712
0x26F4	0x00000000 ;_alcohol_bmp+1716
0x26F8	0x00000000 ;_alcohol_bmp+1720
0x26FC	0x00000000 ;_alcohol_bmp+1724
0x2700	0x00000000 ;_alcohol_bmp+1728
0x2704	0x00000000 ;_alcohol_bmp+1732
0x2708	0x00000000 ;_alcohol_bmp+1736
0x270C	0x00000000 ;_alcohol_bmp+1740
0x2710	0x00000000 ;_alcohol_bmp+1744
0x2714	0x00000000 ;_alcohol_bmp+1748
0x2718	0x00000000 ;_alcohol_bmp+1752
0x271C	0x00000000 ;_alcohol_bmp+1756
0x2720	0x00000000 ;_alcohol_bmp+1760
0x2724	0x00000000 ;_alcohol_bmp+1764
0x2728	0x00000000 ;_alcohol_bmp+1768
0x272C	0x00000000 ;_alcohol_bmp+1772
0x2730	0x00000000 ;_alcohol_bmp+1776
0x2734	0x00000000 ;_alcohol_bmp+1780
0x2738	0x00000000 ;_alcohol_bmp+1784
0x273C	0x00000000 ;_alcohol_bmp+1788
0x2740	0xFFFFFFFF ;_alcohol_bmp+1792
0x2744	0x00000000 ;_alcohol_bmp+1796
0x2748	0x00000000 ;_alcohol_bmp+1800
0x274C	0xFFFFFFFF ;_alcohol_bmp+1804
0x2750	0x00000000 ;_alcohol_bmp+1808
0x2754	0x00000000 ;_alcohol_bmp+1812
0x2758	0x00000000 ;_alcohol_bmp+1816
0x275C	0x00000000 ;_alcohol_bmp+1820
0x2760	0x00000000 ;_alcohol_bmp+1824
0x2764	0x00000000 ;_alcohol_bmp+1828
0x2768	0x00000000 ;_alcohol_bmp+1832
0x276C	0xFFFF0000 ;_alcohol_bmp+1836
0x2770	0x0000FFFF ;_alcohol_bmp+1840
0x2774	0x00000000 ;_alcohol_bmp+1844
0x2778	0x00000000 ;_alcohol_bmp+1848
0x277C	0x00000000 ;_alcohol_bmp+1852
0x2780	0x00000000 ;_alcohol_bmp+1856
0x2784	0x00000000 ;_alcohol_bmp+1860
0x2788	0x00000000 ;_alcohol_bmp+1864
0x278C	0xFFFF0000 ;_alcohol_bmp+1868
0x2790	0x0000FFFF ;_alcohol_bmp+1872
0x2794	0x00000000 ;_alcohol_bmp+1876
0x2798	0x00000000 ;_alcohol_bmp+1880
0x279C	0x00000000 ;_alcohol_bmp+1884
0x27A0	0x00000000 ;_alcohol_bmp+1888
0x27A4	0x00000000 ;_alcohol_bmp+1892
0x27A8	0x00000000 ;_alcohol_bmp+1896
0x27AC	0x00000000 ;_alcohol_bmp+1900
0x27B0	0x00000000 ;_alcohol_bmp+1904
0x27B4	0x00000000 ;_alcohol_bmp+1908
0x27B8	0x00000000 ;_alcohol_bmp+1912
0x27BC	0x00000000 ;_alcohol_bmp+1916
0x27C0	0x00000000 ;_alcohol_bmp+1920
0x27C4	0x00000000 ;_alcohol_bmp+1924
0x27C8	0x00000000 ;_alcohol_bmp+1928
0x27CC	0x00000000 ;_alcohol_bmp+1932
0x27D0	0x00000000 ;_alcohol_bmp+1936
0x27D4	0x00000000 ;_alcohol_bmp+1940
0x27D8	0x00000000 ;_alcohol_bmp+1944
0x27DC	0x00000000 ;_alcohol_bmp+1948
0x27E0	0x00000000 ;_alcohol_bmp+1952
0x27E4	0x00000000 ;_alcohol_bmp+1956
0x27E8	0x00000000 ;_alcohol_bmp+1960
0x27EC	0x00000000 ;_alcohol_bmp+1964
0x27F0	0x00000000 ;_alcohol_bmp+1968
0x27F4	0x00000000 ;_alcohol_bmp+1972
0x27F8	0x00000000 ;_alcohol_bmp+1976
0x27FC	0xFFFF0000 ;_alcohol_bmp+1980
0x2800	0xFFFFFFFF ;_alcohol_bmp+1984
0x2804	0x0000FFFF ;_alcohol_bmp+1988
0x2808	0x00000000 ;_alcohol_bmp+1992
0x280C	0xFFFFFFFF ;_alcohol_bmp+1996
0x2810	0x00000000 ;_alcohol_bmp+2000
0x2814	0x00000000 ;_alcohol_bmp+2004
0x2818	0x00000000 ;_alcohol_bmp+2008
0x281C	0x00000000 ;_alcohol_bmp+2012
0x2820	0x00000000 ;_alcohol_bmp+2016
0x2824	0x00000000 ;_alcohol_bmp+2020
0x2828	0x00000000 ;_alcohol_bmp+2024
0x282C	0xFFFF0000 ;_alcohol_bmp+2028
0x2830	0x0000FFFF ;_alcohol_bmp+2032
0x2834	0x00000000 ;_alcohol_bmp+2036
0x2838	0x00000000 ;_alcohol_bmp+2040
0x283C	0x00000000 ;_alcohol_bmp+2044
0x2840	0x00000000 ;_alcohol_bmp+2048
0x2844	0x00000000 ;_alcohol_bmp+2052
0x2848	0x00000000 ;_alcohol_bmp+2056
0x284C	0xFFFF0000 ;_alcohol_bmp+2060
0x2850	0x0000FFFF ;_alcohol_bmp+2064
0x2854	0x00000000 ;_alcohol_bmp+2068
0x2858	0x00000000 ;_alcohol_bmp+2072
0x285C	0x00000000 ;_alcohol_bmp+2076
0x2860	0x00000000 ;_alcohol_bmp+2080
0x2864	0x00000000 ;_alcohol_bmp+2084
0x2868	0x00000000 ;_alcohol_bmp+2088
0x286C	0x00000000 ;_alcohol_bmp+2092
0x2870	0x00000000 ;_alcohol_bmp+2096
0x2874	0x00000000 ;_alcohol_bmp+2100
0x2878	0x00000000 ;_alcohol_bmp+2104
0x287C	0x00000000 ;_alcohol_bmp+2108
0x2880	0x00000000 ;_alcohol_bmp+2112
0x2884	0x00000000 ;_alcohol_bmp+2116
0x2888	0x00000000 ;_alcohol_bmp+2120
0x288C	0x00000000 ;_alcohol_bmp+2124
0x2890	0x00000000 ;_alcohol_bmp+2128
0x2894	0x00000000 ;_alcohol_bmp+2132
0x2898	0x00000000 ;_alcohol_bmp+2136
0x289C	0x00000000 ;_alcohol_bmp+2140
0x28A0	0x00000000 ;_alcohol_bmp+2144
0x28A4	0x00000000 ;_alcohol_bmp+2148
0x28A8	0x00000000 ;_alcohol_bmp+2152
0x28AC	0x00000000 ;_alcohol_bmp+2156
0x28B0	0x00000000 ;_alcohol_bmp+2160
0x28B4	0x00000000 ;_alcohol_bmp+2164
0x28B8	0x00000000 ;_alcohol_bmp+2168
0x28BC	0xFFFF0000 ;_alcohol_bmp+2172
0x28C0	0xFFFFFFFF ;_alcohol_bmp+2176
0x28C4	0x0000FFFF ;_alcohol_bmp+2180
0x28C8	0x00000000 ;_alcohol_bmp+2184
0x28CC	0xFFFFFFFF ;_alcohol_bmp+2188
0x28D0	0x00000000 ;_alcohol_bmp+2192
0x28D4	0xFFFFFFFF ;_alcohol_bmp+2196
0x28D8	0xFFFFFFFF ;_alcohol_bmp+2200
0x28DC	0x00000000 ;_alcohol_bmp+2204
0x28E0	0xFFFFFFFF ;_alcohol_bmp+2208
0x28E4	0xFFFFFFFF ;_alcohol_bmp+2212
0x28E8	0x0000FFFF ;_alcohol_bmp+2216
0x28EC	0xFFFF0000 ;_alcohol_bmp+2220
0x28F0	0x0000FFFF ;_alcohol_bmp+2224
0x28F4	0xFFFFFFFF ;_alcohol_bmp+2228
0x28F8	0x0000FFFF ;_alcohol_bmp+2232
0x28FC	0x00000000 ;_alcohol_bmp+2236
0x2900	0xFFFFFFFF ;_alcohol_bmp+2240
0x2904	0xFFFFFFFF ;_alcohol_bmp+2244
0x2908	0x0000FFFF ;_alcohol_bmp+2248
0x290C	0xFFFF0000 ;_alcohol_bmp+2252
0x2910	0x0000FFFF ;_alcohol_bmp+2256
0x2914	0x00000000 ;_alcohol_bmp+2260
0x2918	0x00000000 ;_alcohol_bmp+2264
0x291C	0x00000000 ;_alcohol_bmp+2268
0x2920	0x00000000 ;_alcohol_bmp+2272
0x2924	0x00000000 ;_alcohol_bmp+2276
0x2928	0x00000000 ;_alcohol_bmp+2280
0x292C	0x00000000 ;_alcohol_bmp+2284
0x2930	0x00000000 ;_alcohol_bmp+2288
0x2934	0x00000000 ;_alcohol_bmp+2292
0x2938	0x00000000 ;_alcohol_bmp+2296
0x293C	0x00000000 ;_alcohol_bmp+2300
0x2940	0x00000000 ;_alcohol_bmp+2304
0x2944	0x00000000 ;_alcohol_bmp+2308
0x2948	0x00000000 ;_alcohol_bmp+2312
0x294C	0x00000000 ;_alcohol_bmp+2316
0x2950	0x00000000 ;_alcohol_bmp+2320
0x2954	0x00000000 ;_alcohol_bmp+2324
0x2958	0x00000000 ;_alcohol_bmp+2328
0x295C	0x00000000 ;_alcohol_bmp+2332
0x2960	0x00000000 ;_alcohol_bmp+2336
0x2964	0x00000000 ;_alcohol_bmp+2340
0x2968	0x00000000 ;_alcohol_bmp+2344
0x296C	0x00000000 ;_alcohol_bmp+2348
0x2970	0x00000000 ;_alcohol_bmp+2352
0x2974	0x00000000 ;_alcohol_bmp+2356
0x2978	0x00000000 ;_alcohol_bmp+2360
0x297C	0xFFFFFFFF ;_alcohol_bmp+2364
0x2980	0x00000000 ;_alcohol_bmp+2368
0x2984	0xFFFFFFFF ;_alcohol_bmp+2372
0x2988	0x00000000 ;_alcohol_bmp+2376
0x298C	0xFFFFFFFF ;_alcohol_bmp+2380
0x2990	0xFFFF0000 ;_alcohol_bmp+2384
0x2994	0x0000FFFF ;_alcohol_bmp+2388
0x2998	0x00000000 ;_alcohol_bmp+2392
0x299C	0xFFFF0000 ;_alcohol_bmp+2396
0x29A0	0x0000FFFF ;_alcohol_bmp+2400
0x29A4	0x00000000 ;_alcohol_bmp+2404
0x29A8	0xFFFFFFFF ;_alcohol_bmp+2408
0x29AC	0xFFFF0000 ;_alcohol_bmp+2412
0x29B0	0xFFFFFFFF ;_alcohol_bmp+2416
0x29B4	0x00000000 ;_alcohol_bmp+2420
0x29B8	0xFFFFFFFF ;_alcohol_bmp+2424
0x29BC	0xFFFF0000 ;_alcohol_bmp+2428
0x29C0	0x0000FFFF ;_alcohol_bmp+2432
0x29C4	0x00000000 ;_alcohol_bmp+2436
0x29C8	0xFFFFFFFF ;_alcohol_bmp+2440
0x29CC	0xFFFF0000 ;_alcohol_bmp+2444
0x29D0	0x0000FFFF ;_alcohol_bmp+2448
0x29D4	0x00000000 ;_alcohol_bmp+2452
0x29D8	0x00000000 ;_alcohol_bmp+2456
0x29DC	0x00000000 ;_alcohol_bmp+2460
0x29E0	0x00000000 ;_alcohol_bmp+2464
0x29E4	0x00000000 ;_alcohol_bmp+2468
0x29E8	0x00000000 ;_alcohol_bmp+2472
0x29EC	0x00000000 ;_alcohol_bmp+2476
0x29F0	0x00000000 ;_alcohol_bmp+2480
0x29F4	0x00000000 ;_alcohol_bmp+2484
0x29F8	0x00000000 ;_alcohol_bmp+2488
0x29FC	0x00000000 ;_alcohol_bmp+2492
0x2A00	0x00000000 ;_alcohol_bmp+2496
0x2A04	0x00000000 ;_alcohol_bmp+2500
0x2A08	0x00000000 ;_alcohol_bmp+2504
0x2A0C	0x00000000 ;_alcohol_bmp+2508
0x2A10	0x00000000 ;_alcohol_bmp+2512
0x2A14	0x00000000 ;_alcohol_bmp+2516
0x2A18	0x00000000 ;_alcohol_bmp+2520
0x2A1C	0x00000000 ;_alcohol_bmp+2524
0x2A20	0x00000000 ;_alcohol_bmp+2528
0x2A24	0x00000000 ;_alcohol_bmp+2532
0x2A28	0x00000000 ;_alcohol_bmp+2536
0x2A2C	0x00000000 ;_alcohol_bmp+2540
0x2A30	0x00000000 ;_alcohol_bmp+2544
0x2A34	0x00000000 ;_alcohol_bmp+2548
0x2A38	0x00000000 ;_alcohol_bmp+2552
0x2A3C	0xFFFFFFFF ;_alcohol_bmp+2556
0x2A40	0x00000000 ;_alcohol_bmp+2560
0x2A44	0xFFFFFFFF ;_alcohol_bmp+2564
0x2A48	0x00000000 ;_alcohol_bmp+2568
0x2A4C	0xFFFFFFFF ;_alcohol_bmp+2572
0x2A50	0xFFFF0000 ;_alcohol_bmp+2576
0x2A54	0x0000FFFF ;_alcohol_bmp+2580
0x2A58	0x00000000 ;_alcohol_bmp+2584
0x2A5C	0xFFFF0000 ;_alcohol_bmp+2588
0x2A60	0x0000FFFF ;_alcohol_bmp+2592
0x2A64	0x00000000 ;_alcohol_bmp+2596
0x2A68	0xFFFFFFFF ;_alcohol_bmp+2600
0x2A6C	0xFFFF0000 ;_alcohol_bmp+2604
0x2A70	0x0000FFFF ;_alcohol_bmp+2608
0x2A74	0x00000000 ;_alcohol_bmp+2612
0x2A78	0xFFFFFFFF ;_alcohol_bmp+2616
0x2A7C	0xFFFF0000 ;_alcohol_bmp+2620
0x2A80	0x0000FFFF ;_alcohol_bmp+2624
0x2A84	0x00000000 ;_alcohol_bmp+2628
0x2A88	0xFFFFFFFF ;_alcohol_bmp+2632
0x2A8C	0xFFFF0000 ;_alcohol_bmp+2636
0x2A90	0x0000FFFF ;_alcohol_bmp+2640
0x2A94	0x00000000 ;_alcohol_bmp+2644
0x2A98	0x00000000 ;_alcohol_bmp+2648
0x2A9C	0x00000000 ;_alcohol_bmp+2652
0x2AA0	0x00000000 ;_alcohol_bmp+2656
0x2AA4	0x00000000 ;_alcohol_bmp+2660
0x2AA8	0x00000000 ;_alcohol_bmp+2664
0x2AAC	0x00000000 ;_alcohol_bmp+2668
0x2AB0	0x00000000 ;_alcohol_bmp+2672
0x2AB4	0x00000000 ;_alcohol_bmp+2676
0x2AB8	0x00000000 ;_alcohol_bmp+2680
0x2ABC	0x00000000 ;_alcohol_bmp+2684
0x2AC0	0x00000000 ;_alcohol_bmp+2688
0x2AC4	0x00000000 ;_alcohol_bmp+2692
0x2AC8	0x00000000 ;_alcohol_bmp+2696
0x2ACC	0x00000000 ;_alcohol_bmp+2700
0x2AD0	0x00000000 ;_alcohol_bmp+2704
0x2AD4	0x00000000 ;_alcohol_bmp+2708
0x2AD8	0x00000000 ;_alcohol_bmp+2712
0x2ADC	0x00000000 ;_alcohol_bmp+2716
0x2AE0	0x00000000 ;_alcohol_bmp+2720
0x2AE4	0x00000000 ;_alcohol_bmp+2724
0x2AE8	0x00000000 ;_alcohol_bmp+2728
0x2AEC	0x00000000 ;_alcohol_bmp+2732
0x2AF0	0x00000000 ;_alcohol_bmp+2736
0x2AF4	0x00000000 ;_alcohol_bmp+2740
0x2AF8	0x00000000 ;_alcohol_bmp+2744
0x2AFC	0xFFFFFFFF ;_alcohol_bmp+2748
0x2B00	0x00000000 ;_alcohol_bmp+2752
0x2B04	0xFFFFFFFF ;_alcohol_bmp+2756
0x2B08	0x00000000 ;_alcohol_bmp+2760
0x2B0C	0xFFFFFFFF ;_alcohol_bmp+2764
0x2B10	0xFFFF0000 ;_alcohol_bmp+2768
0x2B14	0x0000FFFF ;_alcohol_bmp+2772
0x2B18	0x00000000 ;_alcohol_bmp+2776
0x2B1C	0xFFFF0000 ;_alcohol_bmp+2780
0x2B20	0x0000FFFF ;_alcohol_bmp+2784
0x2B24	0x00000000 ;_alcohol_bmp+2788
0x2B28	0xFFFFFFFF ;_alcohol_bmp+2792
0x2B2C	0xFFFF0000 ;_alcohol_bmp+2796
0x2B30	0x0000FFFF ;_alcohol_bmp+2800
0x2B34	0x00000000 ;_alcohol_bmp+2804
0x2B38	0xFFFFFFFF ;_alcohol_bmp+2808
0x2B3C	0xFFFF0000 ;_alcohol_bmp+2812
0x2B40	0x0000FFFF ;_alcohol_bmp+2816
0x2B44	0x00000000 ;_alcohol_bmp+2820
0x2B48	0xFFFFFFFF ;_alcohol_bmp+2824
0x2B4C	0xFFFF0000 ;_alcohol_bmp+2828
0x2B50	0x0000FFFF ;_alcohol_bmp+2832
0x2B54	0x00000000 ;_alcohol_bmp+2836
0x2B58	0x00000000 ;_alcohol_bmp+2840
0x2B5C	0x00000000 ;_alcohol_bmp+2844
0x2B60	0x00000000 ;_alcohol_bmp+2848
0x2B64	0x00000000 ;_alcohol_bmp+2852
0x2B68	0x00000000 ;_alcohol_bmp+2856
0x2B6C	0x00000000 ;_alcohol_bmp+2860
0x2B70	0x00000000 ;_alcohol_bmp+2864
0x2B74	0x00000000 ;_alcohol_bmp+2868
0x2B78	0x00000000 ;_alcohol_bmp+2872
0x2B7C	0x00000000 ;_alcohol_bmp+2876
0x2B80	0x00000000 ;_alcohol_bmp+2880
0x2B84	0x00000000 ;_alcohol_bmp+2884
0x2B88	0x00000000 ;_alcohol_bmp+2888
0x2B8C	0x00000000 ;_alcohol_bmp+2892
0x2B90	0x00000000 ;_alcohol_bmp+2896
0x2B94	0x00000000 ;_alcohol_bmp+2900
0x2B98	0x00000000 ;_alcohol_bmp+2904
0x2B9C	0x00000000 ;_alcohol_bmp+2908
0x2BA0	0x00000000 ;_alcohol_bmp+2912
0x2BA4	0x00000000 ;_alcohol_bmp+2916
0x2BA8	0x00000000 ;_alcohol_bmp+2920
0x2BAC	0x00000000 ;_alcohol_bmp+2924
0x2BB0	0x00000000 ;_alcohol_bmp+2928
0x2BB4	0x00000000 ;_alcohol_bmp+2932
0x2BB8	0xFFFF0000 ;_alcohol_bmp+2936
0x2BBC	0xFFFFFFFF ;_alcohol_bmp+2940
0x2BC0	0xFFFFFFFF ;_alcohol_bmp+2944
0x2BC4	0xFFFFFFFF ;_alcohol_bmp+2948
0x2BC8	0x0000FFFF ;_alcohol_bmp+2952
0x2BCC	0xFFFFFFFF ;_alcohol_bmp+2956
0x2BD0	0xFFFF0000 ;_alcohol_bmp+2960
0x2BD4	0x0000FFFF ;_alcohol_bmp+2964
0x2BD8	0x00000000 ;_alcohol_bmp+2968
0x2BDC	0xFFFF0000 ;_alcohol_bmp+2972
0x2BE0	0x0000FFFF ;_alcohol_bmp+2976
0x2BE4	0x00000000 ;_alcohol_bmp+2980
0x2BE8	0xFFFFFFFF ;_alcohol_bmp+2984
0x2BEC	0xFFFF0000 ;_alcohol_bmp+2988
0x2BF0	0x0000FFFF ;_alcohol_bmp+2992
0x2BF4	0x00000000 ;_alcohol_bmp+2996
0x2BF8	0xFFFFFFFF ;_alcohol_bmp+3000
0x2BFC	0xFFFF0000 ;_alcohol_bmp+3004
0x2C00	0x0000FFFF ;_alcohol_bmp+3008
0x2C04	0x00000000 ;_alcohol_bmp+3012
0x2C08	0xFFFFFFFF ;_alcohol_bmp+3016
0x2C0C	0xFFFF0000 ;_alcohol_bmp+3020
0x2C10	0x0000FFFF ;_alcohol_bmp+3024
0x2C14	0x00000000 ;_alcohol_bmp+3028
0x2C18	0x00000000 ;_alcohol_bmp+3032
0x2C1C	0x00000000 ;_alcohol_bmp+3036
0x2C20	0x00000000 ;_alcohol_bmp+3040
0x2C24	0x00000000 ;_alcohol_bmp+3044
0x2C28	0x00000000 ;_alcohol_bmp+3048
0x2C2C	0x00000000 ;_alcohol_bmp+3052
0x2C30	0x00000000 ;_alcohol_bmp+3056
0x2C34	0x00000000 ;_alcohol_bmp+3060
0x2C38	0x00000000 ;_alcohol_bmp+3064
0x2C3C	0x00000000 ;_alcohol_bmp+3068
0x2C40	0x00000000 ;_alcohol_bmp+3072
0x2C44	0x00000000 ;_alcohol_bmp+3076
0x2C48	0x00000000 ;_alcohol_bmp+3080
0x2C4C	0x00000000 ;_alcohol_bmp+3084
0x2C50	0x00000000 ;_alcohol_bmp+3088
0x2C54	0x00000000 ;_alcohol_bmp+3092
0x2C58	0x00000000 ;_alcohol_bmp+3096
0x2C5C	0x00000000 ;_alcohol_bmp+3100
0x2C60	0x00000000 ;_alcohol_bmp+3104
0x2C64	0x00000000 ;_alcohol_bmp+3108
0x2C68	0x00000000 ;_alcohol_bmp+3112
0x2C6C	0x00000000 ;_alcohol_bmp+3116
0x2C70	0x00000000 ;_alcohol_bmp+3120
0x2C74	0x00000000 ;_alcohol_bmp+3124
0x2C78	0xFFFF0000 ;_alcohol_bmp+3128
0x2C7C	0x0000FFFF ;_alcohol_bmp+3132
0x2C80	0x00000000 ;_alcohol_bmp+3136
0x2C84	0xFFFF0000 ;_alcohol_bmp+3140
0x2C88	0x0000FFFF ;_alcohol_bmp+3144
0x2C8C	0xFFFFFFFF ;_alcohol_bmp+3148
0x2C90	0xFFFF0000 ;_alcohol_bmp+3152
0x2C94	0x0000FFFF ;_alcohol_bmp+3156
0x2C98	0x00000000 ;_alcohol_bmp+3160
0x2C9C	0xFFFF0000 ;_alcohol_bmp+3164
0x2CA0	0x0000FFFF ;_alcohol_bmp+3168
0x2CA4	0x00000000 ;_alcohol_bmp+3172
0x2CA8	0xFFFFFFFF ;_alcohol_bmp+3176
0x2CAC	0xFFFF0000 ;_alcohol_bmp+3180
0x2CB0	0x0000FFFF ;_alcohol_bmp+3184
0x2CB4	0x00000000 ;_alcohol_bmp+3188
0x2CB8	0xFFFFFFFF ;_alcohol_bmp+3192
0x2CBC	0xFFFF0000 ;_alcohol_bmp+3196
0x2CC0	0x0000FFFF ;_alcohol_bmp+3200
0x2CC4	0x00000000 ;_alcohol_bmp+3204
0x2CC8	0xFFFFFFFF ;_alcohol_bmp+3208
0x2CCC	0xFFFF0000 ;_alcohol_bmp+3212
0x2CD0	0x0000FFFF ;_alcohol_bmp+3216
0x2CD4	0x00000000 ;_alcohol_bmp+3220
0x2CD8	0x00000000 ;_alcohol_bmp+3224
0x2CDC	0x00000000 ;_alcohol_bmp+3228
0x2CE0	0x00000000 ;_alcohol_bmp+3232
0x2CE4	0x00000000 ;_alcohol_bmp+3236
0x2CE8	0x00000000 ;_alcohol_bmp+3240
0x2CEC	0x00000000 ;_alcohol_bmp+3244
0x2CF0	0x00000000 ;_alcohol_bmp+3248
0x2CF4	0x00000000 ;_alcohol_bmp+3252
0x2CF8	0x00000000 ;_alcohol_bmp+3256
0x2CFC	0x00000000 ;_alcohol_bmp+3260
0x2D00	0x00000000 ;_alcohol_bmp+3264
0x2D04	0x00000000 ;_alcohol_bmp+3268
0x2D08	0x00000000 ;_alcohol_bmp+3272
0x2D0C	0x00000000 ;_alcohol_bmp+3276
0x2D10	0x00000000 ;_alcohol_bmp+3280
0x2D14	0x00000000 ;_alcohol_bmp+3284
0x2D18	0x00000000 ;_alcohol_bmp+3288
0x2D1C	0x00000000 ;_alcohol_bmp+3292
0x2D20	0x00000000 ;_alcohol_bmp+3296
0x2D24	0x00000000 ;_alcohol_bmp+3300
0x2D28	0x00000000 ;_alcohol_bmp+3304
0x2D2C	0x00000000 ;_alcohol_bmp+3308
0x2D30	0x00000000 ;_alcohol_bmp+3312
0x2D34	0x00000000 ;_alcohol_bmp+3316
0x2D38	0xFFFF0000 ;_alcohol_bmp+3320
0x2D3C	0x0000FFFF ;_alcohol_bmp+3324
0x2D40	0x00000000 ;_alcohol_bmp+3328
0x2D44	0xFFFF0000 ;_alcohol_bmp+3332
0x2D48	0x0000FFFF ;_alcohol_bmp+3336
0x2D4C	0xFFFFFFFF ;_alcohol_bmp+3340
0x2D50	0x00000000 ;_alcohol_bmp+3344
0x2D54	0xFFFFFFFF ;_alcohol_bmp+3348
0x2D58	0xFFFFFFFF ;_alcohol_bmp+3352
0x2D5C	0x00000000 ;_alcohol_bmp+3356
0x2D60	0xFFFFFFFF ;_alcohol_bmp+3360
0x2D64	0xFFFFFFFF ;_alcohol_bmp+3364
0x2D68	0x0000FFFF ;_alcohol_bmp+3368
0x2D6C	0xFFFF0000 ;_alcohol_bmp+3372
0x2D70	0x0000FFFF ;_alcohol_bmp+3376
0x2D74	0x00000000 ;_alcohol_bmp+3380
0x2D78	0xFFFFFFFF ;_alcohol_bmp+3384
0x2D7C	0x00000000 ;_alcohol_bmp+3388
0x2D80	0xFFFFFFFF ;_alcohol_bmp+3392
0x2D84	0xFFFFFFFF ;_alcohol_bmp+3396
0x2D88	0x0000FFFF ;_alcohol_bmp+3400
0x2D8C	0xFFFF0000 ;_alcohol_bmp+3404
0x2D90	0x0000FFFF ;_alcohol_bmp+3408
0x2D94	0x00000000 ;_alcohol_bmp+3412
0x2D98	0x00000000 ;_alcohol_bmp+3416
0x2D9C	0x00000000 ;_alcohol_bmp+3420
0x2DA0	0x00000000 ;_alcohol_bmp+3424
0x2DA4	0x00000000 ;_alcohol_bmp+3428
0x2DA8	0x00000000 ;_alcohol_bmp+3432
0x2DAC	0x00000000 ;_alcohol_bmp+3436
0x2DB0	0x00000000 ;_alcohol_bmp+3440
0x2DB4	0x00000000 ;_alcohol_bmp+3444
0x2DB8	0x00000000 ;_alcohol_bmp+3448
0x2DBC	0x00000000 ;_alcohol_bmp+3452
0x2DC0	0x00000000 ;_alcohol_bmp+3456
0x2DC4	0x00000000 ;_alcohol_bmp+3460
0x2DC8	0x00000000 ;_alcohol_bmp+3464
0x2DCC	0x00000000 ;_alcohol_bmp+3468
0x2DD0	0x00000000 ;_alcohol_bmp+3472
0x2DD4	0x00000000 ;_alcohol_bmp+3476
0x2DD8	0x00000000 ;_alcohol_bmp+3480
0x2DDC	0x00000000 ;_alcohol_bmp+3484
0x2DE0	0x00000000 ;_alcohol_bmp+3488
0x2DE4	0x00000000 ;_alcohol_bmp+3492
0x2DE8	0x00000000 ;_alcohol_bmp+3496
0x2DEC	0x00000000 ;_alcohol_bmp+3500
0x2DF0	0x00000000 ;_alcohol_bmp+3504
0x2DF4	0x00000000 ;_alcohol_bmp+3508
0x2DF8	0x00000000 ;_alcohol_bmp+3512
0x2DFC	0x00000000 ;_alcohol_bmp+3516
0x2E00	0x00000000 ;_alcohol_bmp+3520
0x2E04	0x00000000 ;_alcohol_bmp+3524
0x2E08	0x00000000 ;_alcohol_bmp+3528
0x2E0C	0x00000000 ;_alcohol_bmp+3532
0x2E10	0x00000000 ;_alcohol_bmp+3536
0x2E14	0x00000000 ;_alcohol_bmp+3540
0x2E18	0x00000000 ;_alcohol_bmp+3544
0x2E1C	0x00000000 ;_alcohol_bmp+3548
0x2E20	0x00000000 ;_alcohol_bmp+3552
0x2E24	0x00000000 ;_alcohol_bmp+3556
0x2E28	0x00000000 ;_alcohol_bmp+3560
0x2E2C	0x00000000 ;_alcohol_bmp+3564
0x2E30	0x00000000 ;_alcohol_bmp+3568
0x2E34	0x00000000 ;_alcohol_bmp+3572
0x2E38	0x00000000 ;_alcohol_bmp+3576
0x2E3C	0x00000000 ;_alcohol_bmp+3580
0x2E40	0x00000000 ;_alcohol_bmp+3584
0x2E44	0x00000000 ;_alcohol_bmp+3588
0x2E48	0x00000000 ;_alcohol_bmp+3592
0x2E4C	0x00000000 ;_alcohol_bmp+3596
0x2E50	0x00000000 ;_alcohol_bmp+3600
0x2E54	0x00000000 ;_alcohol_bmp+3604
0x2E58	0x00000000 ;_alcohol_bmp+3608
0x2E5C	0x00000000 ;_alcohol_bmp+3612
0x2E60	0x00000000 ;_alcohol_bmp+3616
0x2E64	0x00000000 ;_alcohol_bmp+3620
0x2E68	0x00000000 ;_alcohol_bmp+3624
0x2E6C	0x00000000 ;_alcohol_bmp+3628
0x2E70	0x00000000 ;_alcohol_bmp+3632
0x2E74	0x00000000 ;_alcohol_bmp+3636
0x2E78	0x00000000 ;_alcohol_bmp+3640
0x2E7C	0x00000000 ;_alcohol_bmp+3644
0x2E80	0x00000000 ;_alcohol_bmp+3648
0x2E84	0x00000000 ;_alcohol_bmp+3652
0x2E88	0x00000000 ;_alcohol_bmp+3656
0x2E8C	0x00000000 ;_alcohol_bmp+3660
0x2E90	0x00000000 ;_alcohol_bmp+3664
0x2E94	0x00000000 ;_alcohol_bmp+3668
0x2E98	0x00000000 ;_alcohol_bmp+3672
0x2E9C	0x00000000 ;_alcohol_bmp+3676
0x2EA0	0x00000000 ;_alcohol_bmp+3680
0x2EA4	0x00000000 ;_alcohol_bmp+3684
0x2EA8	0x00000000 ;_alcohol_bmp+3688
0x2EAC	0x00000000 ;_alcohol_bmp+3692
0x2EB0	0x00000000 ;_alcohol_bmp+3696
0x2EB4	0x00000000 ;_alcohol_bmp+3700
0x2EB8	0x00000000 ;_alcohol_bmp+3704
0x2EBC	0x00000000 ;_alcohol_bmp+3708
0x2EC0	0x00000000 ;_alcohol_bmp+3712
0x2EC4	0x00000000 ;_alcohol_bmp+3716
0x2EC8	0x00000000 ;_alcohol_bmp+3720
0x2ECC	0x00000000 ;_alcohol_bmp+3724
0x2ED0	0x00000000 ;_alcohol_bmp+3728
0x2ED4	0x00000000 ;_alcohol_bmp+3732
0x2ED8	0x00000000 ;_alcohol_bmp+3736
0x2EDC	0x00000000 ;_alcohol_bmp+3740
0x2EE0	0x00000000 ;_alcohol_bmp+3744
0x2EE4	0x00000000 ;_alcohol_bmp+3748
0x2EE8	0x00000000 ;_alcohol_bmp+3752
0x2EEC	0x00000000 ;_alcohol_bmp+3756
0x2EF0	0x00000000 ;_alcohol_bmp+3760
0x2EF4	0x00000000 ;_alcohol_bmp+3764
0x2EF8	0x00000000 ;_alcohol_bmp+3768
0x2EFC	0x00000000 ;_alcohol_bmp+3772
0x2F00	0x00000000 ;_alcohol_bmp+3776
0x2F04	0x00000000 ;_alcohol_bmp+3780
0x2F08	0x00000000 ;_alcohol_bmp+3784
0x2F0C	0x00000000 ;_alcohol_bmp+3788
0x2F10	0x00000000 ;_alcohol_bmp+3792
0x2F14	0x00000000 ;_alcohol_bmp+3796
0x2F18	0x00000000 ;_alcohol_bmp+3800
0x2F1C	0x00000000 ;_alcohol_bmp+3804
0x2F20	0x00000000 ;_alcohol_bmp+3808
0x2F24	0x00000000 ;_alcohol_bmp+3812
0x2F28	0x00000000 ;_alcohol_bmp+3816
0x2F2C	0x00000000 ;_alcohol_bmp+3820
0x2F30	0x00000000 ;_alcohol_bmp+3824
0x2F34	0x00000000 ;_alcohol_bmp+3828
0x2F38	0x00000000 ;_alcohol_bmp+3832
0x2F3C	0x00000000 ;_alcohol_bmp+3836
0x2F40	0x00000000 ;_alcohol_bmp+3840
0x2F44	0x00000000 ;_alcohol_bmp+3844
0x2F48	0x00000000 ;_alcohol_bmp+3848
0x2F4C	0x00000000 ;_alcohol_bmp+3852
0x2F50	0x00000000 ;_alcohol_bmp+3856
0x2F54	0x00000000 ;_alcohol_bmp+3860
0x2F58	0x00000000 ;_alcohol_bmp+3864
0x2F5C	0x00000000 ;_alcohol_bmp+3868
0x2F60	0x00000000 ;_alcohol_bmp+3872
0x2F64	0x00000000 ;_alcohol_bmp+3876
0x2F68	0x00000000 ;_alcohol_bmp+3880
0x2F6C	0x00000000 ;_alcohol_bmp+3884
0x2F70	0x00000000 ;_alcohol_bmp+3888
0x2F74	0x00000000 ;_alcohol_bmp+3892
0x2F78	0x00000000 ;_alcohol_bmp+3896
0x2F7C	0x00000000 ;_alcohol_bmp+3900
0x2F80	0x00000000 ;_alcohol_bmp+3904
0x2F84	0x00000000 ;_alcohol_bmp+3908
0x2F88	0x00000000 ;_alcohol_bmp+3912
0x2F8C	0x00000000 ;_alcohol_bmp+3916
0x2F90	0x00000000 ;_alcohol_bmp+3920
0x2F94	0x00000000 ;_alcohol_bmp+3924
0x2F98	0x00000000 ;_alcohol_bmp+3928
0x2F9C	0x00000000 ;_alcohol_bmp+3932
0x2FA0	0x00000000 ;_alcohol_bmp+3936
0x2FA4	0x00000000 ;_alcohol_bmp+3940
0x2FA8	0x00000000 ;_alcohol_bmp+3944
0x2FAC	0x00000000 ;_alcohol_bmp+3948
0x2FB0	0x00000000 ;_alcohol_bmp+3952
0x2FB4	0x00000000 ;_alcohol_bmp+3956
0x2FB8	0x00000000 ;_alcohol_bmp+3960
0x2FBC	0x00000000 ;_alcohol_bmp+3964
0x2FC0	0x00000000 ;_alcohol_bmp+3968
0x2FC4	0x00000000 ;_alcohol_bmp+3972
0x2FC8	0x00000000 ;_alcohol_bmp+3976
0x2FCC	0x00000000 ;_alcohol_bmp+3980
0x2FD0	0x00000000 ;_alcohol_bmp+3984
0x2FD4	0x00000000 ;_alcohol_bmp+3988
0x2FD8	0x00000000 ;_alcohol_bmp+3992
0x2FDC	0x00000000 ;_alcohol_bmp+3996
0x2FE0	0x00000000 ;_alcohol_bmp+4000
0x2FE4	0x00000000 ;_alcohol_bmp+4004
0x2FE8	0x00000000 ;_alcohol_bmp+4008
0x2FEC	0x00000000 ;_alcohol_bmp+4012
0x2FF0	0x00000000 ;_alcohol_bmp+4016
0x2FF4	0x00000000 ;_alcohol_bmp+4020
0x2FF8	0x00000000 ;_alcohol_bmp+4024
0x2FFC	0x00000000 ;_alcohol_bmp+4028
0x3000	0x00000000 ;_alcohol_bmp+4032
0x3004	0x00000000 ;_alcohol_bmp+4036
0x3008	0x00000000 ;_alcohol_bmp+4040
0x300C	0x00000000 ;_alcohol_bmp+4044
0x3010	0x00000000 ;_alcohol_bmp+4048
0x3014	0x00000000 ;_alcohol_bmp+4052
0x3018	0x00000000 ;_alcohol_bmp+4056
0x301C	0x00000000 ;_alcohol_bmp+4060
0x3020	0x00000000 ;_alcohol_bmp+4064
0x3024	0x00000000 ;_alcohol_bmp+4068
0x3028	0x00000000 ;_alcohol_bmp+4072
0x302C	0x00000000 ;_alcohol_bmp+4076
0x3030	0x00000000 ;_alcohol_bmp+4080
0x3034	0x00000000 ;_alcohol_bmp+4084
0x3038	0x00000000 ;_alcohol_bmp+4088
0x303C	0x00000000 ;_alcohol_bmp+4092
0x3040	0x00000000 ;_alcohol_bmp+4096
0x3044	0x00000000 ;_alcohol_bmp+4100
0x3048	0x00000000 ;_alcohol_bmp+4104
0x304C	0x00000000 ;_alcohol_bmp+4108
0x3050	0x00000000 ;_alcohol_bmp+4112
0x3054	0x00000000 ;_alcohol_bmp+4116
0x3058	0x00000000 ;_alcohol_bmp+4120
0x305C	0x00000000 ;_alcohol_bmp+4124
0x3060	0x00000000 ;_alcohol_bmp+4128
0x3064	0x00000000 ;_alcohol_bmp+4132
0x3068	0x00000000 ;_alcohol_bmp+4136
0x306C	0x00000000 ;_alcohol_bmp+4140
0x3070	0x00000000 ;_alcohol_bmp+4144
0x3074	0x00000000 ;_alcohol_bmp+4148
0x3078	0x00000000 ;_alcohol_bmp+4152
0x307C	0x00000000 ;_alcohol_bmp+4156
0x3080	0x00000000 ;_alcohol_bmp+4160
0x3084	0x00000000 ;_alcohol_bmp+4164
0x3088	0x00000000 ;_alcohol_bmp+4168
0x308C	0x00000000 ;_alcohol_bmp+4172
0x3090	0x00000000 ;_alcohol_bmp+4176
0x3094	0x00000000 ;_alcohol_bmp+4180
0x3098	0x00000000 ;_alcohol_bmp+4184
0x309C	0x00000000 ;_alcohol_bmp+4188
0x30A0	0x00000000 ;_alcohol_bmp+4192
0x30A4	0x00000000 ;_alcohol_bmp+4196
0x30A8	0x00000000 ;_alcohol_bmp+4200
0x30AC	0x00000000 ;_alcohol_bmp+4204
0x30B0	0x00000000 ;_alcohol_bmp+4208
0x30B4	0x00000000 ;_alcohol_bmp+4212
0x30B8	0x00000000 ;_alcohol_bmp+4216
0x30BC	0x00000000 ;_alcohol_bmp+4220
0x30C0	0x00000000 ;_alcohol_bmp+4224
0x30C4	0x00000000 ;_alcohol_bmp+4228
0x30C8	0x00000000 ;_alcohol_bmp+4232
0x30CC	0x00000000 ;_alcohol_bmp+4236
0x30D0	0x00000000 ;_alcohol_bmp+4240
0x30D4	0x00000000 ;_alcohol_bmp+4244
0x30D8	0x00000000 ;_alcohol_bmp+4248
0x30DC	0x00000000 ;_alcohol_bmp+4252
0x30E0	0x00000000 ;_alcohol_bmp+4256
0x30E4	0x00000000 ;_alcohol_bmp+4260
0x30E8	0x00000000 ;_alcohol_bmp+4264
0x30EC	0x00000000 ;_alcohol_bmp+4268
0x30F0	0x00000000 ;_alcohol_bmp+4272
0x30F4	0x00000000 ;_alcohol_bmp+4276
0x30F8	0x00000000 ;_alcohol_bmp+4280
0x30FC	0x00000000 ;_alcohol_bmp+4284
0x3100	0x00000000 ;_alcohol_bmp+4288
0x3104	0x00000000 ;_alcohol_bmp+4292
0x3108	0x00000000 ;_alcohol_bmp+4296
0x310C	0x00000000 ;_alcohol_bmp+4300
0x3110	0x00000000 ;_alcohol_bmp+4304
0x3114	0x00000000 ;_alcohol_bmp+4308
0x3118	0x00000000 ;_alcohol_bmp+4312
0x311C	0x00000000 ;_alcohol_bmp+4316
0x3120	0x00000000 ;_alcohol_bmp+4320
0x3124	0x00000000 ;_alcohol_bmp+4324
0x3128	0x00000000 ;_alcohol_bmp+4328
0x312C	0x00000000 ;_alcohol_bmp+4332
0x3130	0x00000000 ;_alcohol_bmp+4336
0x3134	0x00000000 ;_alcohol_bmp+4340
0x3138	0x00000000 ;_alcohol_bmp+4344
0x313C	0x00000000 ;_alcohol_bmp+4348
0x3140	0x00000000 ;_alcohol_bmp+4352
0x3144	0x00000000 ;_alcohol_bmp+4356
0x3148	0x00000000 ;_alcohol_bmp+4360
0x314C	0x00000000 ;_alcohol_bmp+4364
0x3150	0x00000000 ;_alcohol_bmp+4368
0x3154	0x00000000 ;_alcohol_bmp+4372
0x3158	0x00000000 ;_alcohol_bmp+4376
0x315C	0x00000000 ;_alcohol_bmp+4380
0x3160	0x00000000 ;_alcohol_bmp+4384
0x3164	0x00000000 ;_alcohol_bmp+4388
0x3168	0x00000000 ;_alcohol_bmp+4392
0x316C	0x00000000 ;_alcohol_bmp+4396
0x3170	0x00000000 ;_alcohol_bmp+4400
0x3174	0x00000000 ;_alcohol_bmp+4404
0x3178	0x00000000 ;_alcohol_bmp+4408
0x317C	0x00000000 ;_alcohol_bmp+4412
0x3180	0x00000000 ;_alcohol_bmp+4416
0x3184	0x00000000 ;_alcohol_bmp+4420
0x3188	0x00000000 ;_alcohol_bmp+4424
0x318C	0x00000000 ;_alcohol_bmp+4428
0x3190	0x00000000 ;_alcohol_bmp+4432
0x3194	0x00000000 ;_alcohol_bmp+4436
0x3198	0x00000000 ;_alcohol_bmp+4440
0x319C	0x00000000 ;_alcohol_bmp+4444
0x31A0	0x00000000 ;_alcohol_bmp+4448
0x31A4	0x00000000 ;_alcohol_bmp+4452
0x31A8	0x00000000 ;_alcohol_bmp+4456
0x31AC	0x00000000 ;_alcohol_bmp+4460
0x31B0	0x00000000 ;_alcohol_bmp+4464
0x31B4	0x00000000 ;_alcohol_bmp+4468
0x31B8	0xFFFF0000 ;_alcohol_bmp+4472
0x31BC	0xFFFFFFFF ;_alcohol_bmp+4476
0x31C0	0xFFFFFFFF ;_alcohol_bmp+4480
0x31C4	0xFFFFFFFF ;_alcohol_bmp+4484
0x31C8	0xFFFFFFFF ;_alcohol_bmp+4488
0x31CC	0xFFFFFFFF ;_alcohol_bmp+4492
0x31D0	0xFFFFFFFF ;_alcohol_bmp+4496
0x31D4	0xFFFFFFFF ;_alcohol_bmp+4500
0x31D8	0xFFFFFFFF ;_alcohol_bmp+4504
0x31DC	0xFFFFFFFF ;_alcohol_bmp+4508
0x31E0	0xFFFFFFFF ;_alcohol_bmp+4512
0x31E4	0xFFFFFFFF ;_alcohol_bmp+4516
0x31E8	0xFFFFFFFF ;_alcohol_bmp+4520
0x31EC	0xFFFFFFFF ;_alcohol_bmp+4524
0x31F0	0xFFFFFFFF ;_alcohol_bmp+4528
0x31F4	0xFFFFFFFF ;_alcohol_bmp+4532
0x31F8	0xFFFFFFFF ;_alcohol_bmp+4536
0x31FC	0xFFFFFFFF ;_alcohol_bmp+4540
0x3200	0xFFFFFFFF ;_alcohol_bmp+4544
0x3204	0xFFFFFFFF ;_alcohol_bmp+4548
0x3208	0xFFFFFFFF ;_alcohol_bmp+4552
0x320C	0xFFFFFFFF ;_alcohol_bmp+4556
0x3210	0x0000FFFF ;_alcohol_bmp+4560
0x3214	0x00000000 ;_alcohol_bmp+4564
0x3218	0x00000000 ;_alcohol_bmp+4568
0x321C	0x00000000 ;_alcohol_bmp+4572
0x3220	0x00000000 ;_alcohol_bmp+4576
0x3224	0x00000000 ;_alcohol_bmp+4580
0x3228	0x00000000 ;_alcohol_bmp+4584
0x322C	0x00000000 ;_alcohol_bmp+4588
0x3230	0x00000000 ;_alcohol_bmp+4592
0x3234	0x00000000 ;_alcohol_bmp+4596
0x3238	0x00000000 ;_alcohol_bmp+4600
0x323C	0x00000000 ;_alcohol_bmp+4604
0x3240	0x00000000 ;_alcohol_bmp+4608
0x3244	0x00000000 ;_alcohol_bmp+4612
0x3248	0x00000000 ;_alcohol_bmp+4616
0x324C	0x00000000 ;_alcohol_bmp+4620
0x3250	0x00000000 ;_alcohol_bmp+4624
0x3254	0x00000000 ;_alcohol_bmp+4628
0x3258	0x00000000 ;_alcohol_bmp+4632
0x325C	0x00000000 ;_alcohol_bmp+4636
0x3260	0x00000000 ;_alcohol_bmp+4640
0x3264	0x00000000 ;_alcohol_bmp+4644
0x3268	0x00000000 ;_alcohol_bmp+4648
0x326C	0x00000000 ;_alcohol_bmp+4652
0x3270	0x00000000 ;_alcohol_bmp+4656
0x3274	0x00000000 ;_alcohol_bmp+4660
0x3278	0xFFFFEF7D ;_alcohol_bmp+4664
0x327C	0x10821082 ;_alcohol_bmp+4668
0x3280	0x10821082 ;_alcohol_bmp+4672
0x3284	0x10821082 ;_alcohol_bmp+4676
0x3288	0x00001082 ;_alcohol_bmp+4680
0x328C	0x00000000 ;_alcohol_bmp+4684
0x3290	0x00000000 ;_alcohol_bmp+4688
0x3294	0x10820000 ;_alcohol_bmp+4692
0x3298	0x10821082 ;_alcohol_bmp+4696
0x329C	0x10821082 ;_alcohol_bmp+4700
0x32A0	0x10821082 ;_alcohol_bmp+4704
0x32A4	0x10821082 ;_alcohol_bmp+4708
0x32A8	0x10821082 ;_alcohol_bmp+4712
0x32AC	0x10821082 ;_alcohol_bmp+4716
0x32B0	0x10821082 ;_alcohol_bmp+4720
0x32B4	0x10821082 ;_alcohol_bmp+4724
0x32B8	0x10821082 ;_alcohol_bmp+4728
0x32BC	0x10821082 ;_alcohol_bmp+4732
0x32C0	0x10821082 ;_alcohol_bmp+4736
0x32C4	0x10821082 ;_alcohol_bmp+4740
0x32C8	0x10821082 ;_alcohol_bmp+4744
0x32CC	0x10821082 ;_alcohol_bmp+4748
0x32D0	0xFFFFFFFF ;_alcohol_bmp+4752
0x32D4	0x00000000 ;_alcohol_bmp+4756
0x32D8	0x00000000 ;_alcohol_bmp+4760
0x32DC	0x00000000 ;_alcohol_bmp+4764
0x32E0	0x00000000 ;_alcohol_bmp+4768
0x32E4	0x00000000 ;_alcohol_bmp+4772
0x32E8	0x00000000 ;_alcohol_bmp+4776
0x32EC	0x00000000 ;_alcohol_bmp+4780
0x32F0	0x00000000 ;_alcohol_bmp+4784
0x32F4	0x00000000 ;_alcohol_bmp+4788
0x32F8	0x00000000 ;_alcohol_bmp+4792
0x32FC	0x00000000 ;_alcohol_bmp+4796
0x3300	0x00000000 ;_alcohol_bmp+4800
0x3304	0x00000000 ;_alcohol_bmp+4804
0x3308	0x00000000 ;_alcohol_bmp+4808
0x330C	0x00000000 ;_alcohol_bmp+4812
0x3310	0x00000000 ;_alcohol_bmp+4816
0x3314	0x00000000 ;_alcohol_bmp+4820
0x3318	0x00000000 ;_alcohol_bmp+4824
0x331C	0x00000000 ;_alcohol_bmp+4828
0x3320	0x00000000 ;_alcohol_bmp+4832
0x3324	0x00000000 ;_alcohol_bmp+4836
0x3328	0x00000000 ;_alcohol_bmp+4840
0x332C	0x00000000 ;_alcohol_bmp+4844
0x3330	0x00000000 ;_alcohol_bmp+4848
0x3334	0xE73C0000 ;_alcohol_bmp+4852
0x3338	0x0000FFFF ;_alcohol_bmp+4856
0x333C	0x00000000 ;_alcohol_bmp+4860
0x3340	0x00000000 ;_alcohol_bmp+4864
0x3344	0x00000000 ;_alcohol_bmp+4868
0x3348	0x00000000 ;_alcohol_bmp+4872
0x334C	0x00000000 ;_alcohol_bmp+4876
0x3350	0x00000000 ;_alcohol_bmp+4880
0x3354	0x00000000 ;_alcohol_bmp+4884
0x3358	0x00000000 ;_alcohol_bmp+4888
0x335C	0x00000000 ;_alcohol_bmp+4892
0x3360	0x00000000 ;_alcohol_bmp+4896
0x3364	0x00000000 ;_alcohol_bmp+4900
0x3368	0x00000000 ;_alcohol_bmp+4904
0x336C	0x00000000 ;_alcohol_bmp+4908
0x3370	0x00000000 ;_alcohol_bmp+4912
0x3374	0x00000000 ;_alcohol_bmp+4916
0x3378	0x00000000 ;_alcohol_bmp+4920
0x337C	0x00000000 ;_alcohol_bmp+4924
0x3380	0x00000000 ;_alcohol_bmp+4928
0x3384	0x00000000 ;_alcohol_bmp+4932
0x3388	0x00000000 ;_alcohol_bmp+4936
0x338C	0x00000000 ;_alcohol_bmp+4940
0x3390	0xFFFF0000 ;_alcohol_bmp+4944
0x3394	0x0000FFFF ;_alcohol_bmp+4948
0x3398	0x00000000 ;_alcohol_bmp+4952
0x339C	0x00000000 ;_alcohol_bmp+4956
0x33A0	0x00000000 ;_alcohol_bmp+4960
0x33A4	0x00000000 ;_alcohol_bmp+4964
0x33A8	0x00000000 ;_alcohol_bmp+4968
0x33AC	0x00000000 ;_alcohol_bmp+4972
0x33B0	0x00000000 ;_alcohol_bmp+4976
0x33B4	0x00000000 ;_alcohol_bmp+4980
0x33B8	0x00000000 ;_alcohol_bmp+4984
0x33BC	0x00000000 ;_alcohol_bmp+4988
0x33C0	0x00000000 ;_alcohol_bmp+4992
0x33C4	0x00000000 ;_alcohol_bmp+4996
0x33C8	0x00000000 ;_alcohol_bmp+5000
0x33CC	0x00000000 ;_alcohol_bmp+5004
0x33D0	0x00000000 ;_alcohol_bmp+5008
0x33D4	0x00000000 ;_alcohol_bmp+5012
0x33D8	0x00000000 ;_alcohol_bmp+5016
0x33DC	0x00000000 ;_alcohol_bmp+5020
0x33E0	0x00000000 ;_alcohol_bmp+5024
0x33E4	0x00000000 ;_alcohol_bmp+5028
0x33E8	0x00000000 ;_alcohol_bmp+5032
0x33EC	0x00000000 ;_alcohol_bmp+5036
0x33F0	0x00000000 ;_alcohol_bmp+5040
0x33F4	0xFFFF0000 ;_alcohol_bmp+5044
0x33F8	0x00000000 ;_alcohol_bmp+5048
0x33FC	0x00000000 ;_alcohol_bmp+5052
0x3400	0x00000000 ;_alcohol_bmp+5056
0x3404	0x00000000 ;_alcohol_bmp+5060
0x3408	0x00000000 ;_alcohol_bmp+5064
0x340C	0x00000000 ;_alcohol_bmp+5068
0x3410	0x00000000 ;_alcohol_bmp+5072
0x3414	0x00000000 ;_alcohol_bmp+5076
0x3418	0x00000000 ;_alcohol_bmp+5080
0x341C	0x00000000 ;_alcohol_bmp+5084
0x3420	0x00000000 ;_alcohol_bmp+5088
0x3424	0x00000000 ;_alcohol_bmp+5092
0x3428	0x00000000 ;_alcohol_bmp+5096
0x342C	0x00000000 ;_alcohol_bmp+5100
0x3430	0x00000000 ;_alcohol_bmp+5104
0x3434	0x00000000 ;_alcohol_bmp+5108
0x3438	0x00000000 ;_alcohol_bmp+5112
0x343C	0x00000000 ;_alcohol_bmp+5116
0x3440	0x00000000 ;_alcohol_bmp+5120
0x3444	0x00000000 ;_alcohol_bmp+5124
0x3448	0x00000000 ;_alcohol_bmp+5128
0x344C	0x00000000 ;_alcohol_bmp+5132
0x3450	0x00000000 ;_alcohol_bmp+5136
0x3454	0x0000FFFF ;_alcohol_bmp+5140
0x3458	0x00000000 ;_alcohol_bmp+5144
0x345C	0x00000000 ;_alcohol_bmp+5148
0x3460	0x00000000 ;_alcohol_bmp+5152
0x3464	0x00000000 ;_alcohol_bmp+5156
0x3468	0x00000000 ;_alcohol_bmp+5160
0x346C	0x00000000 ;_alcohol_bmp+5164
0x3470	0x00000000 ;_alcohol_bmp+5168
0x3474	0x00000000 ;_alcohol_bmp+5172
0x3478	0x00000000 ;_alcohol_bmp+5176
0x347C	0x00000000 ;_alcohol_bmp+5180
0x3480	0x00000000 ;_alcohol_bmp+5184
0x3484	0x00000000 ;_alcohol_bmp+5188
0x3488	0x00000000 ;_alcohol_bmp+5192
0x348C	0x00000000 ;_alcohol_bmp+5196
0x3490	0x00000000 ;_alcohol_bmp+5200
0x3494	0x00000000 ;_alcohol_bmp+5204
0x3498	0x00000000 ;_alcohol_bmp+5208
0x349C	0x00000000 ;_alcohol_bmp+5212
0x34A0	0x00000000 ;_alcohol_bmp+5216
0x34A4	0x00000000 ;_alcohol_bmp+5220
0x34A8	0x00000000 ;_alcohol_bmp+5224
0x34AC	0x00000000 ;_alcohol_bmp+5228
0x34B0	0x00000000 ;_alcohol_bmp+5232
0x34B4	0xFFFF0000 ;_alcohol_bmp+5236
0x34B8	0x00000000 ;_alcohol_bmp+5240
0x34BC	0x00000000 ;_alcohol_bmp+5244
0x34C0	0x00000000 ;_alcohol_bmp+5248
0x34C4	0x00000000 ;_alcohol_bmp+5252
0x34C8	0x00000000 ;_alcohol_bmp+5256
0x34CC	0x00000000 ;_alcohol_bmp+5260
0x34D0	0x00000000 ;_alcohol_bmp+5264
0x34D4	0x00000000 ;_alcohol_bmp+5268
0x34D8	0x00000000 ;_alcohol_bmp+5272
0x34DC	0x00000000 ;_alcohol_bmp+5276
0x34E0	0x00000000 ;_alcohol_bmp+5280
0x34E4	0x00000000 ;_alcohol_bmp+5284
0x34E8	0x00000000 ;_alcohol_bmp+5288
0x34EC	0x00000000 ;_alcohol_bmp+5292
0x34F0	0x00000000 ;_alcohol_bmp+5296
0x34F4	0x00000000 ;_alcohol_bmp+5300
0x34F8	0x00000000 ;_alcohol_bmp+5304
0x34FC	0x00000000 ;_alcohol_bmp+5308
0x3500	0x00000000 ;_alcohol_bmp+5312
0x3504	0x00000000 ;_alcohol_bmp+5316
0x3508	0x00000000 ;_alcohol_bmp+5320
0x350C	0x00000000 ;_alcohol_bmp+5324
0x3510	0x00000000 ;_alcohol_bmp+5328
0x3514	0x0000FFFF ;_alcohol_bmp+5332
0x3518	0x00000000 ;_alcohol_bmp+5336
0x351C	0x00000000 ;_alcohol_bmp+5340
0x3520	0x00000000 ;_alcohol_bmp+5344
0x3524	0x00000000 ;_alcohol_bmp+5348
0x3528	0x00000000 ;_alcohol_bmp+5352
0x352C	0x00000000 ;_alcohol_bmp+5356
0x3530	0x00000000 ;_alcohol_bmp+5360
0x3534	0x00000000 ;_alcohol_bmp+5364
0x3538	0x00000000 ;_alcohol_bmp+5368
0x353C	0x00000000 ;_alcohol_bmp+5372
0x3540	0x00000000 ;_alcohol_bmp+5376
0x3544	0x00000000 ;_alcohol_bmp+5380
0x3548	0x00000000 ;_alcohol_bmp+5384
0x354C	0x00000000 ;_alcohol_bmp+5388
0x3550	0x00000000 ;_alcohol_bmp+5392
0x3554	0x00000000 ;_alcohol_bmp+5396
0x3558	0x00000000 ;_alcohol_bmp+5400
0x355C	0x00000000 ;_alcohol_bmp+5404
0x3560	0x00000000 ;_alcohol_bmp+5408
0x3564	0x00000000 ;_alcohol_bmp+5412
0x3568	0x00000000 ;_alcohol_bmp+5416
0x356C	0x00000000 ;_alcohol_bmp+5420
0x3570	0x00000000 ;_alcohol_bmp+5424
0x3574	0xFFFF0000 ;_alcohol_bmp+5428
0x3578	0x00000000 ;_alcohol_bmp+5432
0x357C	0x00000000 ;_alcohol_bmp+5436
0x3580	0x00000000 ;_alcohol_bmp+5440
0x3584	0x00000000 ;_alcohol_bmp+5444
0x3588	0x00000000 ;_alcohol_bmp+5448
0x358C	0x00000000 ;_alcohol_bmp+5452
0x3590	0x00000000 ;_alcohol_bmp+5456
0x3594	0x00000000 ;_alcohol_bmp+5460
0x3598	0x00000000 ;_alcohol_bmp+5464
0x359C	0x00000000 ;_alcohol_bmp+5468
0x35A0	0x00000000 ;_alcohol_bmp+5472
0x35A4	0x00000000 ;_alcohol_bmp+5476
0x35A8	0x00000000 ;_alcohol_bmp+5480
0x35AC	0x00000000 ;_alcohol_bmp+5484
0x35B0	0x00000000 ;_alcohol_bmp+5488
0x35B4	0x00000000 ;_alcohol_bmp+5492
0x35B8	0x00000000 ;_alcohol_bmp+5496
0x35BC	0x00000000 ;_alcohol_bmp+5500
0x35C0	0x00000000 ;_alcohol_bmp+5504
0x35C4	0x00000000 ;_alcohol_bmp+5508
0x35C8	0x00000000 ;_alcohol_bmp+5512
0x35CC	0x00000000 ;_alcohol_bmp+5516
0x35D0	0x00000000 ;_alcohol_bmp+5520
0x35D4	0x0000FFFF ;_alcohol_bmp+5524
0x35D8	0x00000000 ;_alcohol_bmp+5528
0x35DC	0x00000000 ;_alcohol_bmp+5532
0x35E0	0x00000000 ;_alcohol_bmp+5536
0x35E4	0x00000000 ;_alcohol_bmp+5540
0x35E8	0x00000000 ;_alcohol_bmp+5544
0x35EC	0x00000000 ;_alcohol_bmp+5548
0x35F0	0x00000000 ;_alcohol_bmp+5552
0x35F4	0x00000000 ;_alcohol_bmp+5556
0x35F8	0x00000000 ;_alcohol_bmp+5560
0x35FC	0x00000000 ;_alcohol_bmp+5564
0x3600	0x00000000 ;_alcohol_bmp+5568
0x3604	0x00000000 ;_alcohol_bmp+5572
0x3608	0x00000000 ;_alcohol_bmp+5576
0x360C	0x00000000 ;_alcohol_bmp+5580
0x3610	0x00000000 ;_alcohol_bmp+5584
0x3614	0x00000000 ;_alcohol_bmp+5588
0x3618	0x00000000 ;_alcohol_bmp+5592
0x361C	0x00000000 ;_alcohol_bmp+5596
0x3620	0x00000000 ;_alcohol_bmp+5600
0x3624	0x00000000 ;_alcohol_bmp+5604
0x3628	0x00000000 ;_alcohol_bmp+5608
0x362C	0x00000000 ;_alcohol_bmp+5612
0x3630	0x00000000 ;_alcohol_bmp+5616
0x3634	0xFFFF0000 ;_alcohol_bmp+5620
0x3638	0x00000000 ;_alcohol_bmp+5624
0x363C	0x00000000 ;_alcohol_bmp+5628
0x3640	0x00000000 ;_alcohol_bmp+5632
0x3644	0x00000000 ;_alcohol_bmp+5636
0x3648	0x00000000 ;_alcohol_bmp+5640
0x364C	0x00000000 ;_alcohol_bmp+5644
0x3650	0x00000000 ;_alcohol_bmp+5648
0x3654	0x00000000 ;_alcohol_bmp+5652
0x3658	0x00000000 ;_alcohol_bmp+5656
0x365C	0x00000000 ;_alcohol_bmp+5660
0x3660	0x00000000 ;_alcohol_bmp+5664
0x3664	0x00000000 ;_alcohol_bmp+5668
0x3668	0x00000000 ;_alcohol_bmp+5672
0x366C	0x00000000 ;_alcohol_bmp+5676
0x3670	0x00000000 ;_alcohol_bmp+5680
0x3674	0x00000000 ;_alcohol_bmp+5684
0x3678	0x00000000 ;_alcohol_bmp+5688
0x367C	0x00000000 ;_alcohol_bmp+5692
0x3680	0x00000000 ;_alcohol_bmp+5696
0x3684	0x00000000 ;_alcohol_bmp+5700
0x3688	0x00000000 ;_alcohol_bmp+5704
0x368C	0x00000000 ;_alcohol_bmp+5708
0x3690	0x00000000 ;_alcohol_bmp+5712
0x3694	0x0000FFFF ;_alcohol_bmp+5716
0x3698	0x00000000 ;_alcohol_bmp+5720
0x369C	0x00000000 ;_alcohol_bmp+5724
0x36A0	0x00000000 ;_alcohol_bmp+5728
0x36A4	0x00000000 ;_alcohol_bmp+5732
0x36A8	0x00000000 ;_alcohol_bmp+5736
0x36AC	0x00000000 ;_alcohol_bmp+5740
0x36B0	0x00000000 ;_alcohol_bmp+5744
0x36B4	0x00000000 ;_alcohol_bmp+5748
0x36B8	0x00000000 ;_alcohol_bmp+5752
0x36BC	0x00000000 ;_alcohol_bmp+5756
0x36C0	0x00000000 ;_alcohol_bmp+5760
0x36C4	0x00000000 ;_alcohol_bmp+5764
0x36C8	0x00000000 ;_alcohol_bmp+5768
0x36CC	0x00000000 ;_alcohol_bmp+5772
0x36D0	0x00000000 ;_alcohol_bmp+5776
0x36D4	0x00000000 ;_alcohol_bmp+5780
0x36D8	0x00000000 ;_alcohol_bmp+5784
0x36DC	0x00000000 ;_alcohol_bmp+5788
0x36E0	0x00000000 ;_alcohol_bmp+5792
0x36E4	0x00000000 ;_alcohol_bmp+5796
0x36E8	0x00000000 ;_alcohol_bmp+5800
0x36EC	0x00000000 ;_alcohol_bmp+5804
0x36F0	0x00000000 ;_alcohol_bmp+5808
0x36F4	0xFFFF0000 ;_alcohol_bmp+5812
0x36F8	0x00000000 ;_alcohol_bmp+5816
0x36FC	0x00000000 ;_alcohol_bmp+5820
0x3700	0x00000000 ;_alcohol_bmp+5824
0x3704	0x00000000 ;_alcohol_bmp+5828
0x3708	0x00000000 ;_alcohol_bmp+5832
0x370C	0x00000000 ;_alcohol_bmp+5836
0x3710	0x00000000 ;_alcohol_bmp+5840
0x3714	0x00000000 ;_alcohol_bmp+5844
0x3718	0x00000000 ;_alcohol_bmp+5848
0x371C	0x00000000 ;_alcohol_bmp+5852
0x3720	0x00000000 ;_alcohol_bmp+5856
0x3724	0x00000000 ;_alcohol_bmp+5860
0x3728	0x00000000 ;_alcohol_bmp+5864
0x372C	0x00000000 ;_alcohol_bmp+5868
0x3730	0x00000000 ;_alcohol_bmp+5872
0x3734	0x00000000 ;_alcohol_bmp+5876
0x3738	0x00000000 ;_alcohol_bmp+5880
0x373C	0x00000000 ;_alcohol_bmp+5884
0x3740	0x00000000 ;_alcohol_bmp+5888
0x3744	0x00000000 ;_alcohol_bmp+5892
0x3748	0x00000000 ;_alcohol_bmp+5896
0x374C	0x00000000 ;_alcohol_bmp+5900
0x3750	0x00000000 ;_alcohol_bmp+5904
0x3754	0x0000FFFF ;_alcohol_bmp+5908
0x3758	0x00000000 ;_alcohol_bmp+5912
0x375C	0x00000000 ;_alcohol_bmp+5916
0x3760	0x00000000 ;_alcohol_bmp+5920
0x3764	0x00000000 ;_alcohol_bmp+5924
0x3768	0x00000000 ;_alcohol_bmp+5928
0x376C	0x00000000 ;_alcohol_bmp+5932
0x3770	0x00000000 ;_alcohol_bmp+5936
0x3774	0x00000000 ;_alcohol_bmp+5940
0x3778	0x00000000 ;_alcohol_bmp+5944
0x377C	0x00000000 ;_alcohol_bmp+5948
0x3780	0x00000000 ;_alcohol_bmp+5952
0x3784	0x00000000 ;_alcohol_bmp+5956
0x3788	0x00000000 ;_alcohol_bmp+5960
0x378C	0x00000000 ;_alcohol_bmp+5964
0x3790	0x00000000 ;_alcohol_bmp+5968
0x3794	0x00000000 ;_alcohol_bmp+5972
0x3798	0x00000000 ;_alcohol_bmp+5976
0x379C	0x00000000 ;_alcohol_bmp+5980
0x37A0	0x00000000 ;_alcohol_bmp+5984
0x37A4	0x00000000 ;_alcohol_bmp+5988
0x37A8	0x00000000 ;_alcohol_bmp+5992
0x37AC	0x00000000 ;_alcohol_bmp+5996
0x37B0	0x00000000 ;_alcohol_bmp+6000
0x37B4	0xFFFF0000 ;_alcohol_bmp+6004
0x37B8	0x00000000 ;_alcohol_bmp+6008
0x37BC	0x00000000 ;_alcohol_bmp+6012
0x37C0	0x00000000 ;_alcohol_bmp+6016
0x37C4	0x00000000 ;_alcohol_bmp+6020
0x37C8	0x00000000 ;_alcohol_bmp+6024
0x37CC	0x00000000 ;_alcohol_bmp+6028
0x37D0	0x00000000 ;_alcohol_bmp+6032
0x37D4	0x00000000 ;_alcohol_bmp+6036
0x37D8	0x00000000 ;_alcohol_bmp+6040
0x37DC	0x00000000 ;_alcohol_bmp+6044
0x37E0	0x00000000 ;_alcohol_bmp+6048
0x37E4	0x00000000 ;_alcohol_bmp+6052
0x37E8	0x00000000 ;_alcohol_bmp+6056
0x37EC	0x00000000 ;_alcohol_bmp+6060
0x37F0	0x00000000 ;_alcohol_bmp+6064
0x37F4	0x00000000 ;_alcohol_bmp+6068
0x37F8	0x00000000 ;_alcohol_bmp+6072
0x37FC	0x00000000 ;_alcohol_bmp+6076
0x3800	0x00000000 ;_alcohol_bmp+6080
0x3804	0x00000000 ;_alcohol_bmp+6084
0x3808	0x00000000 ;_alcohol_bmp+6088
0x380C	0x00000000 ;_alcohol_bmp+6092
0x3810	0x00000000 ;_alcohol_bmp+6096
0x3814	0x0000FFFF ;_alcohol_bmp+6100
0x3818	0x00000000 ;_alcohol_bmp+6104
0x381C	0x00000000 ;_alcohol_bmp+6108
0x3820	0x00000000 ;_alcohol_bmp+6112
0x3824	0x00000000 ;_alcohol_bmp+6116
0x3828	0x00000000 ;_alcohol_bmp+6120
0x382C	0x00000000 ;_alcohol_bmp+6124
0x3830	0x00000000 ;_alcohol_bmp+6128
0x3834	0x00000000 ;_alcohol_bmp+6132
0x3838	0x00000000 ;_alcohol_bmp+6136
0x383C	0x00000000 ;_alcohol_bmp+6140
0x3840	0x00000000 ;_alcohol_bmp+6144
0x3844	0x00000000 ;_alcohol_bmp+6148
0x3848	0x00000000 ;_alcohol_bmp+6152
0x384C	0x00000000 ;_alcohol_bmp+6156
0x3850	0x00000000 ;_alcohol_bmp+6160
0x3854	0x00000000 ;_alcohol_bmp+6164
0x3858	0x00000000 ;_alcohol_bmp+6168
0x385C	0x00000000 ;_alcohol_bmp+6172
0x3860	0x00000000 ;_alcohol_bmp+6176
0x3864	0x00000000 ;_alcohol_bmp+6180
0x3868	0x00000000 ;_alcohol_bmp+6184
0x386C	0x00000000 ;_alcohol_bmp+6188
0x3870	0x00000000 ;_alcohol_bmp+6192
0x3874	0xFFFF0000 ;_alcohol_bmp+6196
0x3878	0x00000000 ;_alcohol_bmp+6200
0x387C	0x00000000 ;_alcohol_bmp+6204
0x3880	0x00000000 ;_alcohol_bmp+6208
0x3884	0x00000000 ;_alcohol_bmp+6212
0x3888	0x00000000 ;_alcohol_bmp+6216
0x388C	0x00000000 ;_alcohol_bmp+6220
0x3890	0x00000000 ;_alcohol_bmp+6224
0x3894	0x00000000 ;_alcohol_bmp+6228
0x3898	0x00000000 ;_alcohol_bmp+6232
0x389C	0x10820000 ;_alcohol_bmp+6236
0x38A0	0x7BCF4A49 ;_alcohol_bmp+6240
0x38A4	0x528A8430 ;_alcohol_bmp+6244
0x38A8	0x00001082 ;_alcohol_bmp+6248
0x38AC	0x00000000 ;_alcohol_bmp+6252
0x38B0	0x00000000 ;_alcohol_bmp+6256
0x38B4	0x00000000 ;_alcohol_bmp+6260
0x38B8	0x00000000 ;_alcohol_bmp+6264
0x38BC	0x00000000 ;_alcohol_bmp+6268
0x38C0	0x00000000 ;_alcohol_bmp+6272
0x38C4	0x00000000 ;_alcohol_bmp+6276
0x38C8	0x00000000 ;_alcohol_bmp+6280
0x38CC	0x00000000 ;_alcohol_bmp+6284
0x38D0	0x00000000 ;_alcohol_bmp+6288
0x38D4	0x0000FFFF ;_alcohol_bmp+6292
0x38D8	0x00000000 ;_alcohol_bmp+6296
0x38DC	0x00000000 ;_alcohol_bmp+6300
0x38E0	0x00000000 ;_alcohol_bmp+6304
0x38E4	0x00000000 ;_alcohol_bmp+6308
0x38E8	0x00000000 ;_alcohol_bmp+6312
0x38EC	0x00000000 ;_alcohol_bmp+6316
0x38F0	0x00000000 ;_alcohol_bmp+6320
0x38F4	0x00000000 ;_alcohol_bmp+6324
0x38F8	0x00000000 ;_alcohol_bmp+6328
0x38FC	0x00000000 ;_alcohol_bmp+6332
0x3900	0x00000000 ;_alcohol_bmp+6336
0x3904	0x00000000 ;_alcohol_bmp+6340
0x3908	0x00000000 ;_alcohol_bmp+6344
0x390C	0x00000000 ;_alcohol_bmp+6348
0x3910	0x00000000 ;_alcohol_bmp+6352
0x3914	0x00000000 ;_alcohol_bmp+6356
0x3918	0x00000000 ;_alcohol_bmp+6360
0x391C	0x00000000 ;_alcohol_bmp+6364
0x3920	0x00000000 ;_alcohol_bmp+6368
0x3924	0x00000000 ;_alcohol_bmp+6372
0x3928	0x00000000 ;_alcohol_bmp+6376
0x392C	0x00000000 ;_alcohol_bmp+6380
0x3930	0x00000000 ;_alcohol_bmp+6384
0x3934	0xFFFF0000 ;_alcohol_bmp+6388
0x3938	0x00000000 ;_alcohol_bmp+6392
0x393C	0x00000000 ;_alcohol_bmp+6396
0x3940	0x00000000 ;_alcohol_bmp+6400
0x3944	0x00000000 ;_alcohol_bmp+6404
0x3948	0x00000000 ;_alcohol_bmp+6408
0x394C	0x00000000 ;_alcohol_bmp+6412
0x3950	0x00000000 ;_alcohol_bmp+6416
0x3954	0x00000000 ;_alcohol_bmp+6420
0x3958	0x00000000 ;_alcohol_bmp+6424
0x395C	0xDEFB5ACB ;_alcohol_bmp+6428
0x3960	0xDEFBFFFF ;_alcohol_bmp+6432
0x3964	0xFFFFDEFB ;_alcohol_bmp+6436
0x3968	0x630CE73C ;_alcohol_bmp+6440
0x396C	0x00000000 ;_alcohol_bmp+6444
0x3970	0x00000000 ;_alcohol_bmp+6448
0x3974	0x00000000 ;_alcohol_bmp+6452
0x3978	0x00000000 ;_alcohol_bmp+6456
0x397C	0x00000000 ;_alcohol_bmp+6460
0x3980	0x00000000 ;_alcohol_bmp+6464
0x3984	0x00000000 ;_alcohol_bmp+6468
0x3988	0x00000000 ;_alcohol_bmp+6472
0x398C	0x00000000 ;_alcohol_bmp+6476
0x3990	0x00000000 ;_alcohol_bmp+6480
0x3994	0x0000FFFF ;_alcohol_bmp+6484
0x3998	0x00000000 ;_alcohol_bmp+6488
0x399C	0x00000000 ;_alcohol_bmp+6492
0x39A0	0x00000000 ;_alcohol_bmp+6496
0x39A4	0x00000000 ;_alcohol_bmp+6500
0x39A8	0x00000000 ;_alcohol_bmp+6504
0x39AC	0x00000000 ;_alcohol_bmp+6508
0x39B0	0x00000000 ;_alcohol_bmp+6512
0x39B4	0x00000000 ;_alcohol_bmp+6516
0x39B8	0x00000000 ;_alcohol_bmp+6520
0x39BC	0x00000000 ;_alcohol_bmp+6524
0x39C0	0x00000000 ;_alcohol_bmp+6528
0x39C4	0x00000000 ;_alcohol_bmp+6532
0x39C8	0x00000000 ;_alcohol_bmp+6536
0x39CC	0x00000000 ;_alcohol_bmp+6540
0x39D0	0x00000000 ;_alcohol_bmp+6544
0x39D4	0x00000000 ;_alcohol_bmp+6548
0x39D8	0x00000000 ;_alcohol_bmp+6552
0x39DC	0x00000000 ;_alcohol_bmp+6556
0x39E0	0x00000000 ;_alcohol_bmp+6560
0x39E4	0x00000000 ;_alcohol_bmp+6564
0x39E8	0x00000000 ;_alcohol_bmp+6568
0x39EC	0x00000000 ;_alcohol_bmp+6572
0x39F0	0x00000000 ;_alcohol_bmp+6576
0x39F4	0xFFFF0000 ;_alcohol_bmp+6580
0x39F8	0x00000000 ;_alcohol_bmp+6584
0x39FC	0x00000000 ;_alcohol_bmp+6588
0x3A00	0x00000000 ;_alcohol_bmp+6592
0x3A04	0x00000000 ;_alcohol_bmp+6596
0x3A08	0x00000000 ;_alcohol_bmp+6600
0x3A0C	0x00000000 ;_alcohol_bmp+6604
0x3A10	0x00000000 ;_alcohol_bmp+6608
0x3A14	0x00000000 ;_alcohol_bmp+6612
0x3A18	0x6B4D0000 ;_alcohol_bmp+6616
0x3A1C	0xA534FFFF ;_alcohol_bmp+6620
0x3A20	0x08413186 ;_alcohol_bmp+6624
0x3A24	0x29450841 ;_alcohol_bmp+6628
0x3A28	0xFFFF9CF3 ;_alcohol_bmp+6632
0x3A2C	0x00007BCF ;_alcohol_bmp+6636
0x3A30	0x00000000 ;_alcohol_bmp+6640
0x3A34	0x00000000 ;_alcohol_bmp+6644
0x3A38	0x00000000 ;_alcohol_bmp+6648
0x3A3C	0x00000000 ;_alcohol_bmp+6652
0x3A40	0x00000000 ;_alcohol_bmp+6656
0x3A44	0x00000000 ;_alcohol_bmp+6660
0x3A48	0x00000000 ;_alcohol_bmp+6664
0x3A4C	0x00000000 ;_alcohol_bmp+6668
0x3A50	0x00000000 ;_alcohol_bmp+6672
0x3A54	0x0000FFFF ;_alcohol_bmp+6676
0x3A58	0x00000000 ;_alcohol_bmp+6680
0x3A5C	0x00000000 ;_alcohol_bmp+6684
0x3A60	0x00000000 ;_alcohol_bmp+6688
0x3A64	0x00000000 ;_alcohol_bmp+6692
0x3A68	0x00000000 ;_alcohol_bmp+6696
0x3A6C	0x00000000 ;_alcohol_bmp+6700
0x3A70	0x00000000 ;_alcohol_bmp+6704
0x3A74	0x00000000 ;_alcohol_bmp+6708
0x3A78	0x00000000 ;_alcohol_bmp+6712
0x3A7C	0x00000000 ;_alcohol_bmp+6716
0x3A80	0x00000000 ;_alcohol_bmp+6720
0x3A84	0x00000000 ;_alcohol_bmp+6724
0x3A88	0x00000000 ;_alcohol_bmp+6728
0x3A8C	0x00000000 ;_alcohol_bmp+6732
0x3A90	0x00000000 ;_alcohol_bmp+6736
0x3A94	0x00000000 ;_alcohol_bmp+6740
0x3A98	0x00000000 ;_alcohol_bmp+6744
0x3A9C	0x00000000 ;_alcohol_bmp+6748
0x3AA0	0x00000000 ;_alcohol_bmp+6752
0x3AA4	0x00000000 ;_alcohol_bmp+6756
0x3AA8	0x00000000 ;_alcohol_bmp+6760
0x3AAC	0x00000000 ;_alcohol_bmp+6764
0x3AB0	0x00000000 ;_alcohol_bmp+6768
0x3AB4	0xFFFF0000 ;_alcohol_bmp+6772
0x3AB8	0x00000000 ;_alcohol_bmp+6776
0x3ABC	0x00000000 ;_alcohol_bmp+6780
0x3AC0	0x00000000 ;_alcohol_bmp+6784
0x3AC4	0x00000000 ;_alcohol_bmp+6788
0x3AC8	0x00000000 ;_alcohol_bmp+6792
0x3ACC	0x00000000 ;_alcohol_bmp+6796
0x3AD0	0x00000000 ;_alcohol_bmp+6800
0x3AD4	0x00000000 ;_alcohol_bmp+6804
0x3AD8	0xFFFF3186 ;_alcohol_bmp+6808
0x3ADC	0x000094B2 ;_alcohol_bmp+6812
0x3AE0	0x00000000 ;_alcohol_bmp+6816
0x3AE4	0x00000000 ;_alcohol_bmp+6820
0x3AE8	0x7BCF0000 ;_alcohol_bmp+6824
0x3AEC	0x39C7FFFF ;_alcohol_bmp+6828
0x3AF0	0x00000000 ;_alcohol_bmp+6832
0x3AF4	0x00000000 ;_alcohol_bmp+6836
0x3AF8	0x00000000 ;_alcohol_bmp+6840
0x3AFC	0x00000000 ;_alcohol_bmp+6844
0x3B00	0x00000000 ;_alcohol_bmp+6848
0x3B04	0x00000000 ;_alcohol_bmp+6852
0x3B08	0x00000000 ;_alcohol_bmp+6856
0x3B0C	0x00000000 ;_alcohol_bmp+6860
0x3B10	0x00000000 ;_alcohol_bmp+6864
0x3B14	0x0000FFFF ;_alcohol_bmp+6868
0x3B18	0x00000000 ;_alcohol_bmp+6872
0x3B1C	0x00000000 ;_alcohol_bmp+6876
0x3B20	0x00000000 ;_alcohol_bmp+6880
0x3B24	0x00000000 ;_alcohol_bmp+6884
0x3B28	0x00000000 ;_alcohol_bmp+6888
0x3B2C	0x00000000 ;_alcohol_bmp+6892
0x3B30	0x00000000 ;_alcohol_bmp+6896
0x3B34	0x00000000 ;_alcohol_bmp+6900
0x3B38	0x00000000 ;_alcohol_bmp+6904
0x3B3C	0x00000000 ;_alcohol_bmp+6908
0x3B40	0x00000000 ;_alcohol_bmp+6912
0x3B44	0x00000000 ;_alcohol_bmp+6916
0x3B48	0x00000000 ;_alcohol_bmp+6920
0x3B4C	0x00000000 ;_alcohol_bmp+6924
0x3B50	0x00000000 ;_alcohol_bmp+6928
0x3B54	0x00000000 ;_alcohol_bmp+6932
0x3B58	0x00000000 ;_alcohol_bmp+6936
0x3B5C	0x00000000 ;_alcohol_bmp+6940
0x3B60	0x00000000 ;_alcohol_bmp+6944
0x3B64	0x00000000 ;_alcohol_bmp+6948
0x3B68	0x00000000 ;_alcohol_bmp+6952
0x3B6C	0x00000000 ;_alcohol_bmp+6956
0x3B70	0x00000000 ;_alcohol_bmp+6960
0x3B74	0xFFFF0000 ;_alcohol_bmp+6964
0x3B78	0x00000000 ;_alcohol_bmp+6968
0x3B7C	0x00000000 ;_alcohol_bmp+6972
0x3B80	0x00000000 ;_alcohol_bmp+6976
0x3B84	0x00000000 ;_alcohol_bmp+6980
0x3B88	0x00000000 ;_alcohol_bmp+6984
0x3B8C	0x00000000 ;_alcohol_bmp+6988
0x3B90	0x21040000 ;_alcohol_bmp+6992
0x3B94	0xC63894B2 ;_alcohol_bmp+6996
0x3B98	0xD6BAF7BE ;_alcohol_bmp+7000
0x3B9C	0x00000841 ;_alcohol_bmp+7004
0x3BA0	0x00000000 ;_alcohol_bmp+7008
0x3BA4	0x00000000 ;_alcohol_bmp+7012
0x3BA8	0x00000000 ;_alcohol_bmp+7016
0x3BAC	0xB5B6CE79 ;_alcohol_bmp+7020
0x3BB0	0x00000000 ;_alcohol_bmp+7024
0x3BB4	0x00000000 ;_alcohol_bmp+7028
0x3BB8	0x00000000 ;_alcohol_bmp+7032
0x3BBC	0x00000000 ;_alcohol_bmp+7036
0x3BC0	0x00000000 ;_alcohol_bmp+7040
0x3BC4	0x00000000 ;_alcohol_bmp+7044
0x3BC8	0x00000000 ;_alcohol_bmp+7048
0x3BCC	0x00000000 ;_alcohol_bmp+7052
0x3BD0	0x00000000 ;_alcohol_bmp+7056
0x3BD4	0x0000FFFF ;_alcohol_bmp+7060
0x3BD8	0x00000000 ;_alcohol_bmp+7064
0x3BDC	0x00000000 ;_alcohol_bmp+7068
0x3BE0	0x00000000 ;_alcohol_bmp+7072
0x3BE4	0x00000000 ;_alcohol_bmp+7076
0x3BE8	0x00000000 ;_alcohol_bmp+7080
0x3BEC	0x00000000 ;_alcohol_bmp+7084
0x3BF0	0x00000000 ;_alcohol_bmp+7088
0x3BF4	0x00000000 ;_alcohol_bmp+7092
0x3BF8	0x00000000 ;_alcohol_bmp+7096
0x3BFC	0x00000000 ;_alcohol_bmp+7100
0x3C00	0x00000000 ;_alcohol_bmp+7104
0x3C04	0x00000000 ;_alcohol_bmp+7108
0x3C08	0x00000000 ;_alcohol_bmp+7112
0x3C0C	0x00000000 ;_alcohol_bmp+7116
0x3C10	0x00000000 ;_alcohol_bmp+7120
0x3C14	0x00000000 ;_alcohol_bmp+7124
0x3C18	0x00000000 ;_alcohol_bmp+7128
0x3C1C	0x00000000 ;_alcohol_bmp+7132
0x3C20	0x00000000 ;_alcohol_bmp+7136
0x3C24	0x00000000 ;_alcohol_bmp+7140
0x3C28	0x00000000 ;_alcohol_bmp+7144
0x3C2C	0x00000000 ;_alcohol_bmp+7148
0x3C30	0x00000000 ;_alcohol_bmp+7152
0x3C34	0xFFFF0000 ;_alcohol_bmp+7156
0x3C38	0x00000000 ;_alcohol_bmp+7160
0x3C3C	0x00000000 ;_alcohol_bmp+7164
0x3C40	0x00000000 ;_alcohol_bmp+7168
0x3C44	0x00000000 ;_alcohol_bmp+7172
0x3C48	0x00000000 ;_alcohol_bmp+7176
0x3C4C	0x00000000 ;_alcohol_bmp+7180
0x3C50	0xE73C3186 ;_alcohol_bmp+7184
0x3C54	0xA534DEFB ;_alcohol_bmp+7188
0x3C58	0x528AAD75 ;_alcohol_bmp+7192
0x3C5C	0x00000000 ;_alcohol_bmp+7196
0x3C60	0x00000000 ;_alcohol_bmp+7200
0x3C64	0x00000000 ;_alcohol_bmp+7204
0x3C68	0x00000000 ;_alcohol_bmp+7208
0x3C6C	0xFFFF7BCF ;_alcohol_bmp+7212
0x3C70	0x0841630C ;_alcohol_bmp+7216
0x3C74	0x00000000 ;_alcohol_bmp+7220
0x3C78	0x00000000 ;_alcohol_bmp+7224
0x3C7C	0x00000000 ;_alcohol_bmp+7228
0x3C80	0x00000000 ;_alcohol_bmp+7232
0x3C84	0x00000000 ;_alcohol_bmp+7236
0x3C88	0x00000000 ;_alcohol_bmp+7240
0x3C8C	0x00000000 ;_alcohol_bmp+7244
0x3C90	0x00000000 ;_alcohol_bmp+7248
0x3C94	0x0000FFFF ;_alcohol_bmp+7252
0x3C98	0x00000000 ;_alcohol_bmp+7256
0x3C9C	0x00000000 ;_alcohol_bmp+7260
0x3CA0	0x00000000 ;_alcohol_bmp+7264
0x3CA4	0x00000000 ;_alcohol_bmp+7268
0x3CA8	0x00000000 ;_alcohol_bmp+7272
0x3CAC	0x00000000 ;_alcohol_bmp+7276
0x3CB0	0x00000000 ;_alcohol_bmp+7280
0x3CB4	0x00000000 ;_alcohol_bmp+7284
0x3CB8	0x00000000 ;_alcohol_bmp+7288
0x3CBC	0x00000000 ;_alcohol_bmp+7292
0x3CC0	0x00000000 ;_alcohol_bmp+7296
0x3CC4	0x00000000 ;_alcohol_bmp+7300
0x3CC8	0x00000000 ;_alcohol_bmp+7304
0x3CCC	0x00000000 ;_alcohol_bmp+7308
0x3CD0	0x00000000 ;_alcohol_bmp+7312
0x3CD4	0x00000000 ;_alcohol_bmp+7316
0x3CD8	0x00000000 ;_alcohol_bmp+7320
0x3CDC	0x00000000 ;_alcohol_bmp+7324
0x3CE0	0x00000000 ;_alcohol_bmp+7328
0x3CE4	0x00000000 ;_alcohol_bmp+7332
0x3CE8	0x00000000 ;_alcohol_bmp+7336
0x3CEC	0x00000000 ;_alcohol_bmp+7340
0x3CF0	0x00000000 ;_alcohol_bmp+7344
0x3CF4	0xFFFF0000 ;_alcohol_bmp+7348
0x3CF8	0x00000000 ;_alcohol_bmp+7352
0x3CFC	0x00000000 ;_alcohol_bmp+7356
0x3D00	0x00000000 ;_alcohol_bmp+7360
0x3D04	0x00000000 ;_alcohol_bmp+7364
0x3D08	0x00000000 ;_alcohol_bmp+7368
0x3D0C	0x08410000 ;_alcohol_bmp+7372
0x3D10	0xB5B6CE79 ;_alcohol_bmp+7376
0x3D14	0x00000841 ;_alcohol_bmp+7380
0x3D18	0x00000000 ;_alcohol_bmp+7384
0x3D1C	0x00000000 ;_alcohol_bmp+7388
0x3D20	0x00000000 ;_alcohol_bmp+7392
0x3D24	0x00000000 ;_alcohol_bmp+7396
0x3D28	0x00000000 ;_alcohol_bmp+7400
0x3D2C	0xCE793186 ;_alcohol_bmp+7404
0x3D30	0xCE79FFFF ;_alcohol_bmp+7408
0x3D34	0x00002104 ;_alcohol_bmp+7412
0x3D38	0x00000000 ;_alcohol_bmp+7416
0x3D3C	0x00000000 ;_alcohol_bmp+7420
0x3D40	0x00000000 ;_alcohol_bmp+7424
0x3D44	0x00000000 ;_alcohol_bmp+7428
0x3D48	0x00000000 ;_alcohol_bmp+7432
0x3D4C	0x00000000 ;_alcohol_bmp+7436
0x3D50	0x00000000 ;_alcohol_bmp+7440
0x3D54	0x0000FFFF ;_alcohol_bmp+7444
0x3D58	0x00000000 ;_alcohol_bmp+7448
0x3D5C	0x00000000 ;_alcohol_bmp+7452
0x3D60	0x00000000 ;_alcohol_bmp+7456
0x3D64	0x00000000 ;_alcohol_bmp+7460
0x3D68	0x00000000 ;_alcohol_bmp+7464
0x3D6C	0x00000000 ;_alcohol_bmp+7468
0x3D70	0x00000000 ;_alcohol_bmp+7472
0x3D74	0x00000000 ;_alcohol_bmp+7476
0x3D78	0x00000000 ;_alcohol_bmp+7480
0x3D7C	0x00000000 ;_alcohol_bmp+7484
0x3D80	0x00000000 ;_alcohol_bmp+7488
0x3D84	0x00000000 ;_alcohol_bmp+7492
0x3D88	0x00000000 ;_alcohol_bmp+7496
0x3D8C	0x00000000 ;_alcohol_bmp+7500
0x3D90	0x00000000 ;_alcohol_bmp+7504
0x3D94	0x00000000 ;_alcohol_bmp+7508
0x3D98	0x00000000 ;_alcohol_bmp+7512
0x3D9C	0x00000000 ;_alcohol_bmp+7516
0x3DA0	0x00000000 ;_alcohol_bmp+7520
0x3DA4	0x00000000 ;_alcohol_bmp+7524
0x3DA8	0x00000000 ;_alcohol_bmp+7528
0x3DAC	0x00000000 ;_alcohol_bmp+7532
0x3DB0	0x00000000 ;_alcohol_bmp+7536
0x3DB4	0xFFFF0000 ;_alcohol_bmp+7540
0x3DB8	0x00000000 ;_alcohol_bmp+7544
0x3DBC	0x00000000 ;_alcohol_bmp+7548
0x3DC0	0x00000000 ;_alcohol_bmp+7552
0x3DC4	0x00000000 ;_alcohol_bmp+7556
0x3DC8	0x00000000 ;_alcohol_bmp+7560
0x3DCC	0x39C70000 ;_alcohol_bmp+7564
0x3DD0	0x3186FFFF ;_alcohol_bmp+7568
0x3DD4	0x00000000 ;_alcohol_bmp+7572
0x3DD8	0x00000000 ;_alcohol_bmp+7576
0x3DDC	0x00000000 ;_alcohol_bmp+7580
0x3DE0	0x00000000 ;_alcohol_bmp+7584
0x3DE4	0x00000000 ;_alcohol_bmp+7588
0x3DE8	0x00000000 ;_alcohol_bmp+7592
0x3DEC	0x08410000 ;_alcohol_bmp+7596
0x3DF0	0xE73C3186 ;_alcohol_bmp+7600
0x3DF4	0x0000BDF7 ;_alcohol_bmp+7604
0x3DF8	0x00000000 ;_alcohol_bmp+7608
0x3DFC	0x00000000 ;_alcohol_bmp+7612
0x3E00	0x00000000 ;_alcohol_bmp+7616
0x3E04	0x00000000 ;_alcohol_bmp+7620
0x3E08	0x00000000 ;_alcohol_bmp+7624
0x3E0C	0x00000000 ;_alcohol_bmp+7628
0x3E10	0x00000000 ;_alcohol_bmp+7632
0x3E14	0x0000FFFF ;_alcohol_bmp+7636
0x3E18	0x00000000 ;_alcohol_bmp+7640
0x3E1C	0x00000000 ;_alcohol_bmp+7644
0x3E20	0x00000000 ;_alcohol_bmp+7648
0x3E24	0x00000000 ;_alcohol_bmp+7652
0x3E28	0x00000000 ;_alcohol_bmp+7656
0x3E2C	0x00000000 ;_alcohol_bmp+7660
0x3E30	0x00000000 ;_alcohol_bmp+7664
0x3E34	0x00000000 ;_alcohol_bmp+7668
0x3E38	0x00000000 ;_alcohol_bmp+7672
0x3E3C	0x00000000 ;_alcohol_bmp+7676
0x3E40	0x00000000 ;_alcohol_bmp+7680
0x3E44	0x00000000 ;_alcohol_bmp+7684
0x3E48	0x00000000 ;_alcohol_bmp+7688
0x3E4C	0x00000000 ;_alcohol_bmp+7692
0x3E50	0x00000000 ;_alcohol_bmp+7696
0x3E54	0x00000000 ;_alcohol_bmp+7700
0x3E58	0x00000000 ;_alcohol_bmp+7704
0x3E5C	0x00000000 ;_alcohol_bmp+7708
0x3E60	0x00000000 ;_alcohol_bmp+7712
0x3E64	0x00000000 ;_alcohol_bmp+7716
0x3E68	0x00000000 ;_alcohol_bmp+7720
0x3E6C	0x00000000 ;_alcohol_bmp+7724
0x3E70	0x00000000 ;_alcohol_bmp+7728
0x3E74	0xFFFF0000 ;_alcohol_bmp+7732
0x3E78	0x00000000 ;_alcohol_bmp+7736
0x3E7C	0x00000000 ;_alcohol_bmp+7740
0x3E80	0x00000000 ;_alcohol_bmp+7744
0x3E84	0x00000000 ;_alcohol_bmp+7748
0x3E88	0x00000000 ;_alcohol_bmp+7752
0x3E8C	0x528A0000 ;_alcohol_bmp+7756
0x3E90	0x18C3E73C ;_alcohol_bmp+7760
0x3E94	0x00000000 ;_alcohol_bmp+7764
0x3E98	0x00000000 ;_alcohol_bmp+7768
0x3E9C	0x00000000 ;_alcohol_bmp+7772
0x3EA0	0x00000000 ;_alcohol_bmp+7776
0x3EA4	0x00000000 ;_alcohol_bmp+7780
0x3EA8	0x00000000 ;_alcohol_bmp+7784
0x3EAC	0x00000000 ;_alcohol_bmp+7788
0x3EB0	0x630C0000 ;_alcohol_bmp+7792
0x3EB4	0x2945FFFF ;_alcohol_bmp+7796
0x3EB8	0x00000000 ;_alcohol_bmp+7800
0x3EBC	0x00000000 ;_alcohol_bmp+7804
0x3EC0	0x00000000 ;_alcohol_bmp+7808
0x3EC4	0x00000000 ;_alcohol_bmp+7812
0x3EC8	0x00000000 ;_alcohol_bmp+7816
0x3ECC	0x00000000 ;_alcohol_bmp+7820
0x3ED0	0x00000000 ;_alcohol_bmp+7824
0x3ED4	0x0000FFFF ;_alcohol_bmp+7828
0x3ED8	0x00000000 ;_alcohol_bmp+7832
0x3EDC	0x00000000 ;_alcohol_bmp+7836
0x3EE0	0x00000000 ;_alcohol_bmp+7840
0x3EE4	0x00000000 ;_alcohol_bmp+7844
0x3EE8	0x00000000 ;_alcohol_bmp+7848
0x3EEC	0x00000000 ;_alcohol_bmp+7852
0x3EF0	0x00000000 ;_alcohol_bmp+7856
0x3EF4	0x00000000 ;_alcohol_bmp+7860
0x3EF8	0x00000000 ;_alcohol_bmp+7864
0x3EFC	0x00000000 ;_alcohol_bmp+7868
0x3F00	0x00000000 ;_alcohol_bmp+7872
0x3F04	0x00000000 ;_alcohol_bmp+7876
0x3F08	0x00000000 ;_alcohol_bmp+7880
0x3F0C	0x00000000 ;_alcohol_bmp+7884
0x3F10	0x00000000 ;_alcohol_bmp+7888
0x3F14	0x00000000 ;_alcohol_bmp+7892
0x3F18	0x00000000 ;_alcohol_bmp+7896
0x3F1C	0x00000000 ;_alcohol_bmp+7900
0x3F20	0x00000000 ;_alcohol_bmp+7904
0x3F24	0x00000000 ;_alcohol_bmp+7908
0x3F28	0x00000000 ;_alcohol_bmp+7912
0x3F2C	0x00000000 ;_alcohol_bmp+7916
0x3F30	0x00000000 ;_alcohol_bmp+7920
0x3F34	0xFFFF0000 ;_alcohol_bmp+7924
0x3F38	0x00000000 ;_alcohol_bmp+7928
0x3F3C	0x00000000 ;_alcohol_bmp+7932
0x3F40	0x00000000 ;_alcohol_bmp+7936
0x3F44	0x00000000 ;_alcohol_bmp+7940
0x3F48	0x00000000 ;_alcohol_bmp+7944
0x3F4C	0x528A0000 ;_alcohol_bmp+7948
0x3F50	0x18C3E73C ;_alcohol_bmp+7952
0x3F54	0x00000000 ;_alcohol_bmp+7956
0x3F58	0x00000000 ;_alcohol_bmp+7960
0x3F5C	0x00000000 ;_alcohol_bmp+7964
0x3F60	0x00000000 ;_alcohol_bmp+7968
0x3F64	0x00000000 ;_alcohol_bmp+7972
0x3F68	0x00000000 ;_alcohol_bmp+7976
0x3F6C	0x00000000 ;_alcohol_bmp+7980
0x3F70	0x630C0000 ;_alcohol_bmp+7984
0x3F74	0x2945FFFF ;_alcohol_bmp+7988
0x3F78	0x00000000 ;_alcohol_bmp+7992
0x3F7C	0x00000000 ;_alcohol_bmp+7996
0x3F80	0x00000000 ;_alcohol_bmp+8000
0x3F84	0x00000000 ;_alcohol_bmp+8004
0x3F88	0x00000000 ;_alcohol_bmp+8008
0x3F8C	0x00000000 ;_alcohol_bmp+8012
0x3F90	0x00000000 ;_alcohol_bmp+8016
0x3F94	0x0000FFFF ;_alcohol_bmp+8020
0x3F98	0x00000000 ;_alcohol_bmp+8024
0x3F9C	0x00000000 ;_alcohol_bmp+8028
0x3FA0	0x00000000 ;_alcohol_bmp+8032
0x3FA4	0x00000000 ;_alcohol_bmp+8036
0x3FA8	0x00000000 ;_alcohol_bmp+8040
0x3FAC	0x00000000 ;_alcohol_bmp+8044
0x3FB0	0x00000000 ;_alcohol_bmp+8048
0x3FB4	0x00000000 ;_alcohol_bmp+8052
0x3FB8	0x00000000 ;_alcohol_bmp+8056
0x3FBC	0x00000000 ;_alcohol_bmp+8060
0x3FC0	0x00000000 ;_alcohol_bmp+8064
0x3FC4	0x00000000 ;_alcohol_bmp+8068
0x3FC8	0x00000000 ;_alcohol_bmp+8072
0x3FCC	0x00000000 ;_alcohol_bmp+8076
0x3FD0	0x00000000 ;_alcohol_bmp+8080
0x3FD4	0x00000000 ;_alcohol_bmp+8084
0x3FD8	0x00000000 ;_alcohol_bmp+8088
0x3FDC	0x00000000 ;_alcohol_bmp+8092
0x3FE0	0x00000000 ;_alcohol_bmp+8096
0x3FE4	0x00000000 ;_alcohol_bmp+8100
0x3FE8	0x00000000 ;_alcohol_bmp+8104
0x3FEC	0x00000000 ;_alcohol_bmp+8108
0x3FF0	0x00000000 ;_alcohol_bmp+8112
0x3FF4	0xFFFF0000 ;_alcohol_bmp+8116
0x3FF8	0x00000000 ;_alcohol_bmp+8120
0x3FFC	0x00000000 ;_alcohol_bmp+8124
0x4000	0x00000000 ;_alcohol_bmp+8128
0x4004	0x00000000 ;_alcohol_bmp+8132
0x4008	0x00000000 ;_alcohol_bmp+8136
0x400C	0x4A490000 ;_alcohol_bmp+8140
0x4010	0x1082E73C ;_alcohol_bmp+8144
0x4014	0x08410000 ;_alcohol_bmp+8148
0x4018	0x08410841 ;_alcohol_bmp+8152
0x401C	0x08410841 ;_alcohol_bmp+8156
0x4020	0x08410841 ;_alcohol_bmp+8160
0x4024	0x08410841 ;_alcohol_bmp+8164
0x4028	0x08410841 ;_alcohol_bmp+8168
0x402C	0x08410841 ;_alcohol_bmp+8172
0x4030	0xDEFB3186 ;_alcohol_bmp+8176
0x4034	0x0841CE79 ;_alcohol_bmp+8180
0x4038	0x00000000 ;_alcohol_bmp+8184
0x403C	0x00000000 ;_alcohol_bmp+8188
0x4040	0x00000000 ;_alcohol_bmp+8192
0x4044	0x00000000 ;_alcohol_bmp+8196
0x4048	0x00000000 ;_alcohol_bmp+8200
0x404C	0x00000000 ;_alcohol_bmp+8204
0x4050	0x00000000 ;_alcohol_bmp+8208
0x4054	0x0000FFFF ;_alcohol_bmp+8212
0x4058	0x00000000 ;_alcohol_bmp+8216
0x405C	0x00000000 ;_alcohol_bmp+8220
0x4060	0x00000000 ;_alcohol_bmp+8224
0x4064	0x00000000 ;_alcohol_bmp+8228
0x4068	0x00000000 ;_alcohol_bmp+8232
0x406C	0x00000000 ;_alcohol_bmp+8236
0x4070	0x00000000 ;_alcohol_bmp+8240
0x4074	0x00000000 ;_alcohol_bmp+8244
0x4078	0x00000000 ;_alcohol_bmp+8248
0x407C	0x00000000 ;_alcohol_bmp+8252
0x4080	0x00000000 ;_alcohol_bmp+8256
0x4084	0x00000000 ;_alcohol_bmp+8260
0x4088	0x00000000 ;_alcohol_bmp+8264
0x408C	0x00000000 ;_alcohol_bmp+8268
0x4090	0x00000000 ;_alcohol_bmp+8272
0x4094	0x00000000 ;_alcohol_bmp+8276
0x4098	0x00000000 ;_alcohol_bmp+8280
0x409C	0x00000000 ;_alcohol_bmp+8284
0x40A0	0x00000000 ;_alcohol_bmp+8288
0x40A4	0x00000000 ;_alcohol_bmp+8292
0x40A8	0x00000000 ;_alcohol_bmp+8296
0x40AC	0x00000000 ;_alcohol_bmp+8300
0x40B0	0x00000000 ;_alcohol_bmp+8304
0x40B4	0xFFFF0000 ;_alcohol_bmp+8308
0x40B8	0x00000000 ;_alcohol_bmp+8312
0x40BC	0x00000000 ;_alcohol_bmp+8316
0x40C0	0x00000000 ;_alcohol_bmp+8320
0x40C4	0x00000000 ;_alcohol_bmp+8324
0x40C8	0x00000000 ;_alcohol_bmp+8328
0x40CC	0x4A490000 ;_alcohol_bmp+8332
0x40D0	0x2945DEFB ;_alcohol_bmp+8336
0x40D4	0xDEFBAD75 ;_alcohol_bmp+8340
0x40D8	0xDEFBDEFB ;_alcohol_bmp+8344
0x40DC	0xDEFBDEFB ;_alcohol_bmp+8348
0x40E0	0xDEFBDEFB ;_alcohol_bmp+8352
0x40E4	0xDEFBDEFB ;_alcohol_bmp+8356
0x40E8	0xDEFBDEFB ;_alcohol_bmp+8360
0x40EC	0xE73CDEFB ;_alcohol_bmp+8364
0x40F0	0xEF7DF7BE ;_alcohol_bmp+8368
0x40F4	0x00002945 ;_alcohol_bmp+8372
0x40F8	0x00000000 ;_alcohol_bmp+8376
0x40FC	0x00000000 ;_alcohol_bmp+8380
0x4100	0x00000000 ;_alcohol_bmp+8384
0x4104	0x00000000 ;_alcohol_bmp+8388
0x4108	0x00000000 ;_alcohol_bmp+8392
0x410C	0x00000000 ;_alcohol_bmp+8396
0x4110	0x00000000 ;_alcohol_bmp+8400
0x4114	0x0000FFFF ;_alcohol_bmp+8404
0x4118	0x00000000 ;_alcohol_bmp+8408
0x411C	0x00000000 ;_alcohol_bmp+8412
0x4120	0x00000000 ;_alcohol_bmp+8416
0x4124	0x00000000 ;_alcohol_bmp+8420
0x4128	0x00000000 ;_alcohol_bmp+8424
0x412C	0x00000000 ;_alcohol_bmp+8428
0x4130	0x00000000 ;_alcohol_bmp+8432
0x4134	0x00000000 ;_alcohol_bmp+8436
0x4138	0x00000000 ;_alcohol_bmp+8440
0x413C	0x00000000 ;_alcohol_bmp+8444
0x4140	0x00000000 ;_alcohol_bmp+8448
0x4144	0x00000000 ;_alcohol_bmp+8452
0x4148	0x00000000 ;_alcohol_bmp+8456
0x414C	0x00000000 ;_alcohol_bmp+8460
0x4150	0x00000000 ;_alcohol_bmp+8464
0x4154	0x00000000 ;_alcohol_bmp+8468
0x4158	0x00000000 ;_alcohol_bmp+8472
0x415C	0x00000000 ;_alcohol_bmp+8476
0x4160	0x00000000 ;_alcohol_bmp+8480
0x4164	0x00000000 ;_alcohol_bmp+8484
0x4168	0x00000000 ;_alcohol_bmp+8488
0x416C	0x00000000 ;_alcohol_bmp+8492
0x4170	0x00000000 ;_alcohol_bmp+8496
0x4174	0xFFFF0000 ;_alcohol_bmp+8500
0x4178	0x00000000 ;_alcohol_bmp+8504
0x417C	0x00000000 ;_alcohol_bmp+8508
0x4180	0x00000000 ;_alcohol_bmp+8512
0x4184	0x00000000 ;_alcohol_bmp+8516
0x4188	0x00000000 ;_alcohol_bmp+8520
0x418C	0x4A490000 ;_alcohol_bmp+8524
0x4190	0x39C7DEFB ;_alcohol_bmp+8528
0x4194	0xD6BAF7BE ;_alcohol_bmp+8532
0x4198	0x94B28C71 ;_alcohol_bmp+8536
0x419C	0x94B294B2 ;_alcohol_bmp+8540
0x41A0	0x94B294B2 ;_alcohol_bmp+8544
0x41A4	0x94B294B2 ;_alcohol_bmp+8548
0x41A8	0x94B294B2 ;_alcohol_bmp+8552
0x41AC	0x9CF38C71 ;_alcohol_bmp+8556
0x41B0	0xDEFBF7BE ;_alcohol_bmp+8560
0x41B4	0x5ACB5ACB ;_alcohol_bmp+8564
0x41B8	0x000039C7 ;_alcohol_bmp+8568
0x41BC	0x00000000 ;_alcohol_bmp+8572
0x41C0	0x00000000 ;_alcohol_bmp+8576
0x41C4	0x00000000 ;_alcohol_bmp+8580
0x41C8	0x00000000 ;_alcohol_bmp+8584
0x41CC	0x00000000 ;_alcohol_bmp+8588
0x41D0	0x00000000 ;_alcohol_bmp+8592
0x41D4	0x0000FFFF ;_alcohol_bmp+8596
0x41D8	0x00000000 ;_alcohol_bmp+8600
0x41DC	0x00000000 ;_alcohol_bmp+8604
0x41E0	0x00000000 ;_alcohol_bmp+8608
0x41E4	0x00000000 ;_alcohol_bmp+8612
0x41E8	0x00000000 ;_alcohol_bmp+8616
0x41EC	0x00000000 ;_alcohol_bmp+8620
0x41F0	0x00000000 ;_alcohol_bmp+8624
0x41F4	0x00000000 ;_alcohol_bmp+8628
0x41F8	0x00000000 ;_alcohol_bmp+8632
0x41FC	0x00000000 ;_alcohol_bmp+8636
0x4200	0x00000000 ;_alcohol_bmp+8640
0x4204	0x00000000 ;_alcohol_bmp+8644
0x4208	0x00000000 ;_alcohol_bmp+8648
0x420C	0x00000000 ;_alcohol_bmp+8652
0x4210	0x00000000 ;_alcohol_bmp+8656
0x4214	0x00000000 ;_alcohol_bmp+8660
0x4218	0x00000000 ;_alcohol_bmp+8664
0x421C	0x00000000 ;_alcohol_bmp+8668
0x4220	0x00000000 ;_alcohol_bmp+8672
0x4224	0x00000000 ;_alcohol_bmp+8676
0x4228	0x00000000 ;_alcohol_bmp+8680
0x422C	0x00000000 ;_alcohol_bmp+8684
0x4230	0x00000000 ;_alcohol_bmp+8688
0x4234	0xFFFF0000 ;_alcohol_bmp+8692
0x4238	0x00000000 ;_alcohol_bmp+8696
0x423C	0x00000000 ;_alcohol_bmp+8700
0x4240	0x00000000 ;_alcohol_bmp+8704
0x4244	0x00000000 ;_alcohol_bmp+8708
0x4248	0x00000000 ;_alcohol_bmp+8712
0x424C	0x4A490000 ;_alcohol_bmp+8716
0x4250	0x39C7DEFB ;_alcohol_bmp+8720
0x4254	0x5ACBF7BE ;_alcohol_bmp+8724
0x4258	0x00000000 ;_alcohol_bmp+8728
0x425C	0x00000000 ;_alcohol_bmp+8732
0x4260	0x00000000 ;_alcohol_bmp+8736
0x4264	0x00000000 ;_alcohol_bmp+8740
0x4268	0x00000000 ;_alcohol_bmp+8744
0x426C	0x00000000 ;_alcohol_bmp+8748
0x4270	0xFFFFBDF7 ;_alcohol_bmp+8752
0x4274	0xFFFFFFFF ;_alcohol_bmp+8756
0x4278	0xAD75FFFF ;_alcohol_bmp+8760
0x427C	0x00000841 ;_alcohol_bmp+8764
0x4280	0x00000000 ;_alcohol_bmp+8768
0x4284	0x00000000 ;_alcohol_bmp+8772
0x4288	0x00000000 ;_alcohol_bmp+8776
0x428C	0x00000000 ;_alcohol_bmp+8780
0x4290	0x00000000 ;_alcohol_bmp+8784
0x4294	0x0000FFFF ;_alcohol_bmp+8788
0x4298	0x00000000 ;_alcohol_bmp+8792
0x429C	0x00000000 ;_alcohol_bmp+8796
0x42A0	0x00000000 ;_alcohol_bmp+8800
0x42A4	0x00000000 ;_alcohol_bmp+8804
0x42A8	0x00000000 ;_alcohol_bmp+8808
0x42AC	0x00000000 ;_alcohol_bmp+8812
0x42B0	0x00000000 ;_alcohol_bmp+8816
0x42B4	0x00000000 ;_alcohol_bmp+8820
0x42B8	0x00000000 ;_alcohol_bmp+8824
0x42BC	0x00000000 ;_alcohol_bmp+8828
0x42C0	0x00000000 ;_alcohol_bmp+8832
0x42C4	0x00000000 ;_alcohol_bmp+8836
0x42C8	0x00000000 ;_alcohol_bmp+8840
0x42CC	0x00000000 ;_alcohol_bmp+8844
0x42D0	0x00000000 ;_alcohol_bmp+8848
0x42D4	0x00000000 ;_alcohol_bmp+8852
0x42D8	0x00000000 ;_alcohol_bmp+8856
0x42DC	0x00000000 ;_alcohol_bmp+8860
0x42E0	0x00000000 ;_alcohol_bmp+8864
0x42E4	0x00000000 ;_alcohol_bmp+8868
0x42E8	0x00000000 ;_alcohol_bmp+8872
0x42EC	0x00000000 ;_alcohol_bmp+8876
0x42F0	0x00000000 ;_alcohol_bmp+8880
0x42F4	0xFFFF0000 ;_alcohol_bmp+8884
0x42F8	0x00000000 ;_alcohol_bmp+8888
0x42FC	0x00000000 ;_alcohol_bmp+8892
0x4300	0x00000000 ;_alcohol_bmp+8896
0x4304	0x00000000 ;_alcohol_bmp+8900
0x4308	0x00000000 ;_alcohol_bmp+8904
0x430C	0x4A490000 ;_alcohol_bmp+8908
0x4310	0x39C7DEFB ;_alcohol_bmp+8912
0x4314	0x5ACBF7BE ;_alcohol_bmp+8916
0x4318	0x00000000 ;_alcohol_bmp+8920
0x431C	0x00000000 ;_alcohol_bmp+8924
0x4320	0x00000000 ;_alcohol_bmp+8928
0x4324	0x00000000 ;_alcohol_bmp+8932
0x4328	0x00000000 ;_alcohol_bmp+8936
0x432C	0x00000000 ;_alcohol_bmp+8940
0x4330	0xE73CBDF7 ;_alcohol_bmp+8944
0x4334	0x42084208 ;_alcohol_bmp+8948
0x4338	0xFFFF7BCF ;_alcohol_bmp+8952
0x433C	0x00008430 ;_alcohol_bmp+8956
0x4340	0x00000000 ;_alcohol_bmp+8960
0x4344	0x00000000 ;_alcohol_bmp+8964
0x4348	0x00000000 ;_alcohol_bmp+8968
0x434C	0x00000000 ;_alcohol_bmp+8972
0x4350	0x00000000 ;_alcohol_bmp+8976
0x4354	0x0000FFFF ;_alcohol_bmp+8980
0x4358	0x00000000 ;_alcohol_bmp+8984
0x435C	0x00000000 ;_alcohol_bmp+8988
0x4360	0x00000000 ;_alcohol_bmp+8992
0x4364	0x00000000 ;_alcohol_bmp+8996
0x4368	0x00000000 ;_alcohol_bmp+9000
0x436C	0x00000000 ;_alcohol_bmp+9004
0x4370	0x00000000 ;_alcohol_bmp+9008
0x4374	0x00000000 ;_alcohol_bmp+9012
0x4378	0x00000000 ;_alcohol_bmp+9016
0x437C	0x00000000 ;_alcohol_bmp+9020
0x4380	0x00000000 ;_alcohol_bmp+9024
0x4384	0x00000000 ;_alcohol_bmp+9028
0x4388	0x00000000 ;_alcohol_bmp+9032
0x438C	0x00000000 ;_alcohol_bmp+9036
0x4390	0x00000000 ;_alcohol_bmp+9040
0x4394	0x00000000 ;_alcohol_bmp+9044
0x4398	0x00000000 ;_alcohol_bmp+9048
0x439C	0x00000000 ;_alcohol_bmp+9052
0x43A0	0x00000000 ;_alcohol_bmp+9056
0x43A4	0x00000000 ;_alcohol_bmp+9060
0x43A8	0x00000000 ;_alcohol_bmp+9064
0x43AC	0x00000000 ;_alcohol_bmp+9068
0x43B0	0x00000000 ;_alcohol_bmp+9072
0x43B4	0xFFFF0000 ;_alcohol_bmp+9076
0x43B8	0x00000000 ;_alcohol_bmp+9080
0x43BC	0x00000000 ;_alcohol_bmp+9084
0x43C0	0x00000000 ;_alcohol_bmp+9088
0x43C4	0x00000000 ;_alcohol_bmp+9092
0x43C8	0x00000000 ;_alcohol_bmp+9096
0x43CC	0x4A490000 ;_alcohol_bmp+9100
0x43D0	0x39C7DEFB ;_alcohol_bmp+9104
0x43D4	0xCE79EF7D ;_alcohol_bmp+9108
0x43D8	0x8C718C71 ;_alcohol_bmp+9112
0x43DC	0x8C718430 ;_alcohol_bmp+9116
0x43E0	0x84308C71 ;_alcohol_bmp+9120
0x43E4	0x8C718430 ;_alcohol_bmp+9124
0x43E8	0x84308430 ;_alcohol_bmp+9128
0x43EC	0x94B28C71 ;_alcohol_bmp+9132
0x43F0	0xCE79F7BE ;_alcohol_bmp+9136
0x43F4	0x00000000 ;_alcohol_bmp+9140
0x43F8	0x9CF30000 ;_alcohol_bmp+9144
0x43FC	0x0000CE79 ;_alcohol_bmp+9148
0x4400	0x00000000 ;_alcohol_bmp+9152
0x4404	0x00000000 ;_alcohol_bmp+9156
0x4408	0x00000000 ;_alcohol_bmp+9160
0x440C	0x00000000 ;_alcohol_bmp+9164
0x4410	0x00000000 ;_alcohol_bmp+9168
0x4414	0x0000FFFF ;_alcohol_bmp+9172
0x4418	0x00000000 ;_alcohol_bmp+9176
0x441C	0x00000000 ;_alcohol_bmp+9180
0x4420	0x00000000 ;_alcohol_bmp+9184
0x4424	0x00000000 ;_alcohol_bmp+9188
0x4428	0x00000000 ;_alcohol_bmp+9192
0x442C	0x00000000 ;_alcohol_bmp+9196
0x4430	0x00000000 ;_alcohol_bmp+9200
0x4434	0x00000000 ;_alcohol_bmp+9204
0x4438	0x00000000 ;_alcohol_bmp+9208
0x443C	0x00000000 ;_alcohol_bmp+9212
0x4440	0x00000000 ;_alcohol_bmp+9216
0x4444	0x00000000 ;_alcohol_bmp+9220
0x4448	0x00000000 ;_alcohol_bmp+9224
0x444C	0x00000000 ;_alcohol_bmp+9228
0x4450	0x00000000 ;_alcohol_bmp+9232
0x4454	0x00000000 ;_alcohol_bmp+9236
0x4458	0x00000000 ;_alcohol_bmp+9240
0x445C	0x00000000 ;_alcohol_bmp+9244
0x4460	0x00000000 ;_alcohol_bmp+9248
0x4464	0x00000000 ;_alcohol_bmp+9252
0x4468	0x00000000 ;_alcohol_bmp+9256
0x446C	0x00000000 ;_alcohol_bmp+9260
0x4470	0x00000000 ;_alcohol_bmp+9264
0x4474	0xFFFF0000 ;_alcohol_bmp+9268
0x4478	0x00000000 ;_alcohol_bmp+9272
0x447C	0x00000000 ;_alcohol_bmp+9276
0x4480	0x00000000 ;_alcohol_bmp+9280
0x4484	0x00000000 ;_alcohol_bmp+9284
0x4488	0x00000000 ;_alcohol_bmp+9288
0x448C	0x4A490000 ;_alcohol_bmp+9292
0x4490	0x39C7DEFB ;_alcohol_bmp+9296
0x4494	0xFFFFEF7D ;_alcohol_bmp+9300
0x4498	0xEF7DF7BE ;_alcohol_bmp+9304
0x449C	0xFFFFFFFF ;_alcohol_bmp+9308
0x44A0	0xFFFFEF7D ;_alcohol_bmp+9312
0x44A4	0xE73CFFFF ;_alcohol_bmp+9316
0x44A8	0xFFFFFFFF ;_alcohol_bmp+9320
0x44AC	0xFFFFEF7D ;_alcohol_bmp+9324
0x44B0	0xCE79FFFF ;_alcohol_bmp+9328
0x44B4	0x00000000 ;_alcohol_bmp+9332
0x44B8	0x6B4D0000 ;_alcohol_bmp+9336
0x44BC	0x0000D6BA ;_alcohol_bmp+9340
0x44C0	0x00000000 ;_alcohol_bmp+9344
0x44C4	0x00000000 ;_alcohol_bmp+9348
0x44C8	0x00000000 ;_alcohol_bmp+9352
0x44CC	0x00000000 ;_alcohol_bmp+9356
0x44D0	0x00000000 ;_alcohol_bmp+9360
0x44D4	0x0000FFFF ;_alcohol_bmp+9364
0x44D8	0x00000000 ;_alcohol_bmp+9368
0x44DC	0x00000000 ;_alcohol_bmp+9372
0x44E0	0x00000000 ;_alcohol_bmp+9376
0x44E4	0x00000000 ;_alcohol_bmp+9380
0x44E8	0x00000000 ;_alcohol_bmp+9384
0x44EC	0x00000000 ;_alcohol_bmp+9388
0x44F0	0x00000000 ;_alcohol_bmp+9392
0x44F4	0x00000000 ;_alcohol_bmp+9396
0x44F8	0x00000000 ;_alcohol_bmp+9400
0x44FC	0x00000000 ;_alcohol_bmp+9404
0x4500	0x00000000 ;_alcohol_bmp+9408
0x4504	0x00000000 ;_alcohol_bmp+9412
0x4508	0x00000000 ;_alcohol_bmp+9416
0x450C	0x00000000 ;_alcohol_bmp+9420
0x4510	0x00000000 ;_alcohol_bmp+9424
0x4514	0x00000000 ;_alcohol_bmp+9428
0x4518	0x00000000 ;_alcohol_bmp+9432
0x451C	0x00000000 ;_alcohol_bmp+9436
0x4520	0x00000000 ;_alcohol_bmp+9440
0x4524	0x00000000 ;_alcohol_bmp+9444
0x4528	0x00000000 ;_alcohol_bmp+9448
0x452C	0x00000000 ;_alcohol_bmp+9452
0x4530	0x00000000 ;_alcohol_bmp+9456
0x4534	0xFFFF0000 ;_alcohol_bmp+9460
0x4538	0x00000000 ;_alcohol_bmp+9464
0x453C	0x00000000 ;_alcohol_bmp+9468
0x4540	0x00000000 ;_alcohol_bmp+9472
0x4544	0x00000000 ;_alcohol_bmp+9476
0x4548	0x00000000 ;_alcohol_bmp+9480
0x454C	0x4A490000 ;_alcohol_bmp+9484
0x4550	0x39C7DEFB ;_alcohol_bmp+9488
0x4554	0xFFFFEF7D ;_alcohol_bmp+9492
0x4558	0x39C7630C ;_alcohol_bmp+9496
0x455C	0x9CF3FFFF ;_alcohol_bmp+9500
0x4560	0xEF7D18C3 ;_alcohol_bmp+9504
0x4564	0x18C3BDF7 ;_alcohol_bmp+9508
0x4568	0xFFFFD6BA ;_alcohol_bmp+9512
0x456C	0x6B4D39C7 ;_alcohol_bmp+9516
0x4570	0xCE79FFFF ;_alcohol_bmp+9520
0x4574	0x00000000 ;_alcohol_bmp+9524
0x4578	0x738E0000 ;_alcohol_bmp+9528
0x457C	0x0000D6BA ;_alcohol_bmp+9532
0x4580	0x00000000 ;_alcohol_bmp+9536
0x4584	0x00000000 ;_alcohol_bmp+9540
0x4588	0x00000000 ;_alcohol_bmp+9544
0x458C	0x00000000 ;_alcohol_bmp+9548
0x4590	0x00000000 ;_alcohol_bmp+9552
0x4594	0x0000FFFF ;_alcohol_bmp+9556
0x4598	0x00000000 ;_alcohol_bmp+9560
0x459C	0x00000000 ;_alcohol_bmp+9564
0x45A0	0x00000000 ;_alcohol_bmp+9568
0x45A4	0x00000000 ;_alcohol_bmp+9572
0x45A8	0x00000000 ;_alcohol_bmp+9576
0x45AC	0x00000000 ;_alcohol_bmp+9580
0x45B0	0x00000000 ;_alcohol_bmp+9584
0x45B4	0x00000000 ;_alcohol_bmp+9588
0x45B8	0x00000000 ;_alcohol_bmp+9592
0x45BC	0x00000000 ;_alcohol_bmp+9596
0x45C0	0x00000000 ;_alcohol_bmp+9600
0x45C4	0x00000000 ;_alcohol_bmp+9604
0x45C8	0x00000000 ;_alcohol_bmp+9608
0x45CC	0x00000000 ;_alcohol_bmp+9612
0x45D0	0x00000000 ;_alcohol_bmp+9616
0x45D4	0x00000000 ;_alcohol_bmp+9620
0x45D8	0x00000000 ;_alcohol_bmp+9624
0x45DC	0x00000000 ;_alcohol_bmp+9628
0x45E0	0x00000000 ;_alcohol_bmp+9632
0x45E4	0x00000000 ;_alcohol_bmp+9636
0x45E8	0x00000000 ;_alcohol_bmp+9640
0x45EC	0x00000000 ;_alcohol_bmp+9644
0x45F0	0x00000000 ;_alcohol_bmp+9648
0x45F4	0xFFFF0000 ;_alcohol_bmp+9652
0x45F8	0x00000000 ;_alcohol_bmp+9656
0x45FC	0x00000000 ;_alcohol_bmp+9660
0x4600	0x00000000 ;_alcohol_bmp+9664
0x4604	0x00000000 ;_alcohol_bmp+9668
0x4608	0x00000000 ;_alcohol_bmp+9672
0x460C	0x8C710000 ;_alcohol_bmp+9676
0x4610	0x3186DEFB ;_alcohol_bmp+9680
0x4614	0xFFFFEF7D ;_alcohol_bmp+9684
0x4618	0x21044208 ;_alcohol_bmp+9688
0x461C	0x8430FFFF ;_alcohol_bmp+9692
0x4620	0xE73C0000 ;_alcohol_bmp+9696
0x4624	0x0000A534 ;_alcohol_bmp+9700
0x4628	0xFFFFBDF7 ;_alcohol_bmp+9704
0x462C	0x4A4918C3 ;_alcohol_bmp+9708
0x4630	0xCE79FFFF ;_alcohol_bmp+9712
0x4634	0x00000000 ;_alcohol_bmp+9716
0x4638	0x738E0000 ;_alcohol_bmp+9720
0x463C	0x0841D6BA ;_alcohol_bmp+9724
0x4640	0x00000000 ;_alcohol_bmp+9728
0x4644	0x00000000 ;_alcohol_bmp+9732
0x4648	0x00000000 ;_alcohol_bmp+9736
0x464C	0x00000000 ;_alcohol_bmp+9740
0x4650	0x00000000 ;_alcohol_bmp+9744
0x4654	0x0000FFFF ;_alcohol_bmp+9748
0x4658	0x00000000 ;_alcohol_bmp+9752
0x465C	0x00000000 ;_alcohol_bmp+9756
0x4660	0x00000000 ;_alcohol_bmp+9760
0x4664	0x00000000 ;_alcohol_bmp+9764
0x4668	0x00000000 ;_alcohol_bmp+9768
0x466C	0x00000000 ;_alcohol_bmp+9772
0x4670	0x00000000 ;_alcohol_bmp+9776
0x4674	0x00000000 ;_alcohol_bmp+9780
0x4678	0x00000000 ;_alcohol_bmp+9784
0x467C	0x00000000 ;_alcohol_bmp+9788
0x4680	0x00000000 ;_alcohol_bmp+9792
0x4684	0x00000000 ;_alcohol_bmp+9796
0x4688	0x00000000 ;_alcohol_bmp+9800
0x468C	0x00000000 ;_alcohol_bmp+9804
0x4690	0x00000000 ;_alcohol_bmp+9808
0x4694	0x00000000 ;_alcohol_bmp+9812
0x4698	0x00000000 ;_alcohol_bmp+9816
0x469C	0x00000000 ;_alcohol_bmp+9820
0x46A0	0x00000000 ;_alcohol_bmp+9824
0x46A4	0x00000000 ;_alcohol_bmp+9828
0x46A8	0x00000000 ;_alcohol_bmp+9832
0x46AC	0x00000000 ;_alcohol_bmp+9836
0x46B0	0x00000000 ;_alcohol_bmp+9840
0x46B4	0xFFFF0000 ;_alcohol_bmp+9844
0x46B8	0x00000000 ;_alcohol_bmp+9848
0x46BC	0x00000000 ;_alcohol_bmp+9852
0x46C0	0x00000000 ;_alcohol_bmp+9856
0x46C4	0x00000000 ;_alcohol_bmp+9860
0x46C8	0x00000000 ;_alcohol_bmp+9864
0x46CC	0xEF7D1082 ;_alcohol_bmp+9868
0x46D0	0x18C37BCF ;_alcohol_bmp+9872
0x46D4	0xFFFFEF7D ;_alcohol_bmp+9876
0x46D8	0x21044208 ;_alcohol_bmp+9880
0x46DC	0x8C71FFFF ;_alcohol_bmp+9884
0x46E0	0xE73C0000 ;_alcohol_bmp+9888
0x46E4	0x0000A534 ;_alcohol_bmp+9892
0x46E8	0xFFFFBDF7 ;_alcohol_bmp+9896
0x46EC	0x528A18C3 ;_alcohol_bmp+9900
0x46F0	0xCE79FFFF ;_alcohol_bmp+9904
0x46F4	0x00000000 ;_alcohol_bmp+9908
0x46F8	0x738E0000 ;_alcohol_bmp+9912
0x46FC	0x0841D6BA ;_alcohol_bmp+9916
0x4700	0x00000000 ;_alcohol_bmp+9920
0x4704	0x00000000 ;_alcohol_bmp+9924
0x4708	0x00000000 ;_alcohol_bmp+9928
0x470C	0x00000000 ;_alcohol_bmp+9932
0x4710	0x00000000 ;_alcohol_bmp+9936
0x4714	0x0000FFFF ;_alcohol_bmp+9940
0x4718	0x00000000 ;_alcohol_bmp+9944
0x471C	0x00000000 ;_alcohol_bmp+9948
0x4720	0x00000000 ;_alcohol_bmp+9952
0x4724	0x00000000 ;_alcohol_bmp+9956
0x4728	0x00000000 ;_alcohol_bmp+9960
0x472C	0x00000000 ;_alcohol_bmp+9964
0x4730	0x00000000 ;_alcohol_bmp+9968
0x4734	0x00000000 ;_alcohol_bmp+9972
0x4738	0x00000000 ;_alcohol_bmp+9976
0x473C	0x00000000 ;_alcohol_bmp+9980
0x4740	0x00000000 ;_alcohol_bmp+9984
0x4744	0x00000000 ;_alcohol_bmp+9988
0x4748	0x00000000 ;_alcohol_bmp+9992
0x474C	0x00000000 ;_alcohol_bmp+9996
0x4750	0x00000000 ;_alcohol_bmp+10000
0x4754	0x00000000 ;_alcohol_bmp+10004
0x4758	0x00000000 ;_alcohol_bmp+10008
0x475C	0x00000000 ;_alcohol_bmp+10012
0x4760	0x00000000 ;_alcohol_bmp+10016
0x4764	0x00000000 ;_alcohol_bmp+10020
0x4768	0x00000000 ;_alcohol_bmp+10024
0x476C	0x00000000 ;_alcohol_bmp+10028
0x4770	0x00000000 ;_alcohol_bmp+10032
0x4774	0xFFFF0000 ;_alcohol_bmp+10036
0x4778	0x00000000 ;_alcohol_bmp+10040
0x477C	0x00000000 ;_alcohol_bmp+10044
0x4780	0x00000000 ;_alcohol_bmp+10048
0x4784	0x00000000 ;_alcohol_bmp+10052
0x4788	0x00000000 ;_alcohol_bmp+10056
0x478C	0xFFFF2104 ;_alcohol_bmp+10060
0x4790	0x0841528A ;_alcohol_bmp+10064
0x4794	0xFFFFEF7D ;_alcohol_bmp+10068
0x4798	0x21044208 ;_alcohol_bmp+10072
0x479C	0x8C71FFFF ;_alcohol_bmp+10076
0x47A0	0xE73C0000 ;_alcohol_bmp+10080
0x47A4	0x0000A534 ;_alcohol_bmp+10084
0x47A8	0xFFFFBDF7 ;_alcohol_bmp+10088
0x47AC	0x528A18C3 ;_alcohol_bmp+10092
0x47B0	0xCE79FFFF ;_alcohol_bmp+10096
0x47B4	0x00000000 ;_alcohol_bmp+10100
0x47B8	0x738E0000 ;_alcohol_bmp+10104
0x47BC	0x0841D6BA ;_alcohol_bmp+10108
0x47C0	0x00000000 ;_alcohol_bmp+10112
0x47C4	0x00000000 ;_alcohol_bmp+10116
0x47C8	0x00000000 ;_alcohol_bmp+10120
0x47CC	0x00000000 ;_alcohol_bmp+10124
0x47D0	0x00000000 ;_alcohol_bmp+10128
0x47D4	0x0000FFFF ;_alcohol_bmp+10132
0x47D8	0x00000000 ;_alcohol_bmp+10136
0x47DC	0x00000000 ;_alcohol_bmp+10140
0x47E0	0x00000000 ;_alcohol_bmp+10144
0x47E4	0x00000000 ;_alcohol_bmp+10148
0x47E8	0x00000000 ;_alcohol_bmp+10152
0x47EC	0x00000000 ;_alcohol_bmp+10156
0x47F0	0x00000000 ;_alcohol_bmp+10160
0x47F4	0x00000000 ;_alcohol_bmp+10164
0x47F8	0x00000000 ;_alcohol_bmp+10168
0x47FC	0x00000000 ;_alcohol_bmp+10172
0x4800	0x00000000 ;_alcohol_bmp+10176
0x4804	0x00000000 ;_alcohol_bmp+10180
0x4808	0x00000000 ;_alcohol_bmp+10184
0x480C	0x00000000 ;_alcohol_bmp+10188
0x4810	0x00000000 ;_alcohol_bmp+10192
0x4814	0x00000000 ;_alcohol_bmp+10196
0x4818	0x00000000 ;_alcohol_bmp+10200
0x481C	0x00000000 ;_alcohol_bmp+10204
0x4820	0x00000000 ;_alcohol_bmp+10208
0x4824	0x00000000 ;_alcohol_bmp+10212
0x4828	0x00000000 ;_alcohol_bmp+10216
0x482C	0x00000000 ;_alcohol_bmp+10220
0x4830	0x00000000 ;_alcohol_bmp+10224
0x4834	0xFFFF0000 ;_alcohol_bmp+10228
0x4838	0x00000000 ;_alcohol_bmp+10232
0x483C	0x00000000 ;_alcohol_bmp+10236
0x4840	0x00000000 ;_alcohol_bmp+10240
0x4844	0x00000000 ;_alcohol_bmp+10244
0x4848	0x00000000 ;_alcohol_bmp+10248
0x484C	0xBDF70841 ;_alcohol_bmp+10252
0x4850	0x7BCFE73C ;_alcohol_bmp+10256
0x4854	0xFFFFF7BE ;_alcohol_bmp+10260
0x4858	0x21044208 ;_alcohol_bmp+10264
0x485C	0x8C71FFFF ;_alcohol_bmp+10268
0x4860	0xE73C0000 ;_alcohol_bmp+10272
0x4864	0x0000A534 ;_alcohol_bmp+10276
0x4868	0xFFFFBDF7 ;_alcohol_bmp+10280
0x486C	0x528A18C3 ;_alcohol_bmp+10284
0x4870	0xCE79FFFF ;_alcohol_bmp+10288
0x4874	0x00000000 ;_alcohol_bmp+10292
0x4878	0x738E0000 ;_alcohol_bmp+10296
0x487C	0x0000D6BA ;_alcohol_bmp+10300
0x4880	0x00000000 ;_alcohol_bmp+10304
0x4884	0x00000000 ;_alcohol_bmp+10308
0x4888	0x00000000 ;_alcohol_bmp+10312
0x488C	0x00000000 ;_alcohol_bmp+10316
0x4890	0x00000000 ;_alcohol_bmp+10320
0x4894	0x0000FFFF ;_alcohol_bmp+10324
0x4898	0x00000000 ;_alcohol_bmp+10328
0x489C	0x00000000 ;_alcohol_bmp+10332
0x48A0	0x00000000 ;_alcohol_bmp+10336
0x48A4	0x00000000 ;_alcohol_bmp+10340
0x48A8	0x00000000 ;_alcohol_bmp+10344
0x48AC	0x00000000 ;_alcohol_bmp+10348
0x48B0	0x00000000 ;_alcohol_bmp+10352
0x48B4	0x00000000 ;_alcohol_bmp+10356
0x48B8	0x00000000 ;_alcohol_bmp+10360
0x48BC	0x00000000 ;_alcohol_bmp+10364
0x48C0	0x00000000 ;_alcohol_bmp+10368
0x48C4	0x00000000 ;_alcohol_bmp+10372
0x48C8	0x00000000 ;_alcohol_bmp+10376
0x48CC	0x00000000 ;_alcohol_bmp+10380
0x48D0	0x00000000 ;_alcohol_bmp+10384
0x48D4	0x00000000 ;_alcohol_bmp+10388
0x48D8	0x00000000 ;_alcohol_bmp+10392
0x48DC	0x00000000 ;_alcohol_bmp+10396
0x48E0	0x00000000 ;_alcohol_bmp+10400
0x48E4	0x00000000 ;_alcohol_bmp+10404
0x48E8	0x00000000 ;_alcohol_bmp+10408
0x48EC	0x00000000 ;_alcohol_bmp+10412
0x48F0	0x00000000 ;_alcohol_bmp+10416
0x48F4	0xFFFF0000 ;_alcohol_bmp+10420
0x48F8	0x00000000 ;_alcohol_bmp+10424
0x48FC	0x00000000 ;_alcohol_bmp+10428
0x4900	0x00000000 ;_alcohol_bmp+10432
0x4904	0x00000000 ;_alcohol_bmp+10436
0x4908	0x00000000 ;_alcohol_bmp+10440
0x490C	0x21040000 ;_alcohol_bmp+10444
0x4910	0xFFFFBDF7 ;_alcohol_bmp+10448
0x4914	0xFFFFFFFF ;_alcohol_bmp+10452
0x4918	0x21044208 ;_alcohol_bmp+10456
0x491C	0x8C71FFFF ;_alcohol_bmp+10460
0x4920	0xE73C0000 ;_alcohol_bmp+10464
0x4924	0x0000A534 ;_alcohol_bmp+10468
0x4928	0xFFFFBDF7 ;_alcohol_bmp+10472
0x492C	0x528A18C3 ;_alcohol_bmp+10476
0x4930	0xCE79FFFF ;_alcohol_bmp+10480
0x4934	0x00000000 ;_alcohol_bmp+10484
0x4938	0x738E0000 ;_alcohol_bmp+10488
0x493C	0x0000D6BA ;_alcohol_bmp+10492
0x4940	0x00000000 ;_alcohol_bmp+10496
0x4944	0x00000000 ;_alcohol_bmp+10500
0x4948	0x00000000 ;_alcohol_bmp+10504
0x494C	0x00000000 ;_alcohol_bmp+10508
0x4950	0x00000000 ;_alcohol_bmp+10512
0x4954	0x0000FFFF ;_alcohol_bmp+10516
0x4958	0x00000000 ;_alcohol_bmp+10520
0x495C	0x00000000 ;_alcohol_bmp+10524
0x4960	0x00000000 ;_alcohol_bmp+10528
0x4964	0x00000000 ;_alcohol_bmp+10532
0x4968	0x00000000 ;_alcohol_bmp+10536
0x496C	0x00000000 ;_alcohol_bmp+10540
0x4970	0x00000000 ;_alcohol_bmp+10544
0x4974	0x00000000 ;_alcohol_bmp+10548
0x4978	0x00000000 ;_alcohol_bmp+10552
0x497C	0x00000000 ;_alcohol_bmp+10556
0x4980	0x00000000 ;_alcohol_bmp+10560
0x4984	0x00000000 ;_alcohol_bmp+10564
0x4988	0x00000000 ;_alcohol_bmp+10568
0x498C	0x00000000 ;_alcohol_bmp+10572
0x4990	0x00000000 ;_alcohol_bmp+10576
0x4994	0x00000000 ;_alcohol_bmp+10580
0x4998	0x00000000 ;_alcohol_bmp+10584
0x499C	0x00000000 ;_alcohol_bmp+10588
0x49A0	0x00000000 ;_alcohol_bmp+10592
0x49A4	0x00000000 ;_alcohol_bmp+10596
0x49A8	0x00000000 ;_alcohol_bmp+10600
0x49AC	0x00000000 ;_alcohol_bmp+10604
0x49B0	0x00000000 ;_alcohol_bmp+10608
0x49B4	0xFFFF0000 ;_alcohol_bmp+10612
0x49B8	0x00000000 ;_alcohol_bmp+10616
0x49BC	0x00000000 ;_alcohol_bmp+10620
0x49C0	0x00000000 ;_alcohol_bmp+10624
0x49C4	0x00000000 ;_alcohol_bmp+10628
0x49C8	0x00000000 ;_alcohol_bmp+10632
0x49CC	0x00000000 ;_alcohol_bmp+10636
0x49D0	0x42080000 ;_alcohol_bmp+10640
0x49D4	0xFFFFF7BE ;_alcohol_bmp+10644
0x49D8	0x21044208 ;_alcohol_bmp+10648
0x49DC	0x8C71FFFF ;_alcohol_bmp+10652
0x49E0	0xE73C0000 ;_alcohol_bmp+10656
0x49E4	0x0000A534 ;_alcohol_bmp+10660
0x49E8	0xFFFFBDF7 ;_alcohol_bmp+10664
0x49EC	0x528A18C3 ;_alcohol_bmp+10668
0x49F0	0xCE79FFFF ;_alcohol_bmp+10672
0x49F4	0x00000000 ;_alcohol_bmp+10676
0x49F8	0xC6380841 ;_alcohol_bmp+10680
0x49FC	0x0000BDF7 ;_alcohol_bmp+10684
0x4A00	0x00000000 ;_alcohol_bmp+10688
0x4A04	0x00000000 ;_alcohol_bmp+10692
0x4A08	0x00000000 ;_alcohol_bmp+10696
0x4A0C	0x00000000 ;_alcohol_bmp+10700
0x4A10	0x00000000 ;_alcohol_bmp+10704
0x4A14	0x0000FFFF ;_alcohol_bmp+10708
0x4A18	0x00000000 ;_alcohol_bmp+10712
0x4A1C	0x00000000 ;_alcohol_bmp+10716
0x4A20	0x00000000 ;_alcohol_bmp+10720
0x4A24	0x00000000 ;_alcohol_bmp+10724
0x4A28	0x00000000 ;_alcohol_bmp+10728
0x4A2C	0x00000000 ;_alcohol_bmp+10732
0x4A30	0x00000000 ;_alcohol_bmp+10736
0x4A34	0x00000000 ;_alcohol_bmp+10740
0x4A38	0x00000000 ;_alcohol_bmp+10744
0x4A3C	0x00000000 ;_alcohol_bmp+10748
0x4A40	0x00000000 ;_alcohol_bmp+10752
0x4A44	0x00000000 ;_alcohol_bmp+10756
0x4A48	0x00000000 ;_alcohol_bmp+10760
0x4A4C	0x00000000 ;_alcohol_bmp+10764
0x4A50	0x00000000 ;_alcohol_bmp+10768
0x4A54	0x00000000 ;_alcohol_bmp+10772
0x4A58	0x00000000 ;_alcohol_bmp+10776
0x4A5C	0x00000000 ;_alcohol_bmp+10780
0x4A60	0x00000000 ;_alcohol_bmp+10784
0x4A64	0x00000000 ;_alcohol_bmp+10788
0x4A68	0x00000000 ;_alcohol_bmp+10792
0x4A6C	0x00000000 ;_alcohol_bmp+10796
0x4A70	0x00000000 ;_alcohol_bmp+10800
0x4A74	0xFFFF0000 ;_alcohol_bmp+10804
0x4A78	0x00000000 ;_alcohol_bmp+10808
0x4A7C	0x00000000 ;_alcohol_bmp+10812
0x4A80	0x00000000 ;_alcohol_bmp+10816
0x4A84	0x00000000 ;_alcohol_bmp+10820
0x4A88	0x00000000 ;_alcohol_bmp+10824
0x4A8C	0x00000000 ;_alcohol_bmp+10828
0x4A90	0x21040000 ;_alcohol_bmp+10832
0x4A94	0xFFFFEF7D ;_alcohol_bmp+10836
0x4A98	0x21044208 ;_alcohol_bmp+10840
0x4A9C	0x8C71FFFF ;_alcohol_bmp+10844
0x4AA0	0xE73C0000 ;_alcohol_bmp+10848
0x4AA4	0x0000A534 ;_alcohol_bmp+10852
0x4AA8	0xFFFFBDF7 ;_alcohol_bmp+10856
0x4AAC	0x528A18C3 ;_alcohol_bmp+10860
0x4AB0	0xEF7DFFFF ;_alcohol_bmp+10864
0x4AB4	0x8C718430 ;_alcohol_bmp+10868
0x4AB8	0xFFFFCE79 ;_alcohol_bmp+10872
0x4ABC	0x0000528A ;_alcohol_bmp+10876
0x4AC0	0x00000000 ;_alcohol_bmp+10880
0x4AC4	0x00000000 ;_alcohol_bmp+10884
0x4AC8	0x00000000 ;_alcohol_bmp+10888
0x4ACC	0x00000000 ;_alcohol_bmp+10892
0x4AD0	0x00000000 ;_alcohol_bmp+10896
0x4AD4	0x0000FFFF ;_alcohol_bmp+10900
0x4AD8	0x00000000 ;_alcohol_bmp+10904
0x4ADC	0x00000000 ;_alcohol_bmp+10908
0x4AE0	0x00000000 ;_alcohol_bmp+10912
0x4AE4	0x00000000 ;_alcohol_bmp+10916
0x4AE8	0x00000000 ;_alcohol_bmp+10920
0x4AEC	0x00000000 ;_alcohol_bmp+10924
0x4AF0	0x00000000 ;_alcohol_bmp+10928
0x4AF4	0x00000000 ;_alcohol_bmp+10932
0x4AF8	0x00000000 ;_alcohol_bmp+10936
0x4AFC	0x00000000 ;_alcohol_bmp+10940
0x4B00	0x00000000 ;_alcohol_bmp+10944
0x4B04	0x00000000 ;_alcohol_bmp+10948
0x4B08	0x00000000 ;_alcohol_bmp+10952
0x4B0C	0x00000000 ;_alcohol_bmp+10956
0x4B10	0x00000000 ;_alcohol_bmp+10960
0x4B14	0x00000000 ;_alcohol_bmp+10964
0x4B18	0x00000000 ;_alcohol_bmp+10968
0x4B1C	0x00000000 ;_alcohol_bmp+10972
0x4B20	0x00000000 ;_alcohol_bmp+10976
0x4B24	0x00000000 ;_alcohol_bmp+10980
0x4B28	0x00000000 ;_alcohol_bmp+10984
0x4B2C	0x00000000 ;_alcohol_bmp+10988
0x4B30	0x00000000 ;_alcohol_bmp+10992
0x4B34	0xFFFF0000 ;_alcohol_bmp+10996
0x4B38	0x00000000 ;_alcohol_bmp+11000
0x4B3C	0x00000000 ;_alcohol_bmp+11004
0x4B40	0x00000000 ;_alcohol_bmp+11008
0x4B44	0x00000000 ;_alcohol_bmp+11012
0x4B48	0x00000000 ;_alcohol_bmp+11016
0x4B4C	0x00000000 ;_alcohol_bmp+11020
0x4B50	0x21040000 ;_alcohol_bmp+11024
0x4B54	0xFFFFEF7D ;_alcohol_bmp+11028
0x4B58	0x21044208 ;_alcohol_bmp+11032
0x4B5C	0x8C71FFFF ;_alcohol_bmp+11036
0x4B60	0xE73C0000 ;_alcohol_bmp+11040
0x4B64	0x0000A534 ;_alcohol_bmp+11044
0x4B68	0xFFFFBDF7 ;_alcohol_bmp+11048
0x4B6C	0x528A18C3 ;_alcohol_bmp+11052
0x4B70	0xFFFFFFFF ;_alcohol_bmp+11056
0x4B74	0xF7BEFFFF ;_alcohol_bmp+11060
0x4B78	0x5ACBDEFB ;_alcohol_bmp+11064
0x4B7C	0x00000000 ;_alcohol_bmp+11068
0x4B80	0x00000000 ;_alcohol_bmp+11072
0x4B84	0x00000000 ;_alcohol_bmp+11076
0x4B88	0x00000000 ;_alcohol_bmp+11080
0x4B8C	0x00000000 ;_alcohol_bmp+11084
0x4B90	0x00000000 ;_alcohol_bmp+11088
0x4B94	0x0000FFFF ;_alcohol_bmp+11092
0x4B98	0x00000000 ;_alcohol_bmp+11096
0x4B9C	0x00000000 ;_alcohol_bmp+11100
0x4BA0	0x00000000 ;_alcohol_bmp+11104
0x4BA4	0x00000000 ;_alcohol_bmp+11108
0x4BA8	0x00000000 ;_alcohol_bmp+11112
0x4BAC	0x00000000 ;_alcohol_bmp+11116
0x4BB0	0x00000000 ;_alcohol_bmp+11120
0x4BB4	0x00000000 ;_alcohol_bmp+11124
0x4BB8	0x00000000 ;_alcohol_bmp+11128
0x4BBC	0x00000000 ;_alcohol_bmp+11132
0x4BC0	0x00000000 ;_alcohol_bmp+11136
0x4BC4	0x00000000 ;_alcohol_bmp+11140
0x4BC8	0x00000000 ;_alcohol_bmp+11144
0x4BCC	0x00000000 ;_alcohol_bmp+11148
0x4BD0	0x00000000 ;_alcohol_bmp+11152
0x4BD4	0x00000000 ;_alcohol_bmp+11156
0x4BD8	0x00000000 ;_alcohol_bmp+11160
0x4BDC	0x00000000 ;_alcohol_bmp+11164
0x4BE0	0x00000000 ;_alcohol_bmp+11168
0x4BE4	0x00000000 ;_alcohol_bmp+11172
0x4BE8	0x00000000 ;_alcohol_bmp+11176
0x4BEC	0x00000000 ;_alcohol_bmp+11180
0x4BF0	0x00000000 ;_alcohol_bmp+11184
0x4BF4	0xFFFF0000 ;_alcohol_bmp+11188
0x4BF8	0x00000000 ;_alcohol_bmp+11192
0x4BFC	0x00000000 ;_alcohol_bmp+11196
0x4C00	0x00000000 ;_alcohol_bmp+11200
0x4C04	0x00000000 ;_alcohol_bmp+11204
0x4C08	0x00000000 ;_alcohol_bmp+11208
0x4C0C	0x00000000 ;_alcohol_bmp+11212
0x4C10	0x21040000 ;_alcohol_bmp+11216
0x4C14	0xFFFFEF7D ;_alcohol_bmp+11220
0x4C18	0x21044208 ;_alcohol_bmp+11224
0x4C1C	0x8C71FFFF ;_alcohol_bmp+11228
0x4C20	0xE73C0000 ;_alcohol_bmp+11232
0x4C24	0x0000A534 ;_alcohol_bmp+11236
0x4C28	0xFFFFBDF7 ;_alcohol_bmp+11240
0x4C2C	0x528A18C3 ;_alcohol_bmp+11244
0x4C30	0xE73CFFFF ;_alcohol_bmp+11248
0x4C34	0x18C33186 ;_alcohol_bmp+11252
0x4C38	0x00000000 ;_alcohol_bmp+11256
0x4C3C	0x00000000 ;_alcohol_bmp+11260
0x4C40	0x00000000 ;_alcohol_bmp+11264
0x4C44	0x00000000 ;_alcohol_bmp+11268
0x4C48	0x00000000 ;_alcohol_bmp+11272
0x4C4C	0x00000000 ;_alcohol_bmp+11276
0x4C50	0x00000000 ;_alcohol_bmp+11280
0x4C54	0x0000FFFF ;_alcohol_bmp+11284
0x4C58	0x00000000 ;_alcohol_bmp+11288
0x4C5C	0x00000000 ;_alcohol_bmp+11292
0x4C60	0x00000000 ;_alcohol_bmp+11296
0x4C64	0x00000000 ;_alcohol_bmp+11300
0x4C68	0x00000000 ;_alcohol_bmp+11304
0x4C6C	0x00000000 ;_alcohol_bmp+11308
0x4C70	0x00000000 ;_alcohol_bmp+11312
0x4C74	0x00000000 ;_alcohol_bmp+11316
0x4C78	0x00000000 ;_alcohol_bmp+11320
0x4C7C	0x00000000 ;_alcohol_bmp+11324
0x4C80	0x00000000 ;_alcohol_bmp+11328
0x4C84	0x00000000 ;_alcohol_bmp+11332
0x4C88	0x00000000 ;_alcohol_bmp+11336
0x4C8C	0x00000000 ;_alcohol_bmp+11340
0x4C90	0x00000000 ;_alcohol_bmp+11344
0x4C94	0x00000000 ;_alcohol_bmp+11348
0x4C98	0x00000000 ;_alcohol_bmp+11352
0x4C9C	0x00000000 ;_alcohol_bmp+11356
0x4CA0	0x00000000 ;_alcohol_bmp+11360
0x4CA4	0x00000000 ;_alcohol_bmp+11364
0x4CA8	0x00000000 ;_alcohol_bmp+11368
0x4CAC	0x00000000 ;_alcohol_bmp+11372
0x4CB0	0x00000000 ;_alcohol_bmp+11376
0x4CB4	0xFFFF0000 ;_alcohol_bmp+11380
0x4CB8	0x00000000 ;_alcohol_bmp+11384
0x4CBC	0x00000000 ;_alcohol_bmp+11388
0x4CC0	0x00000000 ;_alcohol_bmp+11392
0x4CC4	0x00000000 ;_alcohol_bmp+11396
0x4CC8	0x00000000 ;_alcohol_bmp+11400
0x4CCC	0x00000000 ;_alcohol_bmp+11404
0x4CD0	0x21040000 ;_alcohol_bmp+11408
0x4CD4	0xFFFFEF7D ;_alcohol_bmp+11412
0x4CD8	0x21044208 ;_alcohol_bmp+11416
0x4CDC	0x8C71FFFF ;_alcohol_bmp+11420
0x4CE0	0xE73C0000 ;_alcohol_bmp+11424
0x4CE4	0x0000A534 ;_alcohol_bmp+11428
0x4CE8	0xFFFFBDF7 ;_alcohol_bmp+11432
0x4CEC	0x528A18C3 ;_alcohol_bmp+11436
0x4CF0	0xCE79FFFF ;_alcohol_bmp+11440
0x4CF4	0x00000000 ;_alcohol_bmp+11444
0x4CF8	0x00000000 ;_alcohol_bmp+11448
0x4CFC	0x00000000 ;_alcohol_bmp+11452
0x4D00	0x00000000 ;_alcohol_bmp+11456
0x4D04	0x00000000 ;_alcohol_bmp+11460
0x4D08	0x00000000 ;_alcohol_bmp+11464
0x4D0C	0x00000000 ;_alcohol_bmp+11468
0x4D10	0x00000000 ;_alcohol_bmp+11472
0x4D14	0x0000FFFF ;_alcohol_bmp+11476
0x4D18	0x00000000 ;_alcohol_bmp+11480
0x4D1C	0x00000000 ;_alcohol_bmp+11484
0x4D20	0x00000000 ;_alcohol_bmp+11488
0x4D24	0x00000000 ;_alcohol_bmp+11492
0x4D28	0x00000000 ;_alcohol_bmp+11496
0x4D2C	0x00000000 ;_alcohol_bmp+11500
0x4D30	0x00000000 ;_alcohol_bmp+11504
0x4D34	0x00000000 ;_alcohol_bmp+11508
0x4D38	0x00000000 ;_alcohol_bmp+11512
0x4D3C	0x00000000 ;_alcohol_bmp+11516
0x4D40	0x00000000 ;_alcohol_bmp+11520
0x4D44	0x00000000 ;_alcohol_bmp+11524
0x4D48	0x00000000 ;_alcohol_bmp+11528
0x4D4C	0x00000000 ;_alcohol_bmp+11532
0x4D50	0x00000000 ;_alcohol_bmp+11536
0x4D54	0x00000000 ;_alcohol_bmp+11540
0x4D58	0x00000000 ;_alcohol_bmp+11544
0x4D5C	0x00000000 ;_alcohol_bmp+11548
0x4D60	0x00000000 ;_alcohol_bmp+11552
0x4D64	0x00000000 ;_alcohol_bmp+11556
0x4D68	0x00000000 ;_alcohol_bmp+11560
0x4D6C	0x00000000 ;_alcohol_bmp+11564
0x4D70	0x00000000 ;_alcohol_bmp+11568
0x4D74	0xFFFF0000 ;_alcohol_bmp+11572
0x4D78	0x00000000 ;_alcohol_bmp+11576
0x4D7C	0x00000000 ;_alcohol_bmp+11580
0x4D80	0x00000000 ;_alcohol_bmp+11584
0x4D84	0x00000000 ;_alcohol_bmp+11588
0x4D88	0x00000000 ;_alcohol_bmp+11592
0x4D8C	0x00000000 ;_alcohol_bmp+11596
0x4D90	0x29450000 ;_alcohol_bmp+11600
0x4D94	0xFFFFF7BE ;_alcohol_bmp+11604
0x4D98	0x21044A49 ;_alcohol_bmp+11608
0x4D9C	0x8C71FFFF ;_alcohol_bmp+11612
0x4DA0	0xEF7D0000 ;_alcohol_bmp+11616
0x4DA4	0x0000AD75 ;_alcohol_bmp+11620
0x4DA8	0xFFFFC638 ;_alcohol_bmp+11624
0x4DAC	0x528A18C3 ;_alcohol_bmp+11628
0x4DB0	0xCE79FFFF ;_alcohol_bmp+11632
0x4DB4	0x00000000 ;_alcohol_bmp+11636
0x4DB8	0x00000000 ;_alcohol_bmp+11640
0x4DBC	0x00000000 ;_alcohol_bmp+11644
0x4DC0	0x00000000 ;_alcohol_bmp+11648
0x4DC4	0x00000000 ;_alcohol_bmp+11652
0x4DC8	0x00000000 ;_alcohol_bmp+11656
0x4DCC	0x00000000 ;_alcohol_bmp+11660
0x4DD0	0x00000000 ;_alcohol_bmp+11664
0x4DD4	0x0000FFFF ;_alcohol_bmp+11668
0x4DD8	0x00000000 ;_alcohol_bmp+11672
0x4DDC	0x00000000 ;_alcohol_bmp+11676
0x4DE0	0x00000000 ;_alcohol_bmp+11680
0x4DE4	0x00000000 ;_alcohol_bmp+11684
0x4DE8	0x00000000 ;_alcohol_bmp+11688
0x4DEC	0x00000000 ;_alcohol_bmp+11692
0x4DF0	0x00000000 ;_alcohol_bmp+11696
0x4DF4	0x00000000 ;_alcohol_bmp+11700
0x4DF8	0x00000000 ;_alcohol_bmp+11704
0x4DFC	0x00000000 ;_alcohol_bmp+11708
0x4E00	0x00000000 ;_alcohol_bmp+11712
0x4E04	0x00000000 ;_alcohol_bmp+11716
0x4E08	0x00000000 ;_alcohol_bmp+11720
0x4E0C	0x00000000 ;_alcohol_bmp+11724
0x4E10	0x00000000 ;_alcohol_bmp+11728
0x4E14	0x00000000 ;_alcohol_bmp+11732
0x4E18	0x00000000 ;_alcohol_bmp+11736
0x4E1C	0x00000000 ;_alcohol_bmp+11740
0x4E20	0x00000000 ;_alcohol_bmp+11744
0x4E24	0x00000000 ;_alcohol_bmp+11748
0x4E28	0x00000000 ;_alcohol_bmp+11752
0x4E2C	0x00000000 ;_alcohol_bmp+11756
0x4E30	0x00000000 ;_alcohol_bmp+11760
0x4E34	0xFFFF0000 ;_alcohol_bmp+11764
0x4E38	0x00000000 ;_alcohol_bmp+11768
0x4E3C	0x00000000 ;_alcohol_bmp+11772
0x4E40	0x00000000 ;_alcohol_bmp+11776
0x4E44	0x00000000 ;_alcohol_bmp+11780
0x4E48	0x00000000 ;_alcohol_bmp+11784
0x4E4C	0x00000000 ;_alcohol_bmp+11788
0x4E50	0x21040000 ;_alcohol_bmp+11792
0x4E54	0xFFFFEF7D ;_alcohol_bmp+11796
0x4E58	0xBDF7CE79 ;_alcohol_bmp+11800
0x4E5C	0xDEFBFFFF ;_alcohol_bmp+11804
0x4E60	0xFFFFAD75 ;_alcohol_bmp+11808
0x4E64	0xAD75EF7D ;_alcohol_bmp+11812
0x4E68	0xFFFFF7BE ;_alcohol_bmp+11816
0x4E6C	0xCE79B5B6 ;_alcohol_bmp+11820
0x4E70	0xCE79FFFF ;_alcohol_bmp+11824
0x4E74	0x00000000 ;_alcohol_bmp+11828
0x4E78	0x00000000 ;_alcohol_bmp+11832
0x4E7C	0x00000000 ;_alcohol_bmp+11836
0x4E80	0x00000000 ;_alcohol_bmp+11840
0x4E84	0x00000000 ;_alcohol_bmp+11844
0x4E88	0x00000000 ;_alcohol_bmp+11848
0x4E8C	0x00000000 ;_alcohol_bmp+11852
0x4E90	0x00000000 ;_alcohol_bmp+11856
0x4E94	0x0000FFFF ;_alcohol_bmp+11860
0x4E98	0x00000000 ;_alcohol_bmp+11864
0x4E9C	0x00000000 ;_alcohol_bmp+11868
0x4EA0	0x00000000 ;_alcohol_bmp+11872
0x4EA4	0x00000000 ;_alcohol_bmp+11876
0x4EA8	0x00000000 ;_alcohol_bmp+11880
0x4EAC	0x00000000 ;_alcohol_bmp+11884
0x4EB0	0x00000000 ;_alcohol_bmp+11888
0x4EB4	0x00000000 ;_alcohol_bmp+11892
0x4EB8	0x00000000 ;_alcohol_bmp+11896
0x4EBC	0x00000000 ;_alcohol_bmp+11900
0x4EC0	0x00000000 ;_alcohol_bmp+11904
0x4EC4	0x00000000 ;_alcohol_bmp+11908
0x4EC8	0x00000000 ;_alcohol_bmp+11912
0x4ECC	0x00000000 ;_alcohol_bmp+11916
0x4ED0	0x00000000 ;_alcohol_bmp+11920
0x4ED4	0x00000000 ;_alcohol_bmp+11924
0x4ED8	0x00000000 ;_alcohol_bmp+11928
0x4EDC	0x00000000 ;_alcohol_bmp+11932
0x4EE0	0x00000000 ;_alcohol_bmp+11936
0x4EE4	0x00000000 ;_alcohol_bmp+11940
0x4EE8	0x00000000 ;_alcohol_bmp+11944
0x4EEC	0x00000000 ;_alcohol_bmp+11948
0x4EF0	0x00000000 ;_alcohol_bmp+11952
0x4EF4	0xFFFF0000 ;_alcohol_bmp+11956
0x4EF8	0x00000000 ;_alcohol_bmp+11960
0x4EFC	0x00000000 ;_alcohol_bmp+11964
0x4F00	0x00000000 ;_alcohol_bmp+11968
0x4F04	0x00000000 ;_alcohol_bmp+11972
0x4F08	0x00000000 ;_alcohol_bmp+11976
0x4F0C	0x00000000 ;_alcohol_bmp+11980
0x4F10	0x08410000 ;_alcohol_bmp+11984
0x4F14	0xFFFFB5B6 ;_alcohol_bmp+11988
0x4F18	0xFFFFFFFF ;_alcohol_bmp+11992
0x4F1C	0xFFFFFFFF ;_alcohol_bmp+11996
0x4F20	0xFFFFFFFF ;_alcohol_bmp+12000
0x4F24	0xFFFFFFFF ;_alcohol_bmp+12004
0x4F28	0xFFFFFFFF ;_alcohol_bmp+12008
0x4F2C	0xFFFFFFFF ;_alcohol_bmp+12012
0x4F30	0x7BCFFFFF ;_alcohol_bmp+12016
0x4F34	0x00000000 ;_alcohol_bmp+12020
0x4F38	0x00000000 ;_alcohol_bmp+12024
0x4F3C	0x00000000 ;_alcohol_bmp+12028
0x4F40	0x00000000 ;_alcohol_bmp+12032
0x4F44	0x00000000 ;_alcohol_bmp+12036
0x4F48	0x00000000 ;_alcohol_bmp+12040
0x4F4C	0x00000000 ;_alcohol_bmp+12044
0x4F50	0x00000000 ;_alcohol_bmp+12048
0x4F54	0x0000FFFF ;_alcohol_bmp+12052
0x4F58	0x00000000 ;_alcohol_bmp+12056
0x4F5C	0x00000000 ;_alcohol_bmp+12060
0x4F60	0x00000000 ;_alcohol_bmp+12064
0x4F64	0x00000000 ;_alcohol_bmp+12068
0x4F68	0x00000000 ;_alcohol_bmp+12072
0x4F6C	0x00000000 ;_alcohol_bmp+12076
0x4F70	0x00000000 ;_alcohol_bmp+12080
0x4F74	0x00000000 ;_alcohol_bmp+12084
0x4F78	0x00000000 ;_alcohol_bmp+12088
0x4F7C	0x00000000 ;_alcohol_bmp+12092
0x4F80	0x00000000 ;_alcohol_bmp+12096
0x4F84	0x00000000 ;_alcohol_bmp+12100
0x4F88	0x00000000 ;_alcohol_bmp+12104
0x4F8C	0x00000000 ;_alcohol_bmp+12108
0x4F90	0x00000000 ;_alcohol_bmp+12112
0x4F94	0x00000000 ;_alcohol_bmp+12116
0x4F98	0x00000000 ;_alcohol_bmp+12120
0x4F9C	0x00000000 ;_alcohol_bmp+12124
0x4FA0	0x00000000 ;_alcohol_bmp+12128
0x4FA4	0x00000000 ;_alcohol_bmp+12132
0x4FA8	0x00000000 ;_alcohol_bmp+12136
0x4FAC	0x00000000 ;_alcohol_bmp+12140
0x4FB0	0x00000000 ;_alcohol_bmp+12144
0x4FB4	0xFFFF0000 ;_alcohol_bmp+12148
0x4FB8	0x00000000 ;_alcohol_bmp+12152
0x4FBC	0x00000000 ;_alcohol_bmp+12156
0x4FC0	0x00000000 ;_alcohol_bmp+12160
0x4FC4	0x00000000 ;_alcohol_bmp+12164
0x4FC8	0x00000000 ;_alcohol_bmp+12168
0x4FCC	0x00000000 ;_alcohol_bmp+12172
0x4FD0	0x00000000 ;_alcohol_bmp+12176
0x4FD4	0x7BCF1082 ;_alcohol_bmp+12180
0x4FD8	0x9CF39CF3 ;_alcohol_bmp+12184
0x4FDC	0x9CF39CF3 ;_alcohol_bmp+12188
0x4FE0	0x9CF39CF3 ;_alcohol_bmp+12192
0x4FE4	0x9CF39CF3 ;_alcohol_bmp+12196
0x4FE8	0x9CF39CF3 ;_alcohol_bmp+12200
0x4FEC	0x9CF39CF3 ;_alcohol_bmp+12204
0x4FF0	0x0841630C ;_alcohol_bmp+12208
0x4FF4	0x00000000 ;_alcohol_bmp+12212
0x4FF8	0x00000000 ;_alcohol_bmp+12216
0x4FFC	0x00000000 ;_alcohol_bmp+12220
0x5000	0x00000000 ;_alcohol_bmp+12224
0x5004	0x00000000 ;_alcohol_bmp+12228
0x5008	0x00000000 ;_alcohol_bmp+12232
0x500C	0x00000000 ;_alcohol_bmp+12236
0x5010	0x00000000 ;_alcohol_bmp+12240
0x5014	0x0000FFFF ;_alcohol_bmp+12244
0x5018	0x00000000 ;_alcohol_bmp+12248
0x501C	0x00000000 ;_alcohol_bmp+12252
0x5020	0x00000000 ;_alcohol_bmp+12256
0x5024	0x00000000 ;_alcohol_bmp+12260
0x5028	0x00000000 ;_alcohol_bmp+12264
0x502C	0x00000000 ;_alcohol_bmp+12268
0x5030	0x00000000 ;_alcohol_bmp+12272
0x5034	0x00000000 ;_alcohol_bmp+12276
0x5038	0x00000000 ;_alcohol_bmp+12280
0x503C	0x00000000 ;_alcohol_bmp+12284
0x5040	0x00000000 ;_alcohol_bmp+12288
0x5044	0x00000000 ;_alcohol_bmp+12292
0x5048	0x00000000 ;_alcohol_bmp+12296
0x504C	0x00000000 ;_alcohol_bmp+12300
0x5050	0x00000000 ;_alcohol_bmp+12304
0x5054	0x00000000 ;_alcohol_bmp+12308
0x5058	0x00000000 ;_alcohol_bmp+12312
0x505C	0x00000000 ;_alcohol_bmp+12316
0x5060	0x00000000 ;_alcohol_bmp+12320
0x5064	0x00000000 ;_alcohol_bmp+12324
0x5068	0x00000000 ;_alcohol_bmp+12328
0x506C	0x00000000 ;_alcohol_bmp+12332
0x5070	0x00000000 ;_alcohol_bmp+12336
0x5074	0xFFFF0000 ;_alcohol_bmp+12340
0x5078	0x00000000 ;_alcohol_bmp+12344
0x507C	0x00000000 ;_alcohol_bmp+12348
0x5080	0x00000000 ;_alcohol_bmp+12352
0x5084	0x00000000 ;_alcohol_bmp+12356
0x5088	0x00000000 ;_alcohol_bmp+12360
0x508C	0x00000000 ;_alcohol_bmp+12364
0x5090	0x00000000 ;_alcohol_bmp+12368
0x5094	0x00000000 ;_alcohol_bmp+12372
0x5098	0x00000000 ;_alcohol_bmp+12376
0x509C	0x00000000 ;_alcohol_bmp+12380
0x50A0	0x00000000 ;_alcohol_bmp+12384
0x50A4	0x00000000 ;_alcohol_bmp+12388
0x50A8	0x00000000 ;_alcohol_bmp+12392
0x50AC	0x00000000 ;_alcohol_bmp+12396
0x50B0	0x00000000 ;_alcohol_bmp+12400
0x50B4	0x00000000 ;_alcohol_bmp+12404
0x50B8	0x00000000 ;_alcohol_bmp+12408
0x50BC	0x00000000 ;_alcohol_bmp+12412
0x50C0	0x00000000 ;_alcohol_bmp+12416
0x50C4	0x00000000 ;_alcohol_bmp+12420
0x50C8	0x00000000 ;_alcohol_bmp+12424
0x50CC	0x00000000 ;_alcohol_bmp+12428
0x50D0	0x00000000 ;_alcohol_bmp+12432
0x50D4	0x0000FFFF ;_alcohol_bmp+12436
0x50D8	0x00000000 ;_alcohol_bmp+12440
0x50DC	0x00000000 ;_alcohol_bmp+12444
0x50E0	0x00000000 ;_alcohol_bmp+12448
0x50E4	0x00000000 ;_alcohol_bmp+12452
0x50E8	0x00000000 ;_alcohol_bmp+12456
0x50EC	0x00000000 ;_alcohol_bmp+12460
0x50F0	0x00000000 ;_alcohol_bmp+12464
0x50F4	0x00000000 ;_alcohol_bmp+12468
0x50F8	0x00000000 ;_alcohol_bmp+12472
0x50FC	0x00000000 ;_alcohol_bmp+12476
0x5100	0x00000000 ;_alcohol_bmp+12480
0x5104	0x00000000 ;_alcohol_bmp+12484
0x5108	0x00000000 ;_alcohol_bmp+12488
0x510C	0x00000000 ;_alcohol_bmp+12492
0x5110	0x00000000 ;_alcohol_bmp+12496
0x5114	0x00000000 ;_alcohol_bmp+12500
0x5118	0x00000000 ;_alcohol_bmp+12504
0x511C	0x00000000 ;_alcohol_bmp+12508
0x5120	0x00000000 ;_alcohol_bmp+12512
0x5124	0x00000000 ;_alcohol_bmp+12516
0x5128	0x00000000 ;_alcohol_bmp+12520
0x512C	0x00000000 ;_alcohol_bmp+12524
0x5130	0x00000000 ;_alcohol_bmp+12528
0x5134	0xFFFF0000 ;_alcohol_bmp+12532
0x5138	0x00000000 ;_alcohol_bmp+12536
0x513C	0x00000000 ;_alcohol_bmp+12540
0x5140	0x00000000 ;_alcohol_bmp+12544
0x5144	0x00000000 ;_alcohol_bmp+12548
0x5148	0x00000000 ;_alcohol_bmp+12552
0x514C	0x00000000 ;_alcohol_bmp+12556
0x5150	0x00000000 ;_alcohol_bmp+12560
0x5154	0x00000000 ;_alcohol_bmp+12564
0x5158	0x00000000 ;_alcohol_bmp+12568
0x515C	0x00000000 ;_alcohol_bmp+12572
0x5160	0x00000000 ;_alcohol_bmp+12576
0x5164	0x00000000 ;_alcohol_bmp+12580
0x5168	0x00000000 ;_alcohol_bmp+12584
0x516C	0x00000000 ;_alcohol_bmp+12588
0x5170	0x00000000 ;_alcohol_bmp+12592
0x5174	0x00000000 ;_alcohol_bmp+12596
0x5178	0x00000000 ;_alcohol_bmp+12600
0x517C	0x00000000 ;_alcohol_bmp+12604
0x5180	0x00000000 ;_alcohol_bmp+12608
0x5184	0x00000000 ;_alcohol_bmp+12612
0x5188	0x00000000 ;_alcohol_bmp+12616
0x518C	0x00000000 ;_alcohol_bmp+12620
0x5190	0x00000000 ;_alcohol_bmp+12624
0x5194	0x0000FFFF ;_alcohol_bmp+12628
0x5198	0x00000000 ;_alcohol_bmp+12632
0x519C	0x00000000 ;_alcohol_bmp+12636
0x51A0	0x00000000 ;_alcohol_bmp+12640
0x51A4	0x00000000 ;_alcohol_bmp+12644
0x51A8	0x00000000 ;_alcohol_bmp+12648
0x51AC	0x00000000 ;_alcohol_bmp+12652
0x51B0	0x00000000 ;_alcohol_bmp+12656
0x51B4	0x00000000 ;_alcohol_bmp+12660
0x51B8	0x00000000 ;_alcohol_bmp+12664
0x51BC	0x00000000 ;_alcohol_bmp+12668
0x51C0	0x00000000 ;_alcohol_bmp+12672
0x51C4	0x00000000 ;_alcohol_bmp+12676
0x51C8	0x00000000 ;_alcohol_bmp+12680
0x51CC	0x00000000 ;_alcohol_bmp+12684
0x51D0	0x00000000 ;_alcohol_bmp+12688
0x51D4	0x00000000 ;_alcohol_bmp+12692
0x51D8	0x00000000 ;_alcohol_bmp+12696
0x51DC	0x00000000 ;_alcohol_bmp+12700
0x51E0	0x00000000 ;_alcohol_bmp+12704
0x51E4	0x00000000 ;_alcohol_bmp+12708
0x51E8	0x00000000 ;_alcohol_bmp+12712
0x51EC	0x00000000 ;_alcohol_bmp+12716
0x51F0	0x00000000 ;_alcohol_bmp+12720
0x51F4	0xFFFF0000 ;_alcohol_bmp+12724
0x51F8	0x00000000 ;_alcohol_bmp+12728
0x51FC	0x00000000 ;_alcohol_bmp+12732
0x5200	0x00000000 ;_alcohol_bmp+12736
0x5204	0x00000000 ;_alcohol_bmp+12740
0x5208	0x00000000 ;_alcohol_bmp+12744
0x520C	0x00000000 ;_alcohol_bmp+12748
0x5210	0x00000000 ;_alcohol_bmp+12752
0x5214	0x00000000 ;_alcohol_bmp+12756
0x5218	0x00000000 ;_alcohol_bmp+12760
0x521C	0x00000000 ;_alcohol_bmp+12764
0x5220	0x00000000 ;_alcohol_bmp+12768
0x5224	0x00000000 ;_alcohol_bmp+12772
0x5228	0x00000000 ;_alcohol_bmp+12776
0x522C	0x00000000 ;_alcohol_bmp+12780
0x5230	0x00000000 ;_alcohol_bmp+12784
0x5234	0x00000000 ;_alcohol_bmp+12788
0x5238	0x00000000 ;_alcohol_bmp+12792
0x523C	0x00000000 ;_alcohol_bmp+12796
0x5240	0x00000000 ;_alcohol_bmp+12800
0x5244	0x00000000 ;_alcohol_bmp+12804
0x5248	0x00000000 ;_alcohol_bmp+12808
0x524C	0x00000000 ;_alcohol_bmp+12812
0x5250	0x00000000 ;_alcohol_bmp+12816
0x5254	0x0000FFFF ;_alcohol_bmp+12820
0x5258	0x00000000 ;_alcohol_bmp+12824
0x525C	0x00000000 ;_alcohol_bmp+12828
0x5260	0x00000000 ;_alcohol_bmp+12832
0x5264	0x00000000 ;_alcohol_bmp+12836
0x5268	0x00000000 ;_alcohol_bmp+12840
0x526C	0x00000000 ;_alcohol_bmp+12844
0x5270	0x00000000 ;_alcohol_bmp+12848
0x5274	0x00000000 ;_alcohol_bmp+12852
0x5278	0x00000000 ;_alcohol_bmp+12856
0x527C	0x00000000 ;_alcohol_bmp+12860
0x5280	0x00000000 ;_alcohol_bmp+12864
0x5284	0x00000000 ;_alcohol_bmp+12868
0x5288	0x00000000 ;_alcohol_bmp+12872
0x528C	0x00000000 ;_alcohol_bmp+12876
0x5290	0x00000000 ;_alcohol_bmp+12880
0x5294	0x00000000 ;_alcohol_bmp+12884
0x5298	0x00000000 ;_alcohol_bmp+12888
0x529C	0x00000000 ;_alcohol_bmp+12892
0x52A0	0x00000000 ;_alcohol_bmp+12896
0x52A4	0x00000000 ;_alcohol_bmp+12900
0x52A8	0x00000000 ;_alcohol_bmp+12904
0x52AC	0x00000000 ;_alcohol_bmp+12908
0x52B0	0x00000000 ;_alcohol_bmp+12912
0x52B4	0xFFFF0000 ;_alcohol_bmp+12916
0x52B8	0x00000000 ;_alcohol_bmp+12920
0x52BC	0x00000000 ;_alcohol_bmp+12924
0x52C0	0x00000000 ;_alcohol_bmp+12928
0x52C4	0x00000000 ;_alcohol_bmp+12932
0x52C8	0x00000000 ;_alcohol_bmp+12936
0x52CC	0x00000000 ;_alcohol_bmp+12940
0x52D0	0x00000000 ;_alcohol_bmp+12944
0x52D4	0x00000000 ;_alcohol_bmp+12948
0x52D8	0x00000000 ;_alcohol_bmp+12952
0x52DC	0x00000000 ;_alcohol_bmp+12956
0x52E0	0x00000000 ;_alcohol_bmp+12960
0x52E4	0x00000000 ;_alcohol_bmp+12964
0x52E8	0x00000000 ;_alcohol_bmp+12968
0x52EC	0x00000000 ;_alcohol_bmp+12972
0x52F0	0x00000000 ;_alcohol_bmp+12976
0x52F4	0x00000000 ;_alcohol_bmp+12980
0x52F8	0x00000000 ;_alcohol_bmp+12984
0x52FC	0x00000000 ;_alcohol_bmp+12988
0x5300	0x00000000 ;_alcohol_bmp+12992
0x5304	0x00000000 ;_alcohol_bmp+12996
0x5308	0x00000000 ;_alcohol_bmp+13000
0x530C	0x00000000 ;_alcohol_bmp+13004
0x5310	0x00000000 ;_alcohol_bmp+13008
0x5314	0x0000FFFF ;_alcohol_bmp+13012
0x5318	0x00000000 ;_alcohol_bmp+13016
0x531C	0x00000000 ;_alcohol_bmp+13020
0x5320	0x00000000 ;_alcohol_bmp+13024
0x5324	0x00000000 ;_alcohol_bmp+13028
0x5328	0x00000000 ;_alcohol_bmp+13032
0x532C	0x00000000 ;_alcohol_bmp+13036
0x5330	0x00000000 ;_alcohol_bmp+13040
0x5334	0x00000000 ;_alcohol_bmp+13044
0x5338	0x00000000 ;_alcohol_bmp+13048
0x533C	0x00000000 ;_alcohol_bmp+13052
0x5340	0x00000000 ;_alcohol_bmp+13056
0x5344	0x00000000 ;_alcohol_bmp+13060
0x5348	0x00000000 ;_alcohol_bmp+13064
0x534C	0x00000000 ;_alcohol_bmp+13068
0x5350	0x00000000 ;_alcohol_bmp+13072
0x5354	0x00000000 ;_alcohol_bmp+13076
0x5358	0x00000000 ;_alcohol_bmp+13080
0x535C	0x00000000 ;_alcohol_bmp+13084
0x5360	0x00000000 ;_alcohol_bmp+13088
0x5364	0x00000000 ;_alcohol_bmp+13092
0x5368	0x00000000 ;_alcohol_bmp+13096
0x536C	0x00000000 ;_alcohol_bmp+13100
0x5370	0x00000000 ;_alcohol_bmp+13104
0x5374	0xFFFF0000 ;_alcohol_bmp+13108
0x5378	0x00000000 ;_alcohol_bmp+13112
0x537C	0x00000000 ;_alcohol_bmp+13116
0x5380	0x00000000 ;_alcohol_bmp+13120
0x5384	0x00000000 ;_alcohol_bmp+13124
0x5388	0x00000000 ;_alcohol_bmp+13128
0x538C	0x00000000 ;_alcohol_bmp+13132
0x5390	0x00000000 ;_alcohol_bmp+13136
0x5394	0x00000000 ;_alcohol_bmp+13140
0x5398	0x00000000 ;_alcohol_bmp+13144
0x539C	0x00000000 ;_alcohol_bmp+13148
0x53A0	0x00000000 ;_alcohol_bmp+13152
0x53A4	0x00000000 ;_alcohol_bmp+13156
0x53A8	0x00000000 ;_alcohol_bmp+13160
0x53AC	0x00000000 ;_alcohol_bmp+13164
0x53B0	0x00000000 ;_alcohol_bmp+13168
0x53B4	0x00000000 ;_alcohol_bmp+13172
0x53B8	0x00000000 ;_alcohol_bmp+13176
0x53BC	0x00000000 ;_alcohol_bmp+13180
0x53C0	0x00000000 ;_alcohol_bmp+13184
0x53C4	0x00000000 ;_alcohol_bmp+13188
0x53C8	0x00000000 ;_alcohol_bmp+13192
0x53CC	0x00000000 ;_alcohol_bmp+13196
0x53D0	0x00000000 ;_alcohol_bmp+13200
0x53D4	0x0000FFFF ;_alcohol_bmp+13204
0x53D8	0x00000000 ;_alcohol_bmp+13208
0x53DC	0x00000000 ;_alcohol_bmp+13212
0x53E0	0x00000000 ;_alcohol_bmp+13216
0x53E4	0x00000000 ;_alcohol_bmp+13220
0x53E8	0x00000000 ;_alcohol_bmp+13224
0x53EC	0x00000000 ;_alcohol_bmp+13228
0x53F0	0x00000000 ;_alcohol_bmp+13232
0x53F4	0x00000000 ;_alcohol_bmp+13236
0x53F8	0x00000000 ;_alcohol_bmp+13240
0x53FC	0x00000000 ;_alcohol_bmp+13244
0x5400	0x00000000 ;_alcohol_bmp+13248
0x5404	0x00000000 ;_alcohol_bmp+13252
0x5408	0x00000000 ;_alcohol_bmp+13256
0x540C	0x00000000 ;_alcohol_bmp+13260
0x5410	0x00000000 ;_alcohol_bmp+13264
0x5414	0x00000000 ;_alcohol_bmp+13268
0x5418	0x00000000 ;_alcohol_bmp+13272
0x541C	0x00000000 ;_alcohol_bmp+13276
0x5420	0x00000000 ;_alcohol_bmp+13280
0x5424	0x00000000 ;_alcohol_bmp+13284
0x5428	0x00000000 ;_alcohol_bmp+13288
0x542C	0x00000000 ;_alcohol_bmp+13292
0x5430	0x00000000 ;_alcohol_bmp+13296
0x5434	0xFFFF0000 ;_alcohol_bmp+13300
0x5438	0x00000000 ;_alcohol_bmp+13304
0x543C	0x00000000 ;_alcohol_bmp+13308
0x5440	0x00000000 ;_alcohol_bmp+13312
0x5444	0x00000000 ;_alcohol_bmp+13316
0x5448	0x00000000 ;_alcohol_bmp+13320
0x544C	0x00000000 ;_alcohol_bmp+13324
0x5450	0x00000000 ;_alcohol_bmp+13328
0x5454	0x00000000 ;_alcohol_bmp+13332
0x5458	0x00000000 ;_alcohol_bmp+13336
0x545C	0x00000000 ;_alcohol_bmp+13340
0x5460	0x00000000 ;_alcohol_bmp+13344
0x5464	0x00000000 ;_alcohol_bmp+13348
0x5468	0x00000000 ;_alcohol_bmp+13352
0x546C	0x00000000 ;_alcohol_bmp+13356
0x5470	0x00000000 ;_alcohol_bmp+13360
0x5474	0x00000000 ;_alcohol_bmp+13364
0x5478	0x00000000 ;_alcohol_bmp+13368
0x547C	0x00000000 ;_alcohol_bmp+13372
0x5480	0x00000000 ;_alcohol_bmp+13376
0x5484	0x00000000 ;_alcohol_bmp+13380
0x5488	0x00000000 ;_alcohol_bmp+13384
0x548C	0x00000000 ;_alcohol_bmp+13388
0x5490	0x00000000 ;_alcohol_bmp+13392
0x5494	0x0000FFFF ;_alcohol_bmp+13396
0x5498	0x00000000 ;_alcohol_bmp+13400
0x549C	0x00000000 ;_alcohol_bmp+13404
0x54A0	0x00000000 ;_alcohol_bmp+13408
0x54A4	0x00000000 ;_alcohol_bmp+13412
0x54A8	0x00000000 ;_alcohol_bmp+13416
0x54AC	0x00000000 ;_alcohol_bmp+13420
0x54B0	0x00000000 ;_alcohol_bmp+13424
0x54B4	0x00000000 ;_alcohol_bmp+13428
0x54B8	0x00000000 ;_alcohol_bmp+13432
0x54BC	0x00000000 ;_alcohol_bmp+13436
0x54C0	0x00000000 ;_alcohol_bmp+13440
0x54C4	0x00000000 ;_alcohol_bmp+13444
0x54C8	0x00000000 ;_alcohol_bmp+13448
0x54CC	0x00000000 ;_alcohol_bmp+13452
0x54D0	0x00000000 ;_alcohol_bmp+13456
0x54D4	0x00000000 ;_alcohol_bmp+13460
0x54D8	0x00000000 ;_alcohol_bmp+13464
0x54DC	0x00000000 ;_alcohol_bmp+13468
0x54E0	0x00000000 ;_alcohol_bmp+13472
0x54E4	0x00000000 ;_alcohol_bmp+13476
0x54E8	0x00000000 ;_alcohol_bmp+13480
0x54EC	0x00000000 ;_alcohol_bmp+13484
0x54F0	0x00000000 ;_alcohol_bmp+13488
0x54F4	0xFFFF0000 ;_alcohol_bmp+13492
0x54F8	0x0000FFFF ;_alcohol_bmp+13496
0x54FC	0x00000000 ;_alcohol_bmp+13500
0x5500	0x00000000 ;_alcohol_bmp+13504
0x5504	0x00000000 ;_alcohol_bmp+13508
0x5508	0x00000000 ;_alcohol_bmp+13512
0x550C	0x00000000 ;_alcohol_bmp+13516
0x5510	0x00000000 ;_alcohol_bmp+13520
0x5514	0x00000000 ;_alcohol_bmp+13524
0x5518	0x00000000 ;_alcohol_bmp+13528
0x551C	0x00000000 ;_alcohol_bmp+13532
0x5520	0x00000000 ;_alcohol_bmp+13536
0x5524	0x00000000 ;_alcohol_bmp+13540
0x5528	0x00000000 ;_alcohol_bmp+13544
0x552C	0x00000000 ;_alcohol_bmp+13548
0x5530	0x00000000 ;_alcohol_bmp+13552
0x5534	0x00000000 ;_alcohol_bmp+13556
0x5538	0x00000000 ;_alcohol_bmp+13560
0x553C	0x00000000 ;_alcohol_bmp+13564
0x5540	0x00000000 ;_alcohol_bmp+13568
0x5544	0x00000000 ;_alcohol_bmp+13572
0x5548	0x00000000 ;_alcohol_bmp+13576
0x554C	0x00000000 ;_alcohol_bmp+13580
0x5550	0xFFFF0000 ;_alcohol_bmp+13584
0x5554	0x0000FFFF ;_alcohol_bmp+13588
0x5558	0x00000000 ;_alcohol_bmp+13592
0x555C	0x00000000 ;_alcohol_bmp+13596
0x5560	0x00000000 ;_alcohol_bmp+13600
0x5564	0x00000000 ;_alcohol_bmp+13604
0x5568	0x00000000 ;_alcohol_bmp+13608
0x556C	0x00000000 ;_alcohol_bmp+13612
0x5570	0x00000000 ;_alcohol_bmp+13616
0x5574	0x00000000 ;_alcohol_bmp+13620
0x5578	0x00000000 ;_alcohol_bmp+13624
0x557C	0x00000000 ;_alcohol_bmp+13628
0x5580	0x00000000 ;_alcohol_bmp+13632
0x5584	0x00000000 ;_alcohol_bmp+13636
0x5588	0x00000000 ;_alcohol_bmp+13640
0x558C	0x00000000 ;_alcohol_bmp+13644
0x5590	0x00000000 ;_alcohol_bmp+13648
0x5594	0x00000000 ;_alcohol_bmp+13652
0x5598	0x00000000 ;_alcohol_bmp+13656
0x559C	0x00000000 ;_alcohol_bmp+13660
0x55A0	0x00000000 ;_alcohol_bmp+13664
0x55A4	0x00000000 ;_alcohol_bmp+13668
0x55A8	0x00000000 ;_alcohol_bmp+13672
0x55AC	0x00000000 ;_alcohol_bmp+13676
0x55B0	0x00000000 ;_alcohol_bmp+13680
0x55B4	0x00000000 ;_alcohol_bmp+13684
0x55B8	0xFFFFFFFF ;_alcohol_bmp+13688
0x55BC	0x00000000 ;_alcohol_bmp+13692
0x55C0	0x00000000 ;_alcohol_bmp+13696
0x55C4	0x00000000 ;_alcohol_bmp+13700
0x55C8	0x00000000 ;_alcohol_bmp+13704
0x55CC	0x00000000 ;_alcohol_bmp+13708
0x55D0	0x00000000 ;_alcohol_bmp+13712
0x55D4	0x00000000 ;_alcohol_bmp+13716
0x55D8	0x00000000 ;_alcohol_bmp+13720
0x55DC	0x00000000 ;_alcohol_bmp+13724
0x55E0	0x00000000 ;_alcohol_bmp+13728
0x55E4	0x00000000 ;_alcohol_bmp+13732
0x55E8	0x00000000 ;_alcohol_bmp+13736
0x55EC	0x00000000 ;_alcohol_bmp+13740
0x55F0	0x00000000 ;_alcohol_bmp+13744
0x55F4	0x00000000 ;_alcohol_bmp+13748
0x55F8	0x00000000 ;_alcohol_bmp+13752
0x55FC	0x00000000 ;_alcohol_bmp+13756
0x5600	0x00000000 ;_alcohol_bmp+13760
0x5604	0x00000000 ;_alcohol_bmp+13764
0x5608	0x00000000 ;_alcohol_bmp+13768
0x560C	0x00000000 ;_alcohol_bmp+13772
0x5610	0xFFFFFFFF ;_alcohol_bmp+13776
0x5614	0x00000000 ;_alcohol_bmp+13780
0x5618	0x00000000 ;_alcohol_bmp+13784
0x561C	0x00000000 ;_alcohol_bmp+13788
0x5620	0x00000000 ;_alcohol_bmp+13792
0x5624	0x00000000 ;_alcohol_bmp+13796
0x5628	0x00000000 ;_alcohol_bmp+13800
0x562C	0x00000000 ;_alcohol_bmp+13804
0x5630	0x00000000 ;_alcohol_bmp+13808
0x5634	0x00000000 ;_alcohol_bmp+13812
0x5638	0x00000000 ;_alcohol_bmp+13816
0x563C	0x00000000 ;_alcohol_bmp+13820
0x5640	0x00000000 ;_alcohol_bmp+13824
0x5644	0x00000000 ;_alcohol_bmp+13828
0x5648	0x00000000 ;_alcohol_bmp+13832
0x564C	0x00000000 ;_alcohol_bmp+13836
0x5650	0x00000000 ;_alcohol_bmp+13840
0x5654	0x00000000 ;_alcohol_bmp+13844
0x5658	0x00000000 ;_alcohol_bmp+13848
0x565C	0x00000000 ;_alcohol_bmp+13852
0x5660	0x00000000 ;_alcohol_bmp+13856
0x5664	0x00000000 ;_alcohol_bmp+13860
0x5668	0x00000000 ;_alcohol_bmp+13864
0x566C	0x00000000 ;_alcohol_bmp+13868
0x5670	0x00000000 ;_alcohol_bmp+13872
0x5674	0x00000000 ;_alcohol_bmp+13876
0x5678	0xFFFF0000 ;_alcohol_bmp+13880
0x567C	0xFFFFFFFF ;_alcohol_bmp+13884
0x5680	0xFFFFFFFF ;_alcohol_bmp+13888
0x5684	0xFFFFFFFF ;_alcohol_bmp+13892
0x5688	0xFFFFFFFF ;_alcohol_bmp+13896
0x568C	0xFFFFFFFF ;_alcohol_bmp+13900
0x5690	0xFFFFFFFF ;_alcohol_bmp+13904
0x5694	0xFFFFFFFF ;_alcohol_bmp+13908
0x5698	0xFFFFFFFF ;_alcohol_bmp+13912
0x569C	0xFFFFFFFF ;_alcohol_bmp+13916
0x56A0	0xFFFFFFFF ;_alcohol_bmp+13920
0x56A4	0xFFFFFFFF ;_alcohol_bmp+13924
0x56A8	0xFFFFFFFF ;_alcohol_bmp+13928
0x56AC	0xFFFFFFFF ;_alcohol_bmp+13932
0x56B0	0xFFFFFFFF ;_alcohol_bmp+13936
0x56B4	0xFFFFFFFF ;_alcohol_bmp+13940
0x56B8	0xFFFFFFFF ;_alcohol_bmp+13944
0x56BC	0xFFFFFFFF ;_alcohol_bmp+13948
0x56C0	0xFFFFFFFF ;_alcohol_bmp+13952
0x56C4	0xFFFFFFFF ;_alcohol_bmp+13956
0x56C8	0xFFFFFFFF ;_alcohol_bmp+13960
0x56CC	0xFFFFFFFF ;_alcohol_bmp+13964
0x56D0	0x0000FFFF ;_alcohol_bmp+13968
0x56D4	0x00000000 ;_alcohol_bmp+13972
0x56D8	0x00000000 ;_alcohol_bmp+13976
0x56DC	0x00000000 ;_alcohol_bmp+13980
0x56E0	0x00000000 ;_alcohol_bmp+13984
0x56E4	0x00000000 ;_alcohol_bmp+13988
0x56E8	0x00000000 ;_alcohol_bmp+13992
0x56EC	0x00000000 ;_alcohol_bmp+13996
0x56F0	0x00000000 ;_alcohol_bmp+14000
0x56F4	0x00000000 ;_alcohol_bmp+14004
0x56F8	0x00000000 ;_alcohol_bmp+14008
0x56FC	0x00000000 ;_alcohol_bmp+14012
0x5700	0x00000000 ;_alcohol_bmp+14016
0x5704	0x00000000 ;_alcohol_bmp+14020
0x5708	0x00000000 ;_alcohol_bmp+14024
0x570C	0x00000000 ;_alcohol_bmp+14028
0x5710	0x00000000 ;_alcohol_bmp+14032
0x5714	0x00000000 ;_alcohol_bmp+14036
0x5718	0x00000000 ;_alcohol_bmp+14040
0x571C	0x00000000 ;_alcohol_bmp+14044
0x5720	0x00000000 ;_alcohol_bmp+14048
0x5724	0x00000000 ;_alcohol_bmp+14052
0x5728	0x00000000 ;_alcohol_bmp+14056
0x572C	0x00000000 ;_alcohol_bmp+14060
0x5730	0x00000000 ;_alcohol_bmp+14064
0x5734	0x00000000 ;_alcohol_bmp+14068
0x5738	0x00000000 ;_alcohol_bmp+14072
0x573C	0x00000000 ;_alcohol_bmp+14076
0x5740	0x00000000 ;_alcohol_bmp+14080
0x5744	0x00000000 ;_alcohol_bmp+14084
0x5748	0x00000000 ;_alcohol_bmp+14088
0x574C	0x00000000 ;_alcohol_bmp+14092
0x5750	0x00000000 ;_alcohol_bmp+14096
0x5754	0x00000000 ;_alcohol_bmp+14100
0x5758	0x00000000 ;_alcohol_bmp+14104
0x575C	0x00000000 ;_alcohol_bmp+14108
0x5760	0x00000000 ;_alcohol_bmp+14112
0x5764	0x00000000 ;_alcohol_bmp+14116
0x5768	0x00000000 ;_alcohol_bmp+14120
0x576C	0x00000000 ;_alcohol_bmp+14124
0x5770	0x00000000 ;_alcohol_bmp+14128
0x5774	0x00000000 ;_alcohol_bmp+14132
0x5778	0x00000000 ;_alcohol_bmp+14136
0x577C	0x00000000 ;_alcohol_bmp+14140
0x5780	0x00000000 ;_alcohol_bmp+14144
0x5784	0x00000000 ;_alcohol_bmp+14148
0x5788	0x00000000 ;_alcohol_bmp+14152
0x578C	0x00000000 ;_alcohol_bmp+14156
0x5790	0x00000000 ;_alcohol_bmp+14160
0x5794	0x00000000 ;_alcohol_bmp+14164
0x5798	0x00000000 ;_alcohol_bmp+14168
0x579C	0x00000000 ;_alcohol_bmp+14172
0x57A0	0x00000000 ;_alcohol_bmp+14176
0x57A4	0x00000000 ;_alcohol_bmp+14180
0x57A8	0x00000000 ;_alcohol_bmp+14184
0x57AC	0x00000000 ;_alcohol_bmp+14188
0x57B0	0x00000000 ;_alcohol_bmp+14192
0x57B4	0x00000000 ;_alcohol_bmp+14196
0x57B8	0x00000000 ;_alcohol_bmp+14200
0x57BC	0x00000000 ;_alcohol_bmp+14204
0x57C0	0x00000000 ;_alcohol_bmp+14208
0x57C4	0x00000000 ;_alcohol_bmp+14212
0x57C8	0x00000000 ;_alcohol_bmp+14216
0x57CC	0x00000000 ;_alcohol_bmp+14220
0x57D0	0x00000000 ;_alcohol_bmp+14224
0x57D4	0x00000000 ;_alcohol_bmp+14228
0x57D8	0x00000000 ;_alcohol_bmp+14232
0x57DC	0x00000000 ;_alcohol_bmp+14236
0x57E0	0x00000000 ;_alcohol_bmp+14240
0x57E4	0x00000000 ;_alcohol_bmp+14244
0x57E8	0x00000000 ;_alcohol_bmp+14248
0x57EC	0x00000000 ;_alcohol_bmp+14252
0x57F0	0x00000000 ;_alcohol_bmp+14256
0x57F4	0x00000000 ;_alcohol_bmp+14260
0x57F8	0x00000000 ;_alcohol_bmp+14264
0x57FC	0x00000000 ;_alcohol_bmp+14268
0x5800	0x00000000 ;_alcohol_bmp+14272
0x5804	0x00000000 ;_alcohol_bmp+14276
0x5808	0x00000000 ;_alcohol_bmp+14280
0x580C	0x00000000 ;_alcohol_bmp+14284
0x5810	0x00000000 ;_alcohol_bmp+14288
0x5814	0x00000000 ;_alcohol_bmp+14292
0x5818	0x00000000 ;_alcohol_bmp+14296
0x581C	0x00000000 ;_alcohol_bmp+14300
0x5820	0x00000000 ;_alcohol_bmp+14304
0x5824	0x00000000 ;_alcohol_bmp+14308
0x5828	0x00000000 ;_alcohol_bmp+14312
0x582C	0x00000000 ;_alcohol_bmp+14316
0x5830	0x00000000 ;_alcohol_bmp+14320
0x5834	0x00000000 ;_alcohol_bmp+14324
0x5838	0x00000000 ;_alcohol_bmp+14328
0x583C	0x00000000 ;_alcohol_bmp+14332
0x5840	0x00000000 ;_alcohol_bmp+14336
0x5844	0x00000000 ;_alcohol_bmp+14340
0x5848	0x00000000 ;_alcohol_bmp+14344
0x584C	0x00000000 ;_alcohol_bmp+14348
0x5850	0x00000000 ;_alcohol_bmp+14352
0x5854	0x00000000 ;_alcohol_bmp+14356
0x5858	0x00000000 ;_alcohol_bmp+14360
0x585C	0x00000000 ;_alcohol_bmp+14364
0x5860	0x00000000 ;_alcohol_bmp+14368
0x5864	0x00000000 ;_alcohol_bmp+14372
0x5868	0x00000000 ;_alcohol_bmp+14376
0x586C	0x00000000 ;_alcohol_bmp+14380
0x5870	0x00000000 ;_alcohol_bmp+14384
0x5874	0x00000000 ;_alcohol_bmp+14388
0x5878	0x00000000 ;_alcohol_bmp+14392
0x587C	0x00000000 ;_alcohol_bmp+14396
0x5880	0x00000000 ;_alcohol_bmp+14400
0x5884	0x00000000 ;_alcohol_bmp+14404
0x5888	0x00000000 ;_alcohol_bmp+14408
0x588C	0x00000000 ;_alcohol_bmp+14412
0x5890	0x00000000 ;_alcohol_bmp+14416
0x5894	0x00000000 ;_alcohol_bmp+14420
0x5898	0x630C1082 ;_alcohol_bmp+14424
0x589C	0x738E738E ;_alcohol_bmp+14428
0x58A0	0x738E738E ;_alcohol_bmp+14432
0x58A4	0x738E738E ;_alcohol_bmp+14436
0x58A8	0x738E738E ;_alcohol_bmp+14440
0x58AC	0x738E738E ;_alcohol_bmp+14444
0x58B0	0x738E738E ;_alcohol_bmp+14448
0x58B4	0x738E738E ;_alcohol_bmp+14452
0x58B8	0x738E738E ;_alcohol_bmp+14456
0x58BC	0x738E738E ;_alcohol_bmp+14460
0x58C0	0x738E738E ;_alcohol_bmp+14464
0x58C4	0x738E738E ;_alcohol_bmp+14468
0x58C8	0x738E738E ;_alcohol_bmp+14472
0x58CC	0x738E738E ;_alcohol_bmp+14476
0x58D0	0x738E738E ;_alcohol_bmp+14480
0x58D4	0x738E738E ;_alcohol_bmp+14484
0x58D8	0x738E738E ;_alcohol_bmp+14488
0x58DC	0x738E738E ;_alcohol_bmp+14492
0x58E0	0x738E738E ;_alcohol_bmp+14496
0x58E4	0x738E738E ;_alcohol_bmp+14500
0x58E8	0x738E738E ;_alcohol_bmp+14504
0x58EC	0x738E738E ;_alcohol_bmp+14508
0x58F0	0x738E738E ;_alcohol_bmp+14512
0x58F4	0x738E738E ;_alcohol_bmp+14516
0x58F8	0x738E738E ;_alcohol_bmp+14520
0x58FC	0x738E738E ;_alcohol_bmp+14524
0x5900	0x738E738E ;_alcohol_bmp+14528
0x5904	0x738E738E ;_alcohol_bmp+14532
0x5908	0x738E738E ;_alcohol_bmp+14536
0x590C	0x738E738E ;_alcohol_bmp+14540
0x5910	0x738E738E ;_alcohol_bmp+14544
0x5914	0x738E738E ;_alcohol_bmp+14548
0x5918	0x738E738E ;_alcohol_bmp+14552
0x591C	0x738E738E ;_alcohol_bmp+14556
0x5920	0x738E738E ;_alcohol_bmp+14560
0x5924	0x738E738E ;_alcohol_bmp+14564
0x5928	0x738E738E ;_alcohol_bmp+14568
0x592C	0x738E738E ;_alcohol_bmp+14572
0x5930	0x0841528A ;_alcohol_bmp+14576
0x5934	0x00000000 ;_alcohol_bmp+14580
0x5938	0x00000000 ;_alcohol_bmp+14584
0x593C	0x00000000 ;_alcohol_bmp+14588
0x5940	0x00000000 ;_alcohol_bmp+14592
0x5944	0x00000000 ;_alcohol_bmp+14596
0x5948	0x00000000 ;_alcohol_bmp+14600
0x594C	0x00000000 ;_alcohol_bmp+14604
0x5950	0x00000000 ;_alcohol_bmp+14608
0x5954	0x00000000 ;_alcohol_bmp+14612
0x5958	0xFFFFA534 ;_alcohol_bmp+14616
0x595C	0xFFFFFFFF ;_alcohol_bmp+14620
0x5960	0xFFFFFFFF ;_alcohol_bmp+14624
0x5964	0xFFFFFFFF ;_alcohol_bmp+14628
0x5968	0xFFFFFFFF ;_alcohol_bmp+14632
0x596C	0xFFFFFFFF ;_alcohol_bmp+14636
0x5970	0xFFFFFFFF ;_alcohol_bmp+14640
0x5974	0xFFFFFFFF ;_alcohol_bmp+14644
0x5978	0xFFFFFFFF ;_alcohol_bmp+14648
0x597C	0xFFFFFFFF ;_alcohol_bmp+14652
0x5980	0xFFFFFFFF ;_alcohol_bmp+14656
0x5984	0xFFFFFFFF ;_alcohol_bmp+14660
0x5988	0xFFFFFFFF ;_alcohol_bmp+14664
0x598C	0xFFFFFFFF ;_alcohol_bmp+14668
0x5990	0xFFFFFFFF ;_alcohol_bmp+14672
0x5994	0xFFFFFFFF ;_alcohol_bmp+14676
0x5998	0xFFFFFFFF ;_alcohol_bmp+14680
0x599C	0xFFFFFFFF ;_alcohol_bmp+14684
0x59A0	0xFFFFFFFF ;_alcohol_bmp+14688
0x59A4	0xFFFFFFFF ;_alcohol_bmp+14692
0x59A8	0xFFFFFFFF ;_alcohol_bmp+14696
0x59AC	0xFFFFFFFF ;_alcohol_bmp+14700
0x59B0	0xFFFFFFFF ;_alcohol_bmp+14704
0x59B4	0xFFFFFFFF ;_alcohol_bmp+14708
0x59B8	0xFFFFFFFF ;_alcohol_bmp+14712
0x59BC	0xFFFFFFFF ;_alcohol_bmp+14716
0x59C0	0xFFFFFFFF ;_alcohol_bmp+14720
0x59C4	0xFFFFFFFF ;_alcohol_bmp+14724
0x59C8	0xFFFFFFFF ;_alcohol_bmp+14728
0x59CC	0xFFFFFFFF ;_alcohol_bmp+14732
0x59D0	0xFFFFFFFF ;_alcohol_bmp+14736
0x59D4	0xFFFFFFFF ;_alcohol_bmp+14740
0x59D8	0xFFFFFFFF ;_alcohol_bmp+14744
0x59DC	0xFFFFFFFF ;_alcohol_bmp+14748
0x59E0	0xFFFFFFFF ;_alcohol_bmp+14752
0x59E4	0xFFFFFFFF ;_alcohol_bmp+14756
0x59E8	0xFFFFFFFF ;_alcohol_bmp+14760
0x59EC	0xFFFFFFFF ;_alcohol_bmp+14764
0x59F0	0x7BCFFFFF ;_alcohol_bmp+14768
0x59F4	0x00000000 ;_alcohol_bmp+14772
0x59F8	0x00000000 ;_alcohol_bmp+14776
0x59FC	0x00000000 ;_alcohol_bmp+14780
0x5A00	0x00000000 ;_alcohol_bmp+14784
0x5A04	0x00000000 ;_alcohol_bmp+14788
0x5A08	0x00000000 ;_alcohol_bmp+14792
0x5A0C	0x00000000 ;_alcohol_bmp+14796
0x5A10	0x00000000 ;_alcohol_bmp+14800
0x5A14	0x08410000 ;_alcohol_bmp+14804
0x5A18	0xFFFFDEFB ;_alcohol_bmp+14808
0x5A1C	0xFFFFFFFF ;_alcohol_bmp+14812
0x5A20	0xFFFFFFFF ;_alcohol_bmp+14816
0x5A24	0xFFFFFFFF ;_alcohol_bmp+14820
0x5A28	0xFFFFFFFF ;_alcohol_bmp+14824
0x5A2C	0xFFFFFFFF ;_alcohol_bmp+14828
0x5A30	0xFFFFFFFF ;_alcohol_bmp+14832
0x5A34	0xFFFFFFFF ;_alcohol_bmp+14836
0x5A38	0xFFFFFFFF ;_alcohol_bmp+14840
0x5A3C	0xFFFFFFFF ;_alcohol_bmp+14844
0x5A40	0xFFFFFFFF ;_alcohol_bmp+14848
0x5A44	0xFFFFFFFF ;_alcohol_bmp+14852
0x5A48	0xFFFFFFFF ;_alcohol_bmp+14856
0x5A4C	0xFFFFFFFF ;_alcohol_bmp+14860
0x5A50	0xFFFFFFFF ;_alcohol_bmp+14864
0x5A54	0xFFFFFFFF ;_alcohol_bmp+14868
0x5A58	0xFFFFFFFF ;_alcohol_bmp+14872
0x5A5C	0xFFFFFFFF ;_alcohol_bmp+14876
0x5A60	0xFFFFFFFF ;_alcohol_bmp+14880
0x5A64	0xFFFFFFFF ;_alcohol_bmp+14884
0x5A68	0xFFFFFFFF ;_alcohol_bmp+14888
0x5A6C	0xFFFFFFFF ;_alcohol_bmp+14892
0x5A70	0xFFFFFFFF ;_alcohol_bmp+14896
0x5A74	0xFFFFFFFF ;_alcohol_bmp+14900
0x5A78	0xFFFFFFFF ;_alcohol_bmp+14904
0x5A7C	0xFFFFFFFF ;_alcohol_bmp+14908
0x5A80	0xFFFFFFFF ;_alcohol_bmp+14912
0x5A84	0xFFFFFFFF ;_alcohol_bmp+14916
0x5A88	0xFFFFFFFF ;_alcohol_bmp+14920
0x5A8C	0xFFFFFFFF ;_alcohol_bmp+14924
0x5A90	0xFFFFFFFF ;_alcohol_bmp+14928
0x5A94	0xFFFFFFFF ;_alcohol_bmp+14932
0x5A98	0xFFFFFFFF ;_alcohol_bmp+14936
0x5A9C	0xFFFFFFFF ;_alcohol_bmp+14940
0x5AA0	0xFFFFFFFF ;_alcohol_bmp+14944
0x5AA4	0xFFFFFFFF ;_alcohol_bmp+14948
0x5AA8	0xFFFFFFFF ;_alcohol_bmp+14952
0x5AAC	0xFFFFFFFF ;_alcohol_bmp+14956
0x5AB0	0xBDF7FFFF ;_alcohol_bmp+14960
0x5AB4	0x00000000 ;_alcohol_bmp+14964
0x5AB8	0x00000000 ;_alcohol_bmp+14968
0x5ABC	0x00000000 ;_alcohol_bmp+14972
0x5AC0	0x00000000 ;_alcohol_bmp+14976
0x5AC4	0x00000000 ;_alcohol_bmp+14980
0x5AC8	0x00000000 ;_alcohol_bmp+14984
0x5ACC	0x00000000 ;_alcohol_bmp+14988
0x5AD0	0x00000000 ;_alcohol_bmp+14992
0x5AD4	0x08410000 ;_alcohol_bmp+14996
0x5AD8	0xFFFFD6BA ;_alcohol_bmp+15000
0x5ADC	0xFFFFFFFF ;_alcohol_bmp+15004
0x5AE0	0xFFFFFFFF ;_alcohol_bmp+15008
0x5AE4	0xFFFFFFFF ;_alcohol_bmp+15012
0x5AE8	0xFFFFFFFF ;_alcohol_bmp+15016
0x5AEC	0xFFFFFFFF ;_alcohol_bmp+15020
0x5AF0	0xFFFFFFFF ;_alcohol_bmp+15024
0x5AF4	0xFFFFFFFF ;_alcohol_bmp+15028
0x5AF8	0xFFFFFFFF ;_alcohol_bmp+15032
0x5AFC	0xFFFFFFFF ;_alcohol_bmp+15036
0x5B00	0xFFFFFFFF ;_alcohol_bmp+15040
0x5B04	0xFFFFFFFF ;_alcohol_bmp+15044
0x5B08	0xFFFFFFFF ;_alcohol_bmp+15048
0x5B0C	0xFFFFFFFF ;_alcohol_bmp+15052
0x5B10	0xFFFFFFFF ;_alcohol_bmp+15056
0x5B14	0xFFFFFFFF ;_alcohol_bmp+15060
0x5B18	0xFFFFFFFF ;_alcohol_bmp+15064
0x5B1C	0xFFFFFFFF ;_alcohol_bmp+15068
0x5B20	0xFFFFFFFF ;_alcohol_bmp+15072
0x5B24	0xFFFFFFFF ;_alcohol_bmp+15076
0x5B28	0xFFFFFFFF ;_alcohol_bmp+15080
0x5B2C	0xFFFFFFFF ;_alcohol_bmp+15084
0x5B30	0xFFFFFFFF ;_alcohol_bmp+15088
0x5B34	0xFFFFFFFF ;_alcohol_bmp+15092
0x5B38	0xFFFFFFFF ;_alcohol_bmp+15096
0x5B3C	0xFFFFFFFF ;_alcohol_bmp+15100
0x5B40	0xFFFFFFFF ;_alcohol_bmp+15104
0x5B44	0xFFFFFFFF ;_alcohol_bmp+15108
0x5B48	0xFFFFFFFF ;_alcohol_bmp+15112
0x5B4C	0xFFFFFFFF ;_alcohol_bmp+15116
0x5B50	0xFFFFFFFF ;_alcohol_bmp+15120
0x5B54	0xFFFFFFFF ;_alcohol_bmp+15124
0x5B58	0xFFFFFFFF ;_alcohol_bmp+15128
0x5B5C	0xFFFFFFFF ;_alcohol_bmp+15132
0x5B60	0xFFFFFFFF ;_alcohol_bmp+15136
0x5B64	0xFFFFFFFF ;_alcohol_bmp+15140
0x5B68	0xFFFFFFFF ;_alcohol_bmp+15144
0x5B6C	0xFFFFFFFF ;_alcohol_bmp+15148
0x5B70	0xBDF7FFFF ;_alcohol_bmp+15152
0x5B74	0x00000000 ;_alcohol_bmp+15156
0x5B78	0x00000000 ;_alcohol_bmp+15160
0x5B7C	0x00000000 ;_alcohol_bmp+15164
0x5B80	0x00000000 ;_alcohol_bmp+15168
0x5B84	0x00000000 ;_alcohol_bmp+15172
0x5B88	0x00000000 ;_alcohol_bmp+15176
0x5B8C	0x00000000 ;_alcohol_bmp+15180
0x5B90	0x00000000 ;_alcohol_bmp+15184
0x5B94	0x08410000 ;_alcohol_bmp+15188
0x5B98	0xFFFFD6BA ;_alcohol_bmp+15192
0x5B9C	0xFFFFFFFF ;_alcohol_bmp+15196
0x5BA0	0xFFFFFFFF ;_alcohol_bmp+15200
0x5BA4	0xFFFFFFFF ;_alcohol_bmp+15204
0x5BA8	0xFFFFFFFF ;_alcohol_bmp+15208
0x5BAC	0xFFFFFFFF ;_alcohol_bmp+15212
0x5BB0	0xFFFFFFFF ;_alcohol_bmp+15216
0x5BB4	0xFFFFFFFF ;_alcohol_bmp+15220
0x5BB8	0xFFFFFFFF ;_alcohol_bmp+15224
0x5BBC	0xFFFFFFFF ;_alcohol_bmp+15228
0x5BC0	0xFFFFFFFF ;_alcohol_bmp+15232
0x5BC4	0xFFFFFFFF ;_alcohol_bmp+15236
0x5BC8	0xFFFFFFFF ;_alcohol_bmp+15240
0x5BCC	0xFFFFFFFF ;_alcohol_bmp+15244
0x5BD0	0xFFFFFFFF ;_alcohol_bmp+15248
0x5BD4	0xFFFFFFFF ;_alcohol_bmp+15252
0x5BD8	0xFFFFFFFF ;_alcohol_bmp+15256
0x5BDC	0xFFFFFFFF ;_alcohol_bmp+15260
0x5BE0	0xFFFFFFFF ;_alcohol_bmp+15264
0x5BE4	0xFFFFFFFF ;_alcohol_bmp+15268
0x5BE8	0xFFFFFFFF ;_alcohol_bmp+15272
0x5BEC	0xFFFFFFFF ;_alcohol_bmp+15276
0x5BF0	0xFFFFFFFF ;_alcohol_bmp+15280
0x5BF4	0xFFFFFFFF ;_alcohol_bmp+15284
0x5BF8	0xFFFFFFFF ;_alcohol_bmp+15288
0x5BFC	0xFFFFFFFF ;_alcohol_bmp+15292
0x5C00	0xFFFFFFFF ;_alcohol_bmp+15296
0x5C04	0xFFFFFFFF ;_alcohol_bmp+15300
0x5C08	0xFFFFFFFF ;_alcohol_bmp+15304
0x5C0C	0xFFFFFFFF ;_alcohol_bmp+15308
0x5C10	0xFFFFFFFF ;_alcohol_bmp+15312
0x5C14	0xFFFFFFFF ;_alcohol_bmp+15316
0x5C18	0xFFFFFFFF ;_alcohol_bmp+15320
0x5C1C	0xFFFFFFFF ;_alcohol_bmp+15324
0x5C20	0xFFFFFFFF ;_alcohol_bmp+15328
0x5C24	0xFFFFFFFF ;_alcohol_bmp+15332
0x5C28	0xFFFFFFFF ;_alcohol_bmp+15336
0x5C2C	0xFFFFFFFF ;_alcohol_bmp+15340
0x5C30	0xB5B6FFFF ;_alcohol_bmp+15344
0x5C34	0x00000000 ;_alcohol_bmp+15348
0x5C38	0x00000000 ;_alcohol_bmp+15352
0x5C3C	0x00000000 ;_alcohol_bmp+15356
0x5C40	0x00000000 ;_alcohol_bmp+15360
0x5C44	0x00000000 ;_alcohol_bmp+15364
0x5C48	0x00000000 ;_alcohol_bmp+15368
0x5C4C	0x00000000 ;_alcohol_bmp+15372
0x5C50	0x00000000 ;_alcohol_bmp+15376
0x5C54	0x08410000 ;_alcohol_bmp+15380
0x5C58	0xFFFFD6BA ;_alcohol_bmp+15384
0x5C5C	0xFFFFFFFF ;_alcohol_bmp+15388
0x5C60	0xFFFFFFFF ;_alcohol_bmp+15392
0x5C64	0xFFFFFFFF ;_alcohol_bmp+15396
0x5C68	0xFFFFFFFF ;_alcohol_bmp+15400
0x5C6C	0xFFFFFFFF ;_alcohol_bmp+15404
0x5C70	0xFFFFFFFF ;_alcohol_bmp+15408
0x5C74	0xFFFFFFFF ;_alcohol_bmp+15412
0x5C78	0xFFFFFFFF ;_alcohol_bmp+15416
0x5C7C	0xFFFFFFFF ;_alcohol_bmp+15420
0x5C80	0xFFFFFFFF ;_alcohol_bmp+15424
0x5C84	0xFFFFFFFF ;_alcohol_bmp+15428
0x5C88	0xFFFFFFFF ;_alcohol_bmp+15432
0x5C8C	0xFFFFFFFF ;_alcohol_bmp+15436
0x5C90	0xFFFFFFFF ;_alcohol_bmp+15440
0x5C94	0xFFFFFFFF ;_alcohol_bmp+15444
0x5C98	0xFFFFFFFF ;_alcohol_bmp+15448
0x5C9C	0xFFFFFFFF ;_alcohol_bmp+15452
0x5CA0	0xFFFFFFFF ;_alcohol_bmp+15456
0x5CA4	0xFFFFFFFF ;_alcohol_bmp+15460
0x5CA8	0xFFFFFFFF ;_alcohol_bmp+15464
0x5CAC	0xFFFFFFFF ;_alcohol_bmp+15468
0x5CB0	0xFFFFFFFF ;_alcohol_bmp+15472
0x5CB4	0xFFFFFFFF ;_alcohol_bmp+15476
0x5CB8	0xFFFFFFFF ;_alcohol_bmp+15480
0x5CBC	0xFFFFFFFF ;_alcohol_bmp+15484
0x5CC0	0xFFFFFFFF ;_alcohol_bmp+15488
0x5CC4	0xFFFFFFFF ;_alcohol_bmp+15492
0x5CC8	0xFFFFFFFF ;_alcohol_bmp+15496
0x5CCC	0xFFFFFFFF ;_alcohol_bmp+15500
0x5CD0	0xFFFFFFFF ;_alcohol_bmp+15504
0x5CD4	0xFFFFFFFF ;_alcohol_bmp+15508
0x5CD8	0xFFFFFFFF ;_alcohol_bmp+15512
0x5CDC	0xFFFFFFFF ;_alcohol_bmp+15516
0x5CE0	0xFFFFFFFF ;_alcohol_bmp+15520
0x5CE4	0xFFFFFFFF ;_alcohol_bmp+15524
0x5CE8	0xFFFFFFFF ;_alcohol_bmp+15528
0x5CEC	0xFFFFFFFF ;_alcohol_bmp+15532
0x5CF0	0xB5B6FFFF ;_alcohol_bmp+15536
0x5CF4	0x00000000 ;_alcohol_bmp+15540
0x5CF8	0x00000000 ;_alcohol_bmp+15544
0x5CFC	0x00000000 ;_alcohol_bmp+15548
0x5D00	0x00000000 ;_alcohol_bmp+15552
0x5D04	0x00000000 ;_alcohol_bmp+15556
0x5D08	0x00000000 ;_alcohol_bmp+15560
0x5D0C	0x00000000 ;_alcohol_bmp+15564
0x5D10	0x00000000 ;_alcohol_bmp+15568
0x5D14	0x08410000 ;_alcohol_bmp+15572
0x5D18	0xFFFFD6BA ;_alcohol_bmp+15576
0x5D1C	0xFFFFFFFF ;_alcohol_bmp+15580
0x5D20	0xFFFFFFFF ;_alcohol_bmp+15584
0x5D24	0xFFFFFFFF ;_alcohol_bmp+15588
0x5D28	0xFFFFFFFF ;_alcohol_bmp+15592
0x5D2C	0xFFFFFFFF ;_alcohol_bmp+15596
0x5D30	0xFFFFFFFF ;_alcohol_bmp+15600
0x5D34	0xFFFFFFFF ;_alcohol_bmp+15604
0x5D38	0xFFFFFFFF ;_alcohol_bmp+15608
0x5D3C	0xFFFFFFFF ;_alcohol_bmp+15612
0x5D40	0xFFFFFFFF ;_alcohol_bmp+15616
0x5D44	0xFFFFFFFF ;_alcohol_bmp+15620
0x5D48	0xFFFFFFFF ;_alcohol_bmp+15624
0x5D4C	0xFFFFFFFF ;_alcohol_bmp+15628
0x5D50	0xFFFFFFFF ;_alcohol_bmp+15632
0x5D54	0xFFFFFFFF ;_alcohol_bmp+15636
0x5D58	0xFFFFFFFF ;_alcohol_bmp+15640
0x5D5C	0xFFFFFFFF ;_alcohol_bmp+15644
0x5D60	0xFFFFFFFF ;_alcohol_bmp+15648
0x5D64	0xFFFFFFFF ;_alcohol_bmp+15652
0x5D68	0xFFFFFFFF ;_alcohol_bmp+15656
0x5D6C	0xFFFFFFFF ;_alcohol_bmp+15660
0x5D70	0xFFFFFFFF ;_alcohol_bmp+15664
0x5D74	0xFFFFFFFF ;_alcohol_bmp+15668
0x5D78	0xFFFFFFFF ;_alcohol_bmp+15672
0x5D7C	0xFFFFFFFF ;_alcohol_bmp+15676
0x5D80	0xFFFFFFFF ;_alcohol_bmp+15680
0x5D84	0xFFFFFFFF ;_alcohol_bmp+15684
0x5D88	0xFFFFFFFF ;_alcohol_bmp+15688
0x5D8C	0xFFFFFFFF ;_alcohol_bmp+15692
0x5D90	0xFFFFFFFF ;_alcohol_bmp+15696
0x5D94	0xFFFFFFFF ;_alcohol_bmp+15700
0x5D98	0xFFFFFFFF ;_alcohol_bmp+15704
0x5D9C	0xFFFFFFFF ;_alcohol_bmp+15708
0x5DA0	0xFFFFFFFF ;_alcohol_bmp+15712
0x5DA4	0xFFFFFFFF ;_alcohol_bmp+15716
0x5DA8	0xFFFFFFFF ;_alcohol_bmp+15720
0x5DAC	0xFFFFFFFF ;_alcohol_bmp+15724
0x5DB0	0xB5B6FFFF ;_alcohol_bmp+15728
0x5DB4	0x00000000 ;_alcohol_bmp+15732
0x5DB8	0x00000000 ;_alcohol_bmp+15736
0x5DBC	0x00000000 ;_alcohol_bmp+15740
0x5DC0	0x00000000 ;_alcohol_bmp+15744
0x5DC4	0x00000000 ;_alcohol_bmp+15748
0x5DC8	0x00000000 ;_alcohol_bmp+15752
0x5DCC	0x00000000 ;_alcohol_bmp+15756
0x5DD0	0x00000000 ;_alcohol_bmp+15760
0x5DD4	0x08410000 ;_alcohol_bmp+15764
0x5DD8	0xFFFFD6BA ;_alcohol_bmp+15768
0x5DDC	0xFFFFFFFF ;_alcohol_bmp+15772
0x5DE0	0xFFFFFFFF ;_alcohol_bmp+15776
0x5DE4	0xFFFFFFFF ;_alcohol_bmp+15780
0x5DE8	0xFFFFFFFF ;_alcohol_bmp+15784
0x5DEC	0xFFFFFFFF ;_alcohol_bmp+15788
0x5DF0	0xFFFFFFFF ;_alcohol_bmp+15792
0x5DF4	0xFFFFFFFF ;_alcohol_bmp+15796
0x5DF8	0xFFFFFFFF ;_alcohol_bmp+15800
0x5DFC	0xFFFFFFFF ;_alcohol_bmp+15804
0x5E00	0xFFFFFFFF ;_alcohol_bmp+15808
0x5E04	0xFFFFFFFF ;_alcohol_bmp+15812
0x5E08	0xFFFFFFFF ;_alcohol_bmp+15816
0x5E0C	0xFFFFFFFF ;_alcohol_bmp+15820
0x5E10	0xFFFFFFFF ;_alcohol_bmp+15824
0x5E14	0xFFFFFFFF ;_alcohol_bmp+15828
0x5E18	0xFFFFFFFF ;_alcohol_bmp+15832
0x5E1C	0xFFFFFFFF ;_alcohol_bmp+15836
0x5E20	0xFFFFFFFF ;_alcohol_bmp+15840
0x5E24	0xFFFFFFFF ;_alcohol_bmp+15844
0x5E28	0xFFFFFFFF ;_alcohol_bmp+15848
0x5E2C	0xFFFFFFFF ;_alcohol_bmp+15852
0x5E30	0xFFFFFFFF ;_alcohol_bmp+15856
0x5E34	0xFFFFFFFF ;_alcohol_bmp+15860
0x5E38	0xFFFFFFFF ;_alcohol_bmp+15864
0x5E3C	0xFFFFFFFF ;_alcohol_bmp+15868
0x5E40	0xFFFFFFFF ;_alcohol_bmp+15872
0x5E44	0xFFFFFFFF ;_alcohol_bmp+15876
0x5E48	0xFFFFFFFF ;_alcohol_bmp+15880
0x5E4C	0xFFFFFFFF ;_alcohol_bmp+15884
0x5E50	0xFFFFFFFF ;_alcohol_bmp+15888
0x5E54	0xFFFFFFFF ;_alcohol_bmp+15892
0x5E58	0xFFFFFFFF ;_alcohol_bmp+15896
0x5E5C	0xFFFFFFFF ;_alcohol_bmp+15900
0x5E60	0xFFFFFFFF ;_alcohol_bmp+15904
0x5E64	0xFFFFFFFF ;_alcohol_bmp+15908
0x5E68	0xFFFFFFFF ;_alcohol_bmp+15912
0x5E6C	0xFFFFFFFF ;_alcohol_bmp+15916
0x5E70	0xB5B6FFFF ;_alcohol_bmp+15920
0x5E74	0x00000000 ;_alcohol_bmp+15924
0x5E78	0x00000000 ;_alcohol_bmp+15928
0x5E7C	0x00000000 ;_alcohol_bmp+15932
0x5E80	0x00000000 ;_alcohol_bmp+15936
0x5E84	0x00000000 ;_alcohol_bmp+15940
0x5E88	0x00000000 ;_alcohol_bmp+15944
0x5E8C	0x00000000 ;_alcohol_bmp+15948
0x5E90	0x00000000 ;_alcohol_bmp+15952
0x5E94	0x08410000 ;_alcohol_bmp+15956
0x5E98	0xFFFFD6BA ;_alcohol_bmp+15960
0x5E9C	0xFFFFFFFF ;_alcohol_bmp+15964
0x5EA0	0xFFFFFFFF ;_alcohol_bmp+15968
0x5EA4	0xFFFFFFFF ;_alcohol_bmp+15972
0x5EA8	0xFFFFFFFF ;_alcohol_bmp+15976
0x5EAC	0xFFFFFFFF ;_alcohol_bmp+15980
0x5EB0	0xFFFFFFFF ;_alcohol_bmp+15984
0x5EB4	0xFFFFFFFF ;_alcohol_bmp+15988
0x5EB8	0xFFFFFFFF ;_alcohol_bmp+15992
0x5EBC	0xFFFFFFFF ;_alcohol_bmp+15996
0x5EC0	0xFFFFFFFF ;_alcohol_bmp+16000
0x5EC4	0xFFFFFFFF ;_alcohol_bmp+16004
0x5EC8	0xFFFFFFFF ;_alcohol_bmp+16008
0x5ECC	0xFFFFFFFF ;_alcohol_bmp+16012
0x5ED0	0xFFFFFFFF ;_alcohol_bmp+16016
0x5ED4	0xFFFFFFFF ;_alcohol_bmp+16020
0x5ED8	0xFFFFFFFF ;_alcohol_bmp+16024
0x5EDC	0xFFFFFFFF ;_alcohol_bmp+16028
0x5EE0	0xFFFFFFFF ;_alcohol_bmp+16032
0x5EE4	0xFFFFFFFF ;_alcohol_bmp+16036
0x5EE8	0xFFFFFFFF ;_alcohol_bmp+16040
0x5EEC	0xFFFFFFFF ;_alcohol_bmp+16044
0x5EF0	0xFFFFFFFF ;_alcohol_bmp+16048
0x5EF4	0xFFFFFFFF ;_alcohol_bmp+16052
0x5EF8	0xFFFFFFFF ;_alcohol_bmp+16056
0x5EFC	0xFFFFFFFF ;_alcohol_bmp+16060
0x5F00	0xFFFFFFFF ;_alcohol_bmp+16064
0x5F04	0xFFFFFFFF ;_alcohol_bmp+16068
0x5F08	0xFFFFFFFF ;_alcohol_bmp+16072
0x5F0C	0xFFFFFFFF ;_alcohol_bmp+16076
0x5F10	0xFFFFFFFF ;_alcohol_bmp+16080
0x5F14	0xFFFFFFFF ;_alcohol_bmp+16084
0x5F18	0xFFFFFFFF ;_alcohol_bmp+16088
0x5F1C	0xFFFFFFFF ;_alcohol_bmp+16092
0x5F20	0xFFFFFFFF ;_alcohol_bmp+16096
0x5F24	0xFFFFFFFF ;_alcohol_bmp+16100
0x5F28	0xFFFFFFFF ;_alcohol_bmp+16104
0x5F2C	0xFFFFFFFF ;_alcohol_bmp+16108
0x5F30	0xB5B6FFFF ;_alcohol_bmp+16112
0x5F34	0x00000000 ;_alcohol_bmp+16116
0x5F38	0x00000000 ;_alcohol_bmp+16120
0x5F3C	0x00000000 ;_alcohol_bmp+16124
0x5F40	0x00000000 ;_alcohol_bmp+16128
0x5F44	0x00000000 ;_alcohol_bmp+16132
0x5F48	0x00000000 ;_alcohol_bmp+16136
0x5F4C	0x00000000 ;_alcohol_bmp+16140
0x5F50	0x00000000 ;_alcohol_bmp+16144
0x5F54	0x08410000 ;_alcohol_bmp+16148
0x5F58	0xFFFFD6BA ;_alcohol_bmp+16152
0x5F5C	0xFFFFFFFF ;_alcohol_bmp+16156
0x5F60	0xFFFFFFFF ;_alcohol_bmp+16160
0x5F64	0xFFFFFFFF ;_alcohol_bmp+16164
0x5F68	0xFFFFFFFF ;_alcohol_bmp+16168
0x5F6C	0xFFFFFFFF ;_alcohol_bmp+16172
0x5F70	0xFFFFFFFF ;_alcohol_bmp+16176
0x5F74	0xFFFFFFFF ;_alcohol_bmp+16180
0x5F78	0xFFFFFFFF ;_alcohol_bmp+16184
0x5F7C	0xFFFFFFFF ;_alcohol_bmp+16188
0x5F80	0xFFFFFFFF ;_alcohol_bmp+16192
0x5F84	0xFFFFFFFF ;_alcohol_bmp+16196
0x5F88	0xFFFFFFFF ;_alcohol_bmp+16200
0x5F8C	0xFFFFFFFF ;_alcohol_bmp+16204
0x5F90	0xFFFFFFFF ;_alcohol_bmp+16208
0x5F94	0xFFFFFFFF ;_alcohol_bmp+16212
0x5F98	0xFFFFFFFF ;_alcohol_bmp+16216
0x5F9C	0xFFFFFFFF ;_alcohol_bmp+16220
0x5FA0	0xFFFFFFFF ;_alcohol_bmp+16224
0x5FA4	0xFFFFFFFF ;_alcohol_bmp+16228
0x5FA8	0xFFFFFFFF ;_alcohol_bmp+16232
0x5FAC	0xFFFFFFFF ;_alcohol_bmp+16236
0x5FB0	0xFFFFFFFF ;_alcohol_bmp+16240
0x5FB4	0xFFFFFFFF ;_alcohol_bmp+16244
0x5FB8	0xFFFFFFFF ;_alcohol_bmp+16248
0x5FBC	0xFFFFFFFF ;_alcohol_bmp+16252
0x5FC0	0xFFFFFFFF ;_alcohol_bmp+16256
0x5FC4	0xFFFFFFFF ;_alcohol_bmp+16260
0x5FC8	0xFFFFFFFF ;_alcohol_bmp+16264
0x5FCC	0xFFFFFFFF ;_alcohol_bmp+16268
0x5FD0	0xFFFFFFFF ;_alcohol_bmp+16272
0x5FD4	0xFFFFFFFF ;_alcohol_bmp+16276
0x5FD8	0xFFFFFFFF ;_alcohol_bmp+16280
0x5FDC	0xFFFFFFFF ;_alcohol_bmp+16284
0x5FE0	0xFFFFFFFF ;_alcohol_bmp+16288
0x5FE4	0xFFFFFFFF ;_alcohol_bmp+16292
0x5FE8	0xFFFFFFFF ;_alcohol_bmp+16296
0x5FEC	0xFFFFFFFF ;_alcohol_bmp+16300
0x5FF0	0xB5B6FFFF ;_alcohol_bmp+16304
0x5FF4	0x00000000 ;_alcohol_bmp+16308
0x5FF8	0x00000000 ;_alcohol_bmp+16312
0x5FFC	0x00000000 ;_alcohol_bmp+16316
0x6000	0x00000000 ;_alcohol_bmp+16320
0x6004	0x00000000 ;_alcohol_bmp+16324
0x6008	0x00000000 ;_alcohol_bmp+16328
0x600C	0x00000000 ;_alcohol_bmp+16332
0x6010	0x00000000 ;_alcohol_bmp+16336
0x6014	0x08410000 ;_alcohol_bmp+16340
0x6018	0xFFFFD6BA ;_alcohol_bmp+16344
0x601C	0xFFFFFFFF ;_alcohol_bmp+16348
0x6020	0xFFFFFFFF ;_alcohol_bmp+16352
0x6024	0xFFFFFFFF ;_alcohol_bmp+16356
0x6028	0xFFFFFFFF ;_alcohol_bmp+16360
0x602C	0xFFFFFFFF ;_alcohol_bmp+16364
0x6030	0xFFFFFFFF ;_alcohol_bmp+16368
0x6034	0xFFFFFFFF ;_alcohol_bmp+16372
0x6038	0xFFFFFFFF ;_alcohol_bmp+16376
0x603C	0xFFFFFFFF ;_alcohol_bmp+16380
0x6040	0xFFFFFFFF ;_alcohol_bmp+16384
0x6044	0xFFFFFFFF ;_alcohol_bmp+16388
0x6048	0xFFFFFFFF ;_alcohol_bmp+16392
0x604C	0xFFFFFFFF ;_alcohol_bmp+16396
0x6050	0xFFFFFFFF ;_alcohol_bmp+16400
0x6054	0xFFFFFFFF ;_alcohol_bmp+16404
0x6058	0xFFFFFFFF ;_alcohol_bmp+16408
0x605C	0xFFFFFFFF ;_alcohol_bmp+16412
0x6060	0xFFFFFFFF ;_alcohol_bmp+16416
0x6064	0xFFFFFFFF ;_alcohol_bmp+16420
0x6068	0xFFFFFFFF ;_alcohol_bmp+16424
0x606C	0xFFFFFFFF ;_alcohol_bmp+16428
0x6070	0xFFFFFFFF ;_alcohol_bmp+16432
0x6074	0xFFFFFFFF ;_alcohol_bmp+16436
0x6078	0xFFFFFFFF ;_alcohol_bmp+16440
0x607C	0xFFFFFFFF ;_alcohol_bmp+16444
0x6080	0xFFFFFFFF ;_alcohol_bmp+16448
0x6084	0xFFFFFFFF ;_alcohol_bmp+16452
0x6088	0xFFFFFFFF ;_alcohol_bmp+16456
0x608C	0xFFFFFFFF ;_alcohol_bmp+16460
0x6090	0xFFFFFFFF ;_alcohol_bmp+16464
0x6094	0xFFFFFFFF ;_alcohol_bmp+16468
0x6098	0xFFFFFFFF ;_alcohol_bmp+16472
0x609C	0xFFFFFFFF ;_alcohol_bmp+16476
0x60A0	0xFFFFFFFF ;_alcohol_bmp+16480
0x60A4	0xFFFFFFFF ;_alcohol_bmp+16484
0x60A8	0xFFFFFFFF ;_alcohol_bmp+16488
0x60AC	0xFFFFFFFF ;_alcohol_bmp+16492
0x60B0	0xB5B6FFFF ;_alcohol_bmp+16496
0x60B4	0x00000000 ;_alcohol_bmp+16500
0x60B8	0x00000000 ;_alcohol_bmp+16504
0x60BC	0x00000000 ;_alcohol_bmp+16508
0x60C0	0x00000000 ;_alcohol_bmp+16512
0x60C4	0x00000000 ;_alcohol_bmp+16516
0x60C8	0x00000000 ;_alcohol_bmp+16520
0x60CC	0x00000000 ;_alcohol_bmp+16524
0x60D0	0x00000000 ;_alcohol_bmp+16528
0x60D4	0x08410000 ;_alcohol_bmp+16532
0x60D8	0xFFFFD6BA ;_alcohol_bmp+16536
0x60DC	0xFFFFFFFF ;_alcohol_bmp+16540
0x60E0	0xFFFFFFFF ;_alcohol_bmp+16544
0x60E4	0xFFFFFFFF ;_alcohol_bmp+16548
0x60E8	0xFFFFFFFF ;_alcohol_bmp+16552
0x60EC	0xFFFFFFFF ;_alcohol_bmp+16556
0x60F0	0xFFFFFFFF ;_alcohol_bmp+16560
0x60F4	0xFFFFFFFF ;_alcohol_bmp+16564
0x60F8	0xFFFFFFFF ;_alcohol_bmp+16568
0x60FC	0xFFFFFFFF ;_alcohol_bmp+16572
0x6100	0xFFFFFFFF ;_alcohol_bmp+16576
0x6104	0xFFFFFFFF ;_alcohol_bmp+16580
0x6108	0xFFFFFFFF ;_alcohol_bmp+16584
0x610C	0xFFFFFFFF ;_alcohol_bmp+16588
0x6110	0xFFFFFFFF ;_alcohol_bmp+16592
0x6114	0xFFFFFFFF ;_alcohol_bmp+16596
0x6118	0xFFFFFFFF ;_alcohol_bmp+16600
0x611C	0xFFFFFFFF ;_alcohol_bmp+16604
0x6120	0xFFFFFFFF ;_alcohol_bmp+16608
0x6124	0xFFFFFFFF ;_alcohol_bmp+16612
0x6128	0xFFFFFFFF ;_alcohol_bmp+16616
0x612C	0xFFFFFFFF ;_alcohol_bmp+16620
0x6130	0xFFFFFFFF ;_alcohol_bmp+16624
0x6134	0xFFFFFFFF ;_alcohol_bmp+16628
0x6138	0xFFFFFFFF ;_alcohol_bmp+16632
0x613C	0xFFFFFFFF ;_alcohol_bmp+16636
0x6140	0xFFFFFFFF ;_alcohol_bmp+16640
0x6144	0xFFFFFFFF ;_alcohol_bmp+16644
0x6148	0xFFFFFFFF ;_alcohol_bmp+16648
0x614C	0xFFFFFFFF ;_alcohol_bmp+16652
0x6150	0xFFFFFFFF ;_alcohol_bmp+16656
0x6154	0xFFFFFFFF ;_alcohol_bmp+16660
0x6158	0xFFFFFFFF ;_alcohol_bmp+16664
0x615C	0xFFFFFFFF ;_alcohol_bmp+16668
0x6160	0xFFFFFFFF ;_alcohol_bmp+16672
0x6164	0xFFFFFFFF ;_alcohol_bmp+16676
0x6168	0xFFFFFFFF ;_alcohol_bmp+16680
0x616C	0xFFFFFFFF ;_alcohol_bmp+16684
0x6170	0xB5B6FFFF ;_alcohol_bmp+16688
0x6174	0x00000000 ;_alcohol_bmp+16692
0x6178	0x00000000 ;_alcohol_bmp+16696
0x617C	0x00000000 ;_alcohol_bmp+16700
0x6180	0x00000000 ;_alcohol_bmp+16704
0x6184	0x00000000 ;_alcohol_bmp+16708
0x6188	0x00000000 ;_alcohol_bmp+16712
0x618C	0x00000000 ;_alcohol_bmp+16716
0x6190	0x00000000 ;_alcohol_bmp+16720
0x6194	0x08410000 ;_alcohol_bmp+16724
0x6198	0xFFFFDEFB ;_alcohol_bmp+16728
0x619C	0xFFFFFFFF ;_alcohol_bmp+16732
0x61A0	0xFFFFFFFF ;_alcohol_bmp+16736
0x61A4	0xFFFFFFFF ;_alcohol_bmp+16740
0x61A8	0xFFFFFFFF ;_alcohol_bmp+16744
0x61AC	0xFFFFFFFF ;_alcohol_bmp+16748
0x61B0	0xFFFFFFFF ;_alcohol_bmp+16752
0x61B4	0xFFFFFFFF ;_alcohol_bmp+16756
0x61B8	0xFFFFFFFF ;_alcohol_bmp+16760
0x61BC	0xFFFFFFFF ;_alcohol_bmp+16764
0x61C0	0xFFFFFFFF ;_alcohol_bmp+16768
0x61C4	0xFFFFFFFF ;_alcohol_bmp+16772
0x61C8	0xFFFFFFFF ;_alcohol_bmp+16776
0x61CC	0xFFFFFFFF ;_alcohol_bmp+16780
0x61D0	0xFFFFFFFF ;_alcohol_bmp+16784
0x61D4	0xFFFFFFFF ;_alcohol_bmp+16788
0x61D8	0xFFFFFFFF ;_alcohol_bmp+16792
0x61DC	0xFFFFFFFF ;_alcohol_bmp+16796
0x61E0	0xFFFFFFFF ;_alcohol_bmp+16800
0x61E4	0xFFFFFFFF ;_alcohol_bmp+16804
0x61E8	0xFFFFFFFF ;_alcohol_bmp+16808
0x61EC	0xFFFFFFFF ;_alcohol_bmp+16812
0x61F0	0xFFFFFFFF ;_alcohol_bmp+16816
0x61F4	0xFFFFFFFF ;_alcohol_bmp+16820
0x61F8	0xFFFFFFFF ;_alcohol_bmp+16824
0x61FC	0xFFFFFFFF ;_alcohol_bmp+16828
0x6200	0xFFFFFFFF ;_alcohol_bmp+16832
0x6204	0xFFFFFFFF ;_alcohol_bmp+16836
0x6208	0xFFFFFFFF ;_alcohol_bmp+16840
0x620C	0xFFFFFFFF ;_alcohol_bmp+16844
0x6210	0xFFFFFFFF ;_alcohol_bmp+16848
0x6214	0xFFFFFFFF ;_alcohol_bmp+16852
0x6218	0xFFFFFFFF ;_alcohol_bmp+16856
0x621C	0xFFFFFFFF ;_alcohol_bmp+16860
0x6220	0xFFFFFFFF ;_alcohol_bmp+16864
0x6224	0xFFFFFFFF ;_alcohol_bmp+16868
0x6228	0xFFFFFFFF ;_alcohol_bmp+16872
0x622C	0xFFFFFFFF ;_alcohol_bmp+16876
0x6230	0xBDF7FFFF ;_alcohol_bmp+16880
0x6234	0x00000000 ;_alcohol_bmp+16884
0x6238	0x00000000 ;_alcohol_bmp+16888
0x623C	0x00000000 ;_alcohol_bmp+16892
0x6240	0x00000000 ;_alcohol_bmp+16896
0x6244	0x00000000 ;_alcohol_bmp+16900
0x6248	0x00000000 ;_alcohol_bmp+16904
0x624C	0x00000000 ;_alcohol_bmp+16908
0x6250	0x00000000 ;_alcohol_bmp+16912
0x6254	0x00000000 ;_alcohol_bmp+16916
0x6258	0xFFFFB5B6 ;_alcohol_bmp+16920
0x625C	0xFFFFFFFF ;_alcohol_bmp+16924
0x6260	0xFFFFFFFF ;_alcohol_bmp+16928
0x6264	0xFFFFFFFF ;_alcohol_bmp+16932
0x6268	0xFFFFFFFF ;_alcohol_bmp+16936
0x626C	0xFFFFFFFF ;_alcohol_bmp+16940
0x6270	0xFFFFFFFF ;_alcohol_bmp+16944
0x6274	0xFFFFFFFF ;_alcohol_bmp+16948
0x6278	0xFFFFFFFF ;_alcohol_bmp+16952
0x627C	0xFFFFFFFF ;_alcohol_bmp+16956
0x6280	0xFFFFFFFF ;_alcohol_bmp+16960
0x6284	0xFFFFFFFF ;_alcohol_bmp+16964
0x6288	0xFFFFFFFF ;_alcohol_bmp+16968
0x628C	0xFFFFFFFF ;_alcohol_bmp+16972
0x6290	0xFFFFFFFF ;_alcohol_bmp+16976
0x6294	0xFFFFFFFF ;_alcohol_bmp+16980
0x6298	0xFFFFFFFF ;_alcohol_bmp+16984
0x629C	0xFFFFFFFF ;_alcohol_bmp+16988
0x62A0	0xFFFFFFFF ;_alcohol_bmp+16992
0x62A4	0xFFFFFFFF ;_alcohol_bmp+16996
0x62A8	0xFFFFFFFF ;_alcohol_bmp+17000
0x62AC	0xFFFFFFFF ;_alcohol_bmp+17004
0x62B0	0xFFFFFFFF ;_alcohol_bmp+17008
0x62B4	0xFFFFFFFF ;_alcohol_bmp+17012
0x62B8	0xFFFFFFFF ;_alcohol_bmp+17016
0x62BC	0xFFFFFFFF ;_alcohol_bmp+17020
0x62C0	0xFFFFFFFF ;_alcohol_bmp+17024
0x62C4	0xFFFFFFFF ;_alcohol_bmp+17028
0x62C8	0xFFFFFFFF ;_alcohol_bmp+17032
0x62CC	0xFFFFFFFF ;_alcohol_bmp+17036
0x62D0	0xFFFFFFFF ;_alcohol_bmp+17040
0x62D4	0xFFFFFFFF ;_alcohol_bmp+17044
0x62D8	0xFFFFFFFF ;_alcohol_bmp+17048
0x62DC	0xFFFFFFFF ;_alcohol_bmp+17052
0x62E0	0xFFFFFFFF ;_alcohol_bmp+17056
0x62E4	0xFFFFFFFF ;_alcohol_bmp+17060
0x62E8	0xFFFFFFFF ;_alcohol_bmp+17064
0x62EC	0xFFFFFFFF ;_alcohol_bmp+17068
0x62F0	0x8C71FFFF ;_alcohol_bmp+17072
0x62F4	0x00000000 ;_alcohol_bmp+17076
0x62F8	0x00000000 ;_alcohol_bmp+17080
0x62FC	0x00000000 ;_alcohol_bmp+17084
0x6300	0x00000000 ;_alcohol_bmp+17088
0x6304	0x00000000 ;_alcohol_bmp+17092
0x6308	0x00000000 ;_alcohol_bmp+17096
0x630C	0x00000000 ;_alcohol_bmp+17100
0x6310	0x00000000 ;_alcohol_bmp+17104
0x6314	0x00000000 ;_alcohol_bmp+17108
0x6318	0x84302104 ;_alcohol_bmp+17112
0x631C	0x94B294B2 ;_alcohol_bmp+17116
0x6320	0x94B294B2 ;_alcohol_bmp+17120
0x6324	0x94B294B2 ;_alcohol_bmp+17124
0x6328	0x94B294B2 ;_alcohol_bmp+17128
0x632C	0x94B294B2 ;_alcohol_bmp+17132
0x6330	0x94B294B2 ;_alcohol_bmp+17136
0x6334	0x94B294B2 ;_alcohol_bmp+17140
0x6338	0x94B294B2 ;_alcohol_bmp+17144
0x633C	0x94B294B2 ;_alcohol_bmp+17148
0x6340	0x94B294B2 ;_alcohol_bmp+17152
0x6344	0x94B294B2 ;_alcohol_bmp+17156
0x6348	0x94B294B2 ;_alcohol_bmp+17160
0x634C	0x94B294B2 ;_alcohol_bmp+17164
0x6350	0x94B294B2 ;_alcohol_bmp+17168
0x6354	0x94B294B2 ;_alcohol_bmp+17172
0x6358	0x94B294B2 ;_alcohol_bmp+17176
0x635C	0x94B294B2 ;_alcohol_bmp+17180
0x6360	0x94B294B2 ;_alcohol_bmp+17184
0x6364	0x94B294B2 ;_alcohol_bmp+17188
0x6368	0x94B294B2 ;_alcohol_bmp+17192
0x636C	0x94B294B2 ;_alcohol_bmp+17196
0x6370	0x94B294B2 ;_alcohol_bmp+17200
0x6374	0x94B294B2 ;_alcohol_bmp+17204
0x6378	0x94B294B2 ;_alcohol_bmp+17208
0x637C	0x94B294B2 ;_alcohol_bmp+17212
0x6380	0x94B294B2 ;_alcohol_bmp+17216
0x6384	0x94B294B2 ;_alcohol_bmp+17220
0x6388	0x94B294B2 ;_alcohol_bmp+17224
0x638C	0x94B294B2 ;_alcohol_bmp+17228
0x6390	0x94B294B2 ;_alcohol_bmp+17232
0x6394	0x94B294B2 ;_alcohol_bmp+17236
0x6398	0x94B294B2 ;_alcohol_bmp+17240
0x639C	0x94B294B2 ;_alcohol_bmp+17244
0x63A0	0x94B294B2 ;_alcohol_bmp+17248
0x63A4	0x94B294B2 ;_alcohol_bmp+17252
0x63A8	0x94B294B2 ;_alcohol_bmp+17256
0x63AC	0x94B294B2 ;_alcohol_bmp+17260
0x63B0	0x1082738E ;_alcohol_bmp+17264
0x63B4	0x00000000 ;_alcohol_bmp+17268
0x63B8	0x00000000 ;_alcohol_bmp+17272
0x63BC	0x00000000 ;_alcohol_bmp+17276
0x63C0	0x00000000 ;_alcohol_bmp+17280
0x63C4	0x00000000 ;_alcohol_bmp+17284
0x63C8	0x00000000 ;_alcohol_bmp+17288
0x63CC	0x00000000 ;_alcohol_bmp+17292
0x63D0	0x00000000 ;_alcohol_bmp+17296
0x63D4	0x00000000 ;_alcohol_bmp+17300
0x63D8	0x00000000 ;_alcohol_bmp+17304
0x63DC	0x00000000 ;_alcohol_bmp+17308
0x63E0	0x00000000 ;_alcohol_bmp+17312
0x63E4	0x00000000 ;_alcohol_bmp+17316
0x63E8	0x00000000 ;_alcohol_bmp+17320
0x63EC	0x00000000 ;_alcohol_bmp+17324
0x63F0	0x00000000 ;_alcohol_bmp+17328
0x63F4	0x00000000 ;_alcohol_bmp+17332
0x63F8	0x00000000 ;_alcohol_bmp+17336
0x63FC	0x00000000 ;_alcohol_bmp+17340
0x6400	0x00000000 ;_alcohol_bmp+17344
0x6404	0x00000000 ;_alcohol_bmp+17348
0x6408	0x00000000 ;_alcohol_bmp+17352
0x640C	0x00000000 ;_alcohol_bmp+17356
0x6410	0x00000000 ;_alcohol_bmp+17360
0x6414	0x00000000 ;_alcohol_bmp+17364
0x6418	0x00000000 ;_alcohol_bmp+17368
0x641C	0x00000000 ;_alcohol_bmp+17372
0x6420	0x00000000 ;_alcohol_bmp+17376
0x6424	0x00000000 ;_alcohol_bmp+17380
0x6428	0x00000000 ;_alcohol_bmp+17384
0x642C	0x00000000 ;_alcohol_bmp+17388
0x6430	0x00000000 ;_alcohol_bmp+17392
0x6434	0x00000000 ;_alcohol_bmp+17396
0x6438	0x00000000 ;_alcohol_bmp+17400
0x643C	0x00000000 ;_alcohol_bmp+17404
0x6440	0x00000000 ;_alcohol_bmp+17408
0x6444	0x00000000 ;_alcohol_bmp+17412
0x6448	0x00000000 ;_alcohol_bmp+17416
0x644C	0x00000000 ;_alcohol_bmp+17420
0x6450	0x00000000 ;_alcohol_bmp+17424
0x6454	0x00000000 ;_alcohol_bmp+17428
0x6458	0x00000000 ;_alcohol_bmp+17432
0x645C	0x00000000 ;_alcohol_bmp+17436
0x6460	0x00000000 ;_alcohol_bmp+17440
0x6464	0x00000000 ;_alcohol_bmp+17444
0x6468	0x00000000 ;_alcohol_bmp+17448
0x646C	0x00000000 ;_alcohol_bmp+17452
0x6470	0x00000000 ;_alcohol_bmp+17456
0x6474	0x00000000 ;_alcohol_bmp+17460
0x6478	0x00000000 ;_alcohol_bmp+17464
0x647C	0x00000000 ;_alcohol_bmp+17468
0x6480	0x00000000 ;_alcohol_bmp+17472
0x6484	0x00000000 ;_alcohol_bmp+17476
0x6488	0x00000000 ;_alcohol_bmp+17480
0x648C	0x00000000 ;_alcohol_bmp+17484
0x6490	0x00000000 ;_alcohol_bmp+17488
0x6494	0x00000000 ;_alcohol_bmp+17492
0x6498	0x00000000 ;_alcohol_bmp+17496
0x649C	0x00000000 ;_alcohol_bmp+17500
0x64A0	0x00000000 ;_alcohol_bmp+17504
0x64A4	0x00000000 ;_alcohol_bmp+17508
0x64A8	0x00000000 ;_alcohol_bmp+17512
0x64AC	0x00000000 ;_alcohol_bmp+17516
0x64B0	0x00000000 ;_alcohol_bmp+17520
0x64B4	0x00000000 ;_alcohol_bmp+17524
0x64B8	0x00000000 ;_alcohol_bmp+17528
0x64BC	0x00000000 ;_alcohol_bmp+17532
0x64C0	0x00000000 ;_alcohol_bmp+17536
0x64C4	0x00000000 ;_alcohol_bmp+17540
0x64C8	0x00000000 ;_alcohol_bmp+17544
0x64CC	0x00000000 ;_alcohol_bmp+17548
0x64D0	0x00000000 ;_alcohol_bmp+17552
0x64D4	0x00000000 ;_alcohol_bmp+17556
0x64D8	0x00000000 ;_alcohol_bmp+17560
0x64DC	0x00000000 ;_alcohol_bmp+17564
0x64E0	0x00000000 ;_alcohol_bmp+17568
0x64E4	0x00000000 ;_alcohol_bmp+17572
0x64E8	0x00000000 ;_alcohol_bmp+17576
0x64EC	0x00000000 ;_alcohol_bmp+17580
0x64F0	0x00000000 ;_alcohol_bmp+17584
0x64F4	0x00000000 ;_alcohol_bmp+17588
0x64F8	0x00000000 ;_alcohol_bmp+17592
0x64FC	0x00000000 ;_alcohol_bmp+17596
0x6500	0x00000000 ;_alcohol_bmp+17600
0x6504	0x00000000 ;_alcohol_bmp+17604
0x6508	0x00000000 ;_alcohol_bmp+17608
0x650C	0x00000000 ;_alcohol_bmp+17612
0x6510	0x00000000 ;_alcohol_bmp+17616
0x6514	0x00000000 ;_alcohol_bmp+17620
0x6518	0x00000000 ;_alcohol_bmp+17624
0x651C	0x00000000 ;_alcohol_bmp+17628
0x6520	0x00000000 ;_alcohol_bmp+17632
0x6524	0x00000000 ;_alcohol_bmp+17636
0x6528	0x00000000 ;_alcohol_bmp+17640
0x652C	0x00000000 ;_alcohol_bmp+17644
0x6530	0x00000000 ;_alcohol_bmp+17648
0x6534	0x00000000 ;_alcohol_bmp+17652
0x6538	0x00000000 ;_alcohol_bmp+17656
0x653C	0x00000000 ;_alcohol_bmp+17660
0x6540	0x00000000 ;_alcohol_bmp+17664
0x6544	0x00000000 ;_alcohol_bmp+17668
0x6548	0x00000000 ;_alcohol_bmp+17672
0x654C	0x00000000 ;_alcohol_bmp+17676
0x6550	0x00000000 ;_alcohol_bmp+17680
0x6554	0x00000000 ;_alcohol_bmp+17684
0x6558	0x00000000 ;_alcohol_bmp+17688
0x655C	0x00000000 ;_alcohol_bmp+17692
0x6560	0x00000000 ;_alcohol_bmp+17696
0x6564	0x00000000 ;_alcohol_bmp+17700
0x6568	0x00000000 ;_alcohol_bmp+17704
0x656C	0x00000000 ;_alcohol_bmp+17708
0x6570	0x00000000 ;_alcohol_bmp+17712
0x6574	0x00000000 ;_alcohol_bmp+17716
0x6578	0x00000000 ;_alcohol_bmp+17720
0x657C	0x00000000 ;_alcohol_bmp+17724
0x6580	0x00000000 ;_alcohol_bmp+17728
0x6584	0x00000000 ;_alcohol_bmp+17732
0x6588	0x00000000 ;_alcohol_bmp+17736
0x658C	0x00000000 ;_alcohol_bmp+17740
0x6590	0x00000000 ;_alcohol_bmp+17744
0x6594	0x00000000 ;_alcohol_bmp+17748
0x6598	0x00000000 ;_alcohol_bmp+17752
0x659C	0x00000000 ;_alcohol_bmp+17756
0x65A0	0x00000000 ;_alcohol_bmp+17760
0x65A4	0x00000000 ;_alcohol_bmp+17764
0x65A8	0x00000000 ;_alcohol_bmp+17768
0x65AC	0x00000000 ;_alcohol_bmp+17772
0x65B0	0x00000000 ;_alcohol_bmp+17776
0x65B4	0x00000000 ;_alcohol_bmp+17780
0x65B8	0x00000000 ;_alcohol_bmp+17784
0x65BC	0x00000000 ;_alcohol_bmp+17788
0x65C0	0x00000000 ;_alcohol_bmp+17792
0x65C4	0x00000000 ;_alcohol_bmp+17796
0x65C8	0x00000000 ;_alcohol_bmp+17800
0x65CC	0x00000000 ;_alcohol_bmp+17804
0x65D0	0x00000000 ;_alcohol_bmp+17808
0x65D4	0x00000000 ;_alcohol_bmp+17812
0x65D8	0x00000000 ;_alcohol_bmp+17816
0x65DC	0x00000000 ;_alcohol_bmp+17820
0x65E0	0x00000000 ;_alcohol_bmp+17824
0x65E4	0x00000000 ;_alcohol_bmp+17828
0x65E8	0x00000000 ;_alcohol_bmp+17832
0x65EC	0x00000000 ;_alcohol_bmp+17836
0x65F0	0x00000000 ;_alcohol_bmp+17840
0x65F4	0x00000000 ;_alcohol_bmp+17844
0x65F8	0x00000000 ;_alcohol_bmp+17848
0x65FC	0x00000000 ;_alcohol_bmp+17852
0x6600	0x00000000 ;_alcohol_bmp+17856
0x6604	0x00000000 ;_alcohol_bmp+17860
0x6608	0x00000000 ;_alcohol_bmp+17864
0x660C	0x00000000 ;_alcohol_bmp+17868
0x6610	0x00000000 ;_alcohol_bmp+17872
0x6614	0x00000000 ;_alcohol_bmp+17876
0x6618	0x00000000 ;_alcohol_bmp+17880
0x661C	0x00000000 ;_alcohol_bmp+17884
0x6620	0x00000000 ;_alcohol_bmp+17888
0x6624	0x00000000 ;_alcohol_bmp+17892
0x6628	0x00000000 ;_alcohol_bmp+17896
0x662C	0x00000000 ;_alcohol_bmp+17900
0x6630	0x00000000 ;_alcohol_bmp+17904
0x6634	0x00000000 ;_alcohol_bmp+17908
0x6638	0x00000000 ;_alcohol_bmp+17912
0x663C	0x00000000 ;_alcohol_bmp+17916
0x6640	0x00000000 ;_alcohol_bmp+17920
0x6644	0x00000000 ;_alcohol_bmp+17924
0x6648	0x00000000 ;_alcohol_bmp+17928
0x664C	0x00000000 ;_alcohol_bmp+17932
0x6650	0x00000000 ;_alcohol_bmp+17936
0x6654	0x00000000 ;_alcohol_bmp+17940
0x6658	0x00000000 ;_alcohol_bmp+17944
0x665C	0x00000000 ;_alcohol_bmp+17948
0x6660	0x00000000 ;_alcohol_bmp+17952
0x6664	0x00000000 ;_alcohol_bmp+17956
0x6668	0x00000000 ;_alcohol_bmp+17960
0x666C	0x00000000 ;_alcohol_bmp+17964
0x6670	0x00000000 ;_alcohol_bmp+17968
0x6674	0x00000000 ;_alcohol_bmp+17972
0x6678	0x00000000 ;_alcohol_bmp+17976
0x667C	0x00000000 ;_alcohol_bmp+17980
0x6680	0x00000000 ;_alcohol_bmp+17984
0x6684	0x00000000 ;_alcohol_bmp+17988
0x6688	0x00000000 ;_alcohol_bmp+17992
0x668C	0x00000000 ;_alcohol_bmp+17996
0x6690	0x00000000 ;_alcohol_bmp+18000
0x6694	0x00000000 ;_alcohol_bmp+18004
0x6698	0x00000000 ;_alcohol_bmp+18008
0x669C	0x00000000 ;_alcohol_bmp+18012
0x66A0	0x00000000 ;_alcohol_bmp+18016
0x66A4	0x00000000 ;_alcohol_bmp+18020
0x66A8	0x00000000 ;_alcohol_bmp+18024
0x66AC	0x00000000 ;_alcohol_bmp+18028
0x66B0	0x00000000 ;_alcohol_bmp+18032
0x66B4	0x00000000 ;_alcohol_bmp+18036
0x66B8	0x00000000 ;_alcohol_bmp+18040
0x66BC	0x00000000 ;_alcohol_bmp+18044
0x66C0	0x00000000 ;_alcohol_bmp+18048
0x66C4	0x00000000 ;_alcohol_bmp+18052
0x66C8	0x00000000 ;_alcohol_bmp+18056
0x66CC	0x00000000 ;_alcohol_bmp+18060
0x66D0	0x00000000 ;_alcohol_bmp+18064
0x66D4	0x00000000 ;_alcohol_bmp+18068
0x66D8	0x00000000 ;_alcohol_bmp+18072
0x66DC	0x00000000 ;_alcohol_bmp+18076
0x66E0	0x00000000 ;_alcohol_bmp+18080
0x66E4	0x00000000 ;_alcohol_bmp+18084
0x66E8	0x00000000 ;_alcohol_bmp+18088
0x66EC	0x00000000 ;_alcohol_bmp+18092
0x66F0	0x00000000 ;_alcohol_bmp+18096
0x66F4	0x00000000 ;_alcohol_bmp+18100
0x66F8	0x00000000 ;_alcohol_bmp+18104
0x66FC	0x00000000 ;_alcohol_bmp+18108
0x6700	0x00000000 ;_alcohol_bmp+18112
0x6704	0x00000000 ;_alcohol_bmp+18116
0x6708	0x00000000 ;_alcohol_bmp+18120
0x670C	0x00000000 ;_alcohol_bmp+18124
0x6710	0x00000000 ;_alcohol_bmp+18128
0x6714	0x00000000 ;_alcohol_bmp+18132
0x6718	0x00000000 ;_alcohol_bmp+18136
0x671C	0x00000000 ;_alcohol_bmp+18140
0x6720	0x00000000 ;_alcohol_bmp+18144
0x6724	0x00000000 ;_alcohol_bmp+18148
0x6728	0x00000000 ;_alcohol_bmp+18152
0x672C	0x00000000 ;_alcohol_bmp+18156
0x6730	0x00000000 ;_alcohol_bmp+18160
0x6734	0x00000000 ;_alcohol_bmp+18164
0x6738	0x00000000 ;_alcohol_bmp+18168
0x673C	0x00000000 ;_alcohol_bmp+18172
0x6740	0x00000000 ;_alcohol_bmp+18176
0x6744	0x00000000 ;_alcohol_bmp+18180
0x6748	0x00000000 ;_alcohol_bmp+18184
0x674C	0x00000000 ;_alcohol_bmp+18188
0x6750	0x00000000 ;_alcohol_bmp+18192
0x6754	0x00000000 ;_alcohol_bmp+18196
0x6758	0x00000000 ;_alcohol_bmp+18200
0x675C	0x00000000 ;_alcohol_bmp+18204
0x6760	0x00000000 ;_alcohol_bmp+18208
0x6764	0x00000000 ;_alcohol_bmp+18212
0x6768	0x00000000 ;_alcohol_bmp+18216
0x676C	0x00000000 ;_alcohol_bmp+18220
0x6770	0x00000000 ;_alcohol_bmp+18224
0x6774	0x00000000 ;_alcohol_bmp+18228
0x6778	0x00000000 ;_alcohol_bmp+18232
0x677C	0x00000000 ;_alcohol_bmp+18236
0x6780	0x00000000 ;_alcohol_bmp+18240
0x6784	0x00000000 ;_alcohol_bmp+18244
0x6788	0x00000000 ;_alcohol_bmp+18248
0x678C	0x00000000 ;_alcohol_bmp+18252
0x6790	0x00000000 ;_alcohol_bmp+18256
0x6794	0x00000000 ;_alcohol_bmp+18260
0x6798	0x00000000 ;_alcohol_bmp+18264
0x679C	0x00000000 ;_alcohol_bmp+18268
0x67A0	0x00000000 ;_alcohol_bmp+18272
0x67A4	0x00000000 ;_alcohol_bmp+18276
0x67A8	0x00000000 ;_alcohol_bmp+18280
0x67AC	0x00000000 ;_alcohol_bmp+18284
0x67B0	0x00000000 ;_alcohol_bmp+18288
0x67B4	0x00000000 ;_alcohol_bmp+18292
0x67B8	0x00000000 ;_alcohol_bmp+18296
0x67BC	0x00000000 ;_alcohol_bmp+18300
0x67C0	0x00000000 ;_alcohol_bmp+18304
0x67C4	0x00000000 ;_alcohol_bmp+18308
0x67C8	0x00000000 ;_alcohol_bmp+18312
0x67CC	0x00000000 ;_alcohol_bmp+18316
0x67D0	0x00000000 ;_alcohol_bmp+18320
0x67D4	0x00000000 ;_alcohol_bmp+18324
0x67D8	0x00000000 ;_alcohol_bmp+18328
0x67DC	0x00000000 ;_alcohol_bmp+18332
0x67E0	0x00000000 ;_alcohol_bmp+18336
0x67E4	0x00000000 ;_alcohol_bmp+18340
0x67E8	0x00000000 ;_alcohol_bmp+18344
0x67EC	0x00000000 ;_alcohol_bmp+18348
0x67F0	0x00000000 ;_alcohol_bmp+18352
0x67F4	0x00000000 ;_alcohol_bmp+18356
0x67F8	0x00000000 ;_alcohol_bmp+18360
0x67FC	0x00000000 ;_alcohol_bmp+18364
0x6800	0x00000000 ;_alcohol_bmp+18368
0x6804	0x00000000 ;_alcohol_bmp+18372
0x6808	0x00000000 ;_alcohol_bmp+18376
0x680C	0x00000000 ;_alcohol_bmp+18380
0x6810	0x00000000 ;_alcohol_bmp+18384
0x6814	0x00000000 ;_alcohol_bmp+18388
0x6818	0x00000000 ;_alcohol_bmp+18392
0x681C	0x00000000 ;_alcohol_bmp+18396
0x6820	0x00000000 ;_alcohol_bmp+18400
0x6824	0x00000000 ;_alcohol_bmp+18404
0x6828	0x00000000 ;_alcohol_bmp+18408
0x682C	0x00000000 ;_alcohol_bmp+18412
0x6830	0x00000000 ;_alcohol_bmp+18416
0x6834	0x00000000 ;_alcohol_bmp+18420
0x6838	0x00000000 ;_alcohol_bmp+18424
0x683C	0x00000000 ;_alcohol_bmp+18428
0x6840	0x00000000 ;_alcohol_bmp+18432
0x6844	0x0000 ;_alcohol_bmp+18436
; end of _alcohol_bmp
;OLED_resources.c,1164 :: _guiFont_Tahoma_8_Regular [1679]
0x6846	0x00200000 ;_guiFont_Tahoma_8_Regular+0
0x684A	0x100D007F ;_guiFont_Tahoma_8_Regular+4
0x684E	0x00018803 ;_guiFont_Tahoma_8_Regular+8
0x6852	0x00019502 ;_guiFont_Tahoma_8_Regular+12
0x6856	0x0001A203 ;_guiFont_Tahoma_8_Regular+16
0x685A	0x0001AF07 ;_guiFont_Tahoma_8_Regular+20
0x685E	0x0001BC05 ;_guiFont_Tahoma_8_Regular+24
0x6862	0x0001C90A ;_guiFont_Tahoma_8_Regular+28
0x6866	0x0001E307 ;_guiFont_Tahoma_8_Regular+32
0x686A	0x0001F001 ;_guiFont_Tahoma_8_Regular+36
0x686E	0x0001FD03 ;_guiFont_Tahoma_8_Regular+40
0x6872	0x00020A03 ;_guiFont_Tahoma_8_Regular+44
0x6876	0x00021705 ;_guiFont_Tahoma_8_Regular+48
0x687A	0x00022407 ;_guiFont_Tahoma_8_Regular+52
0x687E	0x00023102 ;_guiFont_Tahoma_8_Regular+56
0x6882	0x00023E03 ;_guiFont_Tahoma_8_Regular+60
0x6886	0x00024B02 ;_guiFont_Tahoma_8_Regular+64
0x688A	0x00025803 ;_guiFont_Tahoma_8_Regular+68
0x688E	0x00026505 ;_guiFont_Tahoma_8_Regular+72
0x6892	0x00027204 ;_guiFont_Tahoma_8_Regular+76
0x6896	0x00027F05 ;_guiFont_Tahoma_8_Regular+80
0x689A	0x00028C05 ;_guiFont_Tahoma_8_Regular+84
0x689E	0x00029905 ;_guiFont_Tahoma_8_Regular+88
0x68A2	0x0002A605 ;_guiFont_Tahoma_8_Regular+92
0x68A6	0x0002B305 ;_guiFont_Tahoma_8_Regular+96
0x68AA	0x0002C005 ;_guiFont_Tahoma_8_Regular+100
0x68AE	0x0002CD05 ;_guiFont_Tahoma_8_Regular+104
0x68B2	0x0002DA05 ;_guiFont_Tahoma_8_Regular+108
0x68B6	0x0002E702 ;_guiFont_Tahoma_8_Regular+112
0x68BA	0x0002F402 ;_guiFont_Tahoma_8_Regular+116
0x68BE	0x00030107 ;_guiFont_Tahoma_8_Regular+120
0x68C2	0x00030E07 ;_guiFont_Tahoma_8_Regular+124
0x68C6	0x00031B07 ;_guiFont_Tahoma_8_Regular+128
0x68CA	0x00032804 ;_guiFont_Tahoma_8_Regular+132
0x68CE	0x00033509 ;_guiFont_Tahoma_8_Regular+136
0x68D2	0x00034F06 ;_guiFont_Tahoma_8_Regular+140
0x68D6	0x00035C05 ;_guiFont_Tahoma_8_Regular+144
0x68DA	0x00036906 ;_guiFont_Tahoma_8_Regular+148
0x68DE	0x00037606 ;_guiFont_Tahoma_8_Regular+152
0x68E2	0x00038305 ;_guiFont_Tahoma_8_Regular+156
0x68E6	0x00039005 ;_guiFont_Tahoma_8_Regular+160
0x68EA	0x00039D06 ;_guiFont_Tahoma_8_Regular+164
0x68EE	0x0003AA06 ;_guiFont_Tahoma_8_Regular+168
0x68F2	0x0003B703 ;_guiFont_Tahoma_8_Regular+172
0x68F6	0x0003C404 ;_guiFont_Tahoma_8_Regular+176
0x68FA	0x0003D105 ;_guiFont_Tahoma_8_Regular+180
0x68FE	0x0003DE04 ;_guiFont_Tahoma_8_Regular+184
0x6902	0x0003EB07 ;_guiFont_Tahoma_8_Regular+188
0x6906	0x0003F806 ;_guiFont_Tahoma_8_Regular+192
0x690A	0x00040507 ;_guiFont_Tahoma_8_Regular+196
0x690E	0x00041205 ;_guiFont_Tahoma_8_Regular+200
0x6912	0x00041F07 ;_guiFont_Tahoma_8_Regular+204
0x6916	0x00042C06 ;_guiFont_Tahoma_8_Regular+208
0x691A	0x00043905 ;_guiFont_Tahoma_8_Regular+212
0x691E	0x00044605 ;_guiFont_Tahoma_8_Regular+216
0x6922	0x00045306 ;_guiFont_Tahoma_8_Regular+220
0x6926	0x00046005 ;_guiFont_Tahoma_8_Regular+224
0x692A	0x00046D09 ;_guiFont_Tahoma_8_Regular+228
0x692E	0x00048705 ;_guiFont_Tahoma_8_Regular+232
0x6932	0x00049405 ;_guiFont_Tahoma_8_Regular+236
0x6936	0x0004A105 ;_guiFont_Tahoma_8_Regular+240
0x693A	0x0004AE03 ;_guiFont_Tahoma_8_Regular+244
0x693E	0x0004BB03 ;_guiFont_Tahoma_8_Regular+248
0x6942	0x0004C803 ;_guiFont_Tahoma_8_Regular+252
0x6946	0x0004D507 ;_guiFont_Tahoma_8_Regular+256
0x694A	0x0004E206 ;_guiFont_Tahoma_8_Regular+260
0x694E	0x0004EF03 ;_guiFont_Tahoma_8_Regular+264
0x6952	0x0004FC05 ;_guiFont_Tahoma_8_Regular+268
0x6956	0x00050905 ;_guiFont_Tahoma_8_Regular+272
0x695A	0x00051604 ;_guiFont_Tahoma_8_Regular+276
0x695E	0x00052305 ;_guiFont_Tahoma_8_Regular+280
0x6962	0x00053005 ;_guiFont_Tahoma_8_Regular+284
0x6966	0x00053D03 ;_guiFont_Tahoma_8_Regular+288
0x696A	0x00054A05 ;_guiFont_Tahoma_8_Regular+292
0x696E	0x00055705 ;_guiFont_Tahoma_8_Regular+296
0x6972	0x00056401 ;_guiFont_Tahoma_8_Regular+300
0x6976	0x00057102 ;_guiFont_Tahoma_8_Regular+304
0x697A	0x00057E05 ;_guiFont_Tahoma_8_Regular+308
0x697E	0x00058B01 ;_guiFont_Tahoma_8_Regular+312
0x6982	0x00059807 ;_guiFont_Tahoma_8_Regular+316
0x6986	0x0005A505 ;_guiFont_Tahoma_8_Regular+320
0x698A	0x0005B205 ;_guiFont_Tahoma_8_Regular+324
0x698E	0x0005BF05 ;_guiFont_Tahoma_8_Regular+328
0x6992	0x0005CC05 ;_guiFont_Tahoma_8_Regular+332
0x6996	0x0005D903 ;_guiFont_Tahoma_8_Regular+336
0x699A	0x0005E604 ;_guiFont_Tahoma_8_Regular+340
0x699E	0x0005F303 ;_guiFont_Tahoma_8_Regular+344
0x69A2	0x00060005 ;_guiFont_Tahoma_8_Regular+348
0x69A6	0x00060D05 ;_guiFont_Tahoma_8_Regular+352
0x69AA	0x00061A07 ;_guiFont_Tahoma_8_Regular+356
0x69AE	0x00062705 ;_guiFont_Tahoma_8_Regular+360
0x69B2	0x00063405 ;_guiFont_Tahoma_8_Regular+364
0x69B6	0x00064104 ;_guiFont_Tahoma_8_Regular+368
0x69BA	0x00064E04 ;_guiFont_Tahoma_8_Regular+372
0x69BE	0x00065B02 ;_guiFont_Tahoma_8_Regular+376
0x69C2	0x00066804 ;_guiFont_Tahoma_8_Regular+380
0x69C6	0x00067507 ;_guiFont_Tahoma_8_Regular+384
0x69CA	0x00068203 ;_guiFont_Tahoma_8_Regular+388
0x69CE	0x00000000 ;_guiFont_Tahoma_8_Regular+392
0x69D2	0x00000000 ;_guiFont_Tahoma_8_Regular+396
0x69D6	0x00000000 ;_guiFont_Tahoma_8_Regular+400
0x69DA	0x00000000 ;_guiFont_Tahoma_8_Regular+404
0x69DE	0x02020202 ;_guiFont_Tahoma_8_Regular+408
0x69E2	0x02000202 ;_guiFont_Tahoma_8_Regular+412
0x69E6	0x00000000 ;_guiFont_Tahoma_8_Regular+416
0x69EA	0x00050505 ;_guiFont_Tahoma_8_Regular+420
0x69EE	0x00000000 ;_guiFont_Tahoma_8_Regular+424
0x69F2	0x00000000 ;_guiFont_Tahoma_8_Regular+428
0x69F6	0x28280000 ;_guiFont_Tahoma_8_Regular+432
0x69FA	0x3F14147E ;_guiFont_Tahoma_8_Regular+436
0x69FE	0x00000A0A ;_guiFont_Tahoma_8_Regular+440
0x6A02	0x04040000 ;_guiFont_Tahoma_8_Regular+444
0x6A06	0x0E05051E ;_guiFont_Tahoma_8_Regular+448
0x6A0A	0x040F1414 ;_guiFont_Tahoma_8_Regular+452
0x6A0E	0x00000004 ;_guiFont_Tahoma_8_Regular+456
0x6A12	0x46000000 ;_guiFont_Tahoma_8_Regular+460
0x6A16	0x29004900 ;_guiFont_Tahoma_8_Regular+464
0x6A1A	0x90002600 ;_guiFont_Tahoma_8_Regular+468
0x6A1E	0x48025001 ;_guiFont_Tahoma_8_Regular+472
0x6A22	0x00018802 ;_guiFont_Tahoma_8_Regular+476
0x6A26	0x00000000 ;_guiFont_Tahoma_8_Regular+480
0x6A2A	0x09060000 ;_guiFont_Tahoma_8_Regular+484
0x6A2E	0x11292609 ;_guiFont_Tahoma_8_Regular+488
0x6A32	0x00004E31 ;_guiFont_Tahoma_8_Regular+492
0x6A36	0x01010000 ;_guiFont_Tahoma_8_Regular+496
0x6A3A	0x00000001 ;_guiFont_Tahoma_8_Regular+500
0x6A3E	0x00000000 ;_guiFont_Tahoma_8_Regular+504
0x6A42	0x04000000 ;_guiFont_Tahoma_8_Regular+508
0x6A46	0x01010202 ;_guiFont_Tahoma_8_Regular+512
0x6A4A	0x02010101 ;_guiFont_Tahoma_8_Regular+516
0x6A4E	0x00000402 ;_guiFont_Tahoma_8_Regular+520
0x6A52	0x04020201 ;_guiFont_Tahoma_8_Regular+524
0x6A56	0x04040404 ;_guiFont_Tahoma_8_Regular+528
0x6A5A	0x00010202 ;_guiFont_Tahoma_8_Regular+532
0x6A5E	0x0E150400 ;_guiFont_Tahoma_8_Regular+536
0x6A62	0x00000415 ;_guiFont_Tahoma_8_Regular+540
0x6A66	0x00000000 ;_guiFont_Tahoma_8_Regular+544
0x6A6A	0x00000000 ;_guiFont_Tahoma_8_Regular+548
0x6A6E	0x7F080808 ;_guiFont_Tahoma_8_Regular+552
0x6A72	0x00080808 ;_guiFont_Tahoma_8_Regular+556
0x6A76	0x00000000 ;_guiFont_Tahoma_8_Regular+560
0x6A7A	0x00000000 ;_guiFont_Tahoma_8_Regular+564
0x6A7E	0x02020000 ;_guiFont_Tahoma_8_Regular+568
0x6A82	0x00000102 ;_guiFont_Tahoma_8_Regular+572
0x6A86	0x00000000 ;_guiFont_Tahoma_8_Regular+576
0x6A8A	0x00000700 ;_guiFont_Tahoma_8_Regular+580
0x6A8E	0x00000000 ;_guiFont_Tahoma_8_Regular+584
0x6A92	0x00000000 ;_guiFont_Tahoma_8_Regular+588
0x6A96	0x00000000 ;_guiFont_Tahoma_8_Regular+592
0x6A9A	0x00000202 ;_guiFont_Tahoma_8_Regular+596
0x6A9E	0x04040000 ;_guiFont_Tahoma_8_Regular+600
0x6AA2	0x02020204 ;_guiFont_Tahoma_8_Regular+604
0x6AA6	0x01010202 ;_guiFont_Tahoma_8_Regular+608
0x6AAA	0x00000001 ;_guiFont_Tahoma_8_Regular+612
0x6AAE	0x1111110E ;_guiFont_Tahoma_8_Regular+616
0x6AB2	0x0E111111 ;_guiFont_Tahoma_8_Regular+620
0x6AB6	0x00000000 ;_guiFont_Tahoma_8_Regular+624
0x6ABA	0x04060400 ;_guiFont_Tahoma_8_Regular+628
0x6ABE	0x04040404 ;_guiFont_Tahoma_8_Regular+632
0x6AC2	0x0000000E ;_guiFont_Tahoma_8_Regular+636
0x6AC6	0x110E0000 ;_guiFont_Tahoma_8_Regular+640
0x6ACA	0x02040810 ;_guiFont_Tahoma_8_Regular+644
0x6ACE	0x00001F01 ;_guiFont_Tahoma_8_Regular+648
0x6AD2	0x0E000000 ;_guiFont_Tahoma_8_Regular+652
0x6AD6	0x100C1011 ;_guiFont_Tahoma_8_Regular+656
0x6ADA	0x000E1110 ;_guiFont_Tahoma_8_Regular+660
0x6ADE	0x00000000 ;_guiFont_Tahoma_8_Regular+664
0x6AE2	0x090A0C08 ;_guiFont_Tahoma_8_Regular+668
0x6AE6	0x0808081F ;_guiFont_Tahoma_8_Regular+672
0x6AEA	0x00000000 ;_guiFont_Tahoma_8_Regular+676
0x6AEE	0x01011F00 ;_guiFont_Tahoma_8_Regular+680
0x6AF2	0x1110100F ;_guiFont_Tahoma_8_Regular+684
0x6AF6	0x0000000E ;_guiFont_Tahoma_8_Regular+688
0x6AFA	0x020C0000 ;_guiFont_Tahoma_8_Regular+692
0x6AFE	0x11110F01 ;_guiFont_Tahoma_8_Regular+696
0x6B02	0x00000E11 ;_guiFont_Tahoma_8_Regular+700
0x6B06	0x1F000000 ;_guiFont_Tahoma_8_Regular+704
0x6B0A	0x04080810 ;_guiFont_Tahoma_8_Regular+708
0x6B0E	0x00020204 ;_guiFont_Tahoma_8_Regular+712
0x6B12	0x00000000 ;_guiFont_Tahoma_8_Regular+716
0x6B16	0x0E11110E ;_guiFont_Tahoma_8_Regular+720
0x6B1A	0x0E111111 ;_guiFont_Tahoma_8_Regular+724
0x6B1E	0x00000000 ;_guiFont_Tahoma_8_Regular+728
0x6B22	0x11110E00 ;_guiFont_Tahoma_8_Regular+732
0x6B26	0x08101E11 ;_guiFont_Tahoma_8_Regular+736
0x6B2A	0x00000006 ;_guiFont_Tahoma_8_Regular+740
0x6B2E	0x00000000 ;_guiFont_Tahoma_8_Regular+744
0x6B32	0x00000202 ;_guiFont_Tahoma_8_Regular+748
0x6B36	0x00000202 ;_guiFont_Tahoma_8_Regular+752
0x6B3A	0x00000000 ;_guiFont_Tahoma_8_Regular+756
0x6B3E	0x00020200 ;_guiFont_Tahoma_8_Regular+760
0x6B42	0x02020200 ;_guiFont_Tahoma_8_Regular+764
0x6B46	0x00000001 ;_guiFont_Tahoma_8_Regular+768
0x6B4A	0x0C304000 ;_guiFont_Tahoma_8_Regular+772
0x6B4E	0x40300C02 ;_guiFont_Tahoma_8_Regular+776
0x6B52	0x00000000 ;_guiFont_Tahoma_8_Regular+780
0x6B56	0x00000000 ;_guiFont_Tahoma_8_Regular+784
0x6B5A	0x007F007F ;_guiFont_Tahoma_8_Regular+788
0x6B5E	0x00000000 ;_guiFont_Tahoma_8_Regular+792
0x6B62	0x02000000 ;_guiFont_Tahoma_8_Regular+796
0x6B66	0x3040300C ;_guiFont_Tahoma_8_Regular+800
0x6B6A	0x0000020C ;_guiFont_Tahoma_8_Regular+804
0x6B6E	0x07000000 ;_guiFont_Tahoma_8_Regular+808
0x6B72	0x02040808 ;_guiFont_Tahoma_8_Regular+812
0x6B76	0x00020002 ;_guiFont_Tahoma_8_Regular+816
0x6B7A	0x00000000 ;_guiFont_Tahoma_8_Regular+820
0x6B7E	0x7C000000 ;_guiFont_Tahoma_8_Regular+824
0x6B82	0x39008200 ;_guiFont_Tahoma_8_Regular+828
0x6B86	0x25012501 ;_guiFont_Tahoma_8_Regular+832
0x6B8A	0xF9012501 ;_guiFont_Tahoma_8_Regular+836
0x6B8E	0x3C000200 ;_guiFont_Tahoma_8_Regular+840
0x6B92	0x00000000 ;_guiFont_Tahoma_8_Regular+844
0x6B96	0x0C0C0000 ;_guiFont_Tahoma_8_Regular+848
0x6B9A	0x3F121212 ;_guiFont_Tahoma_8_Regular+852
0x6B9E	0x00002121 ;_guiFont_Tahoma_8_Regular+856
0x6BA2	0x0F000000 ;_guiFont_Tahoma_8_Regular+860
0x6BA6	0x110F1111 ;_guiFont_Tahoma_8_Regular+864
0x6BAA	0x000F1111 ;_guiFont_Tahoma_8_Regular+868
0x6BAE	0x00000000 ;_guiFont_Tahoma_8_Regular+872
0x6BB2	0x0101023C ;_guiFont_Tahoma_8_Regular+876
0x6BB6	0x3C020101 ;_guiFont_Tahoma_8_Regular+880
0x6BBA	0x00000000 ;_guiFont_Tahoma_8_Regular+884
0x6BBE	0x21110F00 ;_guiFont_Tahoma_8_Regular+888
0x6BC2	0x11212121 ;_guiFont_Tahoma_8_Regular+892
0x6BC6	0x0000000F ;_guiFont_Tahoma_8_Regular+896
0x6BCA	0x011F0000 ;_guiFont_Tahoma_8_Regular+900
0x6BCE	0x01010F01 ;_guiFont_Tahoma_8_Regular+904
0x6BD2	0x00001F01 ;_guiFont_Tahoma_8_Regular+908
0x6BD6	0x1F000000 ;_guiFont_Tahoma_8_Regular+912
0x6BDA	0x011F0101 ;_guiFont_Tahoma_8_Regular+916
0x6BDE	0x00010101 ;_guiFont_Tahoma_8_Regular+920
0x6BE2	0x00000000 ;_guiFont_Tahoma_8_Regular+924
0x6BE6	0x0101023C ;_guiFont_Tahoma_8_Regular+928
0x6BEA	0x3C222139 ;_guiFont_Tahoma_8_Regular+932
0x6BEE	0x00000000 ;_guiFont_Tahoma_8_Regular+936
0x6BF2	0x21212100 ;_guiFont_Tahoma_8_Regular+940
0x6BF6	0x2121213F ;_guiFont_Tahoma_8_Regular+944
0x6BFA	0x00000021 ;_guiFont_Tahoma_8_Regular+948
0x6BFE	0x02070000 ;_guiFont_Tahoma_8_Regular+952
0x6C02	0x02020202 ;_guiFont_Tahoma_8_Regular+956
0x6C06	0x00000702 ;_guiFont_Tahoma_8_Regular+960
0x6C0A	0x0E000000 ;_guiFont_Tahoma_8_Regular+964
0x6C0E	0x08080808 ;_guiFont_Tahoma_8_Regular+968
0x6C12	0x00070808 ;_guiFont_Tahoma_8_Regular+972
0x6C16	0x00000000 ;_guiFont_Tahoma_8_Regular+976
0x6C1A	0x03050911 ;_guiFont_Tahoma_8_Regular+980
0x6C1E	0x11090503 ;_guiFont_Tahoma_8_Regular+984
0x6C22	0x00000000 ;_guiFont_Tahoma_8_Regular+988
0x6C26	0x01010100 ;_guiFont_Tahoma_8_Regular+992
0x6C2A	0x01010101 ;_guiFont_Tahoma_8_Regular+996
0x6C2E	0x0000000F ;_guiFont_Tahoma_8_Regular+1000
0x6C32	0x63630000 ;_guiFont_Tahoma_8_Regular+1004
0x6C36	0x49495555 ;_guiFont_Tahoma_8_Regular+1008
0x6C3A	0x00004141 ;_guiFont_Tahoma_8_Regular+1012
0x6C3E	0x23000000 ;_guiFont_Tahoma_8_Regular+1016
0x6C42	0x29252523 ;_guiFont_Tahoma_8_Regular+1020
0x6C46	0x00313129 ;_guiFont_Tahoma_8_Regular+1024
0x6C4A	0x00000000 ;_guiFont_Tahoma_8_Regular+1028
0x6C4E	0x4141221C ;_guiFont_Tahoma_8_Regular+1032
0x6C52	0x1C224141 ;_guiFont_Tahoma_8_Regular+1036
0x6C56	0x00000000 ;_guiFont_Tahoma_8_Regular+1040
0x6C5A	0x11110F00 ;_guiFont_Tahoma_8_Regular+1044
0x6C5E	0x01010F11 ;_guiFont_Tahoma_8_Regular+1048
0x6C62	0x00000001 ;_guiFont_Tahoma_8_Regular+1052
0x6C66	0x221C0000 ;_guiFont_Tahoma_8_Regular+1056
0x6C6A	0x41414141 ;_guiFont_Tahoma_8_Regular+1060
0x6C6E	0x60101C22 ;_guiFont_Tahoma_8_Regular+1064
0x6C72	0x0F000000 ;_guiFont_Tahoma_8_Regular+1068
0x6C76	0x0F111111 ;_guiFont_Tahoma_8_Regular+1072
0x6C7A	0x00211109 ;_guiFont_Tahoma_8_Regular+1076
0x6C7E	0x00000000 ;_guiFont_Tahoma_8_Regular+1080
0x6C82	0x0E01011E ;_guiFont_Tahoma_8_Regular+1084
0x6C86	0x0F101010 ;_guiFont_Tahoma_8_Regular+1088
0x6C8A	0x00000000 ;_guiFont_Tahoma_8_Regular+1092
0x6C8E	0x04041F00 ;_guiFont_Tahoma_8_Regular+1096
0x6C92	0x04040404 ;_guiFont_Tahoma_8_Regular+1100
0x6C96	0x00000004 ;_guiFont_Tahoma_8_Regular+1104
0x6C9A	0x21210000 ;_guiFont_Tahoma_8_Regular+1108
0x6C9E	0x21212121 ;_guiFont_Tahoma_8_Regular+1112
0x6CA2	0x00001E21 ;_guiFont_Tahoma_8_Regular+1116
0x6CA6	0x11000000 ;_guiFont_Tahoma_8_Regular+1120
0x6CAA	0x0A0A1111 ;_guiFont_Tahoma_8_Regular+1124
0x6CAE	0x0004040A ;_guiFont_Tahoma_8_Regular+1128
0x6CB2	0x00000000 ;_guiFont_Tahoma_8_Regular+1132
0x6CB6	0x11000000 ;_guiFont_Tahoma_8_Regular+1136
0x6CBA	0x11011101 ;_guiFont_Tahoma_8_Regular+1140
0x6CBE	0xAA00AA01 ;_guiFont_Tahoma_8_Regular+1144
0x6CC2	0x4400AA00 ;_guiFont_Tahoma_8_Regular+1148
0x6CC6	0x00004400 ;_guiFont_Tahoma_8_Regular+1152
0x6CCA	0x00000000 ;_guiFont_Tahoma_8_Regular+1156
0x6CCE	0x11110000 ;_guiFont_Tahoma_8_Regular+1160
0x6CD2	0x0A04040A ;_guiFont_Tahoma_8_Regular+1164
0x6CD6	0x00001111 ;_guiFont_Tahoma_8_Regular+1168
0x6CDA	0x11000000 ;_guiFont_Tahoma_8_Regular+1172
0x6CDE	0x040A0A11 ;_guiFont_Tahoma_8_Regular+1176
0x6CE2	0x00040404 ;_guiFont_Tahoma_8_Regular+1180
0x6CE6	0x00000000 ;_guiFont_Tahoma_8_Regular+1184
0x6CEA	0x0408101F ;_guiFont_Tahoma_8_Regular+1188
0x6CEE	0x1F010204 ;_guiFont_Tahoma_8_Regular+1192
0x6CF2	0x00000000 ;_guiFont_Tahoma_8_Regular+1196
0x6CF6	0x01010107 ;_guiFont_Tahoma_8_Regular+1200
0x6CFA	0x01010101 ;_guiFont_Tahoma_8_Regular+1204
0x6CFE	0x00070101 ;_guiFont_Tahoma_8_Regular+1208
0x6D02	0x01010100 ;_guiFont_Tahoma_8_Regular+1212
0x6D06	0x02020202 ;_guiFont_Tahoma_8_Regular+1216
0x6D0A	0x04040402 ;_guiFont_Tahoma_8_Regular+1220
0x6D0E	0x04070000 ;_guiFont_Tahoma_8_Regular+1224
0x6D12	0x04040404 ;_guiFont_Tahoma_8_Regular+1228
0x6D16	0x04040404 ;_guiFont_Tahoma_8_Regular+1232
0x6D1A	0x00000007 ;_guiFont_Tahoma_8_Regular+1236
0x6D1E	0x41221408 ;_guiFont_Tahoma_8_Regular+1240
0x6D22	0x00000000 ;_guiFont_Tahoma_8_Regular+1244
0x6D26	0x00000000 ;_guiFont_Tahoma_8_Regular+1248
0x6D2A	0x00000000 ;_guiFont_Tahoma_8_Regular+1252
0x6D2E	0x00000000 ;_guiFont_Tahoma_8_Regular+1256
0x6D32	0x003F0000 ;_guiFont_Tahoma_8_Regular+1260
0x6D36	0x00040200 ;_guiFont_Tahoma_8_Regular+1264
0x6D3A	0x00000000 ;_guiFont_Tahoma_8_Regular+1268
0x6D3E	0x00000000 ;_guiFont_Tahoma_8_Regular+1272
0x6D42	0x00000000 ;_guiFont_Tahoma_8_Regular+1276
0x6D46	0x1E100E00 ;_guiFont_Tahoma_8_Regular+1280
0x6D4A	0x001E1111 ;_guiFont_Tahoma_8_Regular+1284
0x6D4E	0x01000000 ;_guiFont_Tahoma_8_Regular+1288
0x6D52	0x110F0101 ;_guiFont_Tahoma_8_Regular+1292
0x6D56	0x0F111111 ;_guiFont_Tahoma_8_Regular+1296
0x6D5A	0x00000000 ;_guiFont_Tahoma_8_Regular+1300
0x6D5E	0x0E000000 ;_guiFont_Tahoma_8_Regular+1304
0x6D62	0x01010101 ;_guiFont_Tahoma_8_Regular+1308
0x6D66	0x0000000E ;_guiFont_Tahoma_8_Regular+1312
0x6D6A	0x10101000 ;_guiFont_Tahoma_8_Regular+1316
0x6D6E	0x1111111E ;_guiFont_Tahoma_8_Regular+1320
0x6D72	0x00001E11 ;_guiFont_Tahoma_8_Regular+1324
0x6D76	0x00000000 ;_guiFont_Tahoma_8_Regular+1328
0x6D7A	0x1F110E00 ;_guiFont_Tahoma_8_Regular+1332
0x6D7E	0x000E1101 ;_guiFont_Tahoma_8_Regular+1336
0x6D82	0x06000000 ;_guiFont_Tahoma_8_Regular+1340
0x6D86	0x01070101 ;_guiFont_Tahoma_8_Regular+1344
0x6D8A	0x01010101 ;_guiFont_Tahoma_8_Regular+1348
0x6D8E	0x00000000 ;_guiFont_Tahoma_8_Regular+1352
0x6D92	0x1E000000 ;_guiFont_Tahoma_8_Regular+1356
0x6D96	0x11111111 ;_guiFont_Tahoma_8_Regular+1360
0x6D9A	0x000E101E ;_guiFont_Tahoma_8_Regular+1364
0x6D9E	0x01010100 ;_guiFont_Tahoma_8_Regular+1368
0x6DA2	0x1111110F ;_guiFont_Tahoma_8_Regular+1372
0x6DA6	0x00001111 ;_guiFont_Tahoma_8_Regular+1376
0x6DAA	0x01000000 ;_guiFont_Tahoma_8_Regular+1380
0x6DAE	0x01010100 ;_guiFont_Tahoma_8_Regular+1384
0x6DB2	0x00010101 ;_guiFont_Tahoma_8_Regular+1388
0x6DB6	0x00000000 ;_guiFont_Tahoma_8_Regular+1392
0x6DBA	0x02030002 ;_guiFont_Tahoma_8_Regular+1396
0x6DBE	0x02020202 ;_guiFont_Tahoma_8_Regular+1400
0x6DC2	0x00000102 ;_guiFont_Tahoma_8_Regular+1404
0x6DC6	0x09010101 ;_guiFont_Tahoma_8_Regular+1408
0x6DCA	0x09050305 ;_guiFont_Tahoma_8_Regular+1412
0x6DCE	0x00000011 ;_guiFont_Tahoma_8_Regular+1416
0x6DD2	0x01010100 ;_guiFont_Tahoma_8_Regular+1420
0x6DD6	0x01010101 ;_guiFont_Tahoma_8_Regular+1424
0x6DDA	0x00000101 ;_guiFont_Tahoma_8_Regular+1428
0x6DDE	0x00000000 ;_guiFont_Tahoma_8_Regular+1432
0x6DE2	0x49493700 ;_guiFont_Tahoma_8_Regular+1436
0x6DE6	0x00494949 ;_guiFont_Tahoma_8_Regular+1440
0x6DEA	0x00000000 ;_guiFont_Tahoma_8_Regular+1444
0x6DEE	0x110F0000 ;_guiFont_Tahoma_8_Regular+1448
0x6DF2	0x11111111 ;_guiFont_Tahoma_8_Regular+1452
0x6DF6	0x00000000 ;_guiFont_Tahoma_8_Regular+1456
0x6DFA	0x0E000000 ;_guiFont_Tahoma_8_Regular+1460
0x6DFE	0x11111111 ;_guiFont_Tahoma_8_Regular+1464
0x6E02	0x0000000E ;_guiFont_Tahoma_8_Regular+1468
0x6E06	0x00000000 ;_guiFont_Tahoma_8_Regular+1472
0x6E0A	0x1111110F ;_guiFont_Tahoma_8_Regular+1476
0x6E0E	0x01010F11 ;_guiFont_Tahoma_8_Regular+1480
0x6E12	0x00000000 ;_guiFont_Tahoma_8_Regular+1484
0x6E16	0x11111E00 ;_guiFont_Tahoma_8_Regular+1488
0x6E1A	0x101E1111 ;_guiFont_Tahoma_8_Regular+1492
0x6E1E	0x00000010 ;_guiFont_Tahoma_8_Regular+1496
0x6E22	0x03050000 ;_guiFont_Tahoma_8_Regular+1500
0x6E26	0x01010101 ;_guiFont_Tahoma_8_Regular+1504
0x6E2A	0x00000000 ;_guiFont_Tahoma_8_Regular+1508
0x6E2E	0x0E000000 ;_guiFont_Tahoma_8_Regular+1512
0x6E32	0x080C0301 ;_guiFont_Tahoma_8_Regular+1516
0x6E36	0x00000007 ;_guiFont_Tahoma_8_Regular+1520
0x6E3A	0x01010000 ;_guiFont_Tahoma_8_Regular+1524
0x6E3E	0x01010107 ;_guiFont_Tahoma_8_Regular+1528
0x6E42	0x00000601 ;_guiFont_Tahoma_8_Regular+1532
0x6E46	0x00000000 ;_guiFont_Tahoma_8_Regular+1536
0x6E4A	0x11111100 ;_guiFont_Tahoma_8_Regular+1540
0x6E4E	0x001E1111 ;_guiFont_Tahoma_8_Regular+1544
0x6E52	0x00000000 ;_guiFont_Tahoma_8_Regular+1548
0x6E56	0x11110000 ;_guiFont_Tahoma_8_Regular+1552
0x6E5A	0x04040A0A ;_guiFont_Tahoma_8_Regular+1556
0x6E5E	0x00000000 ;_guiFont_Tahoma_8_Regular+1560
0x6E62	0x49000000 ;_guiFont_Tahoma_8_Regular+1564
0x6E66	0x22555549 ;_guiFont_Tahoma_8_Regular+1568
0x6E6A	0x00000022 ;_guiFont_Tahoma_8_Regular+1572
0x6E6E	0x00000000 ;_guiFont_Tahoma_8_Regular+1576
0x6E72	0x04040A11 ;_guiFont_Tahoma_8_Regular+1580
0x6E76	0x0000110A ;_guiFont_Tahoma_8_Regular+1584
0x6E7A	0x00000000 ;_guiFont_Tahoma_8_Regular+1588
0x6E7E	0x0A111100 ;_guiFont_Tahoma_8_Regular+1592
0x6E82	0x0204040A ;_guiFont_Tahoma_8_Regular+1596
0x6E86	0x00000002 ;_guiFont_Tahoma_8_Regular+1600
0x6E8A	0x080F0000 ;_guiFont_Tahoma_8_Regular+1604
0x6E8E	0x0F010204 ;_guiFont_Tahoma_8_Regular+1608
0x6E92	0x00000000 ;_guiFont_Tahoma_8_Regular+1612
0x6E96	0x04040408 ;_guiFont_Tahoma_8_Regular+1616
0x6E9A	0x04040304 ;_guiFont_Tahoma_8_Regular+1620
0x6E9E	0x00080404 ;_guiFont_Tahoma_8_Regular+1624
0x6EA2	0x02020200 ;_guiFont_Tahoma_8_Regular+1628
0x6EA6	0x02020202 ;_guiFont_Tahoma_8_Regular+1632
0x6EAA	0x02020202 ;_guiFont_Tahoma_8_Regular+1636
0x6EAE	0x02010000 ;_guiFont_Tahoma_8_Regular+1640
0x6EB2	0x0C020202 ;_guiFont_Tahoma_8_Regular+1644
0x6EB6	0x02020202 ;_guiFont_Tahoma_8_Regular+1648
0x6EBA	0x00000001 ;_guiFont_Tahoma_8_Regular+1652
0x6EBE	0x46000000 ;_guiFont_Tahoma_8_Regular+1656
0x6EC2	0x00003149 ;_guiFont_Tahoma_8_Regular+1660
0x6EC6	0x00000000 ;_guiFont_Tahoma_8_Regular+1664
0x6ECA	0x05050700 ;_guiFont_Tahoma_8_Regular+1668
0x6ECE	0x05050505 ;_guiFont_Tahoma_8_Regular+1672
0x6ED2	0x000007 ;_guiFont_Tahoma_8_Regular+1676
; end of _guiFont_Tahoma_8_Regular
;__Lib_GPIO_MK64_Defs.c,390 :: __GPIO_Module_SPI2_PB21_23_22 [108]
0x6ED8	0x00000235 ;__GPIO_Module_SPI2_PB21_23_22+0
0x6EDC	0x00000237 ;__GPIO_Module_SPI2_PB21_23_22+4
0x6EE0	0x00000236 ;__GPIO_Module_SPI2_PB21_23_22+8
0x6EE4	0xFFFFFFFF ;__GPIO_Module_SPI2_PB21_23_22+12
0x6EE8	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+16
0x6EEC	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+20
0x6EF0	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+24
0x6EF4	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+28
0x6EF8	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+32
0x6EFC	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+36
0x6F00	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+40
0x6F04	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+44
0x6F08	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+48
0x6F0C	0x00080002 ;__GPIO_Module_SPI2_PB21_23_22+52
0x6F10	0x00080002 ;__GPIO_Module_SPI2_PB21_23_22+56
0x6F14	0x00080002 ;__GPIO_Module_SPI2_PB21_23_22+60
0x6F18	0xFFFFFFFF ;__GPIO_Module_SPI2_PB21_23_22+64
0x6F1C	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+68
0x6F20	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+72
0x6F24	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+76
0x6F28	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+80
0x6F2C	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+84
0x6F30	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+88
0x6F34	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+92
0x6F38	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+96
0x6F3C	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+100
0x6F40	0x00000000 ;__GPIO_Module_SPI2_PB21_23_22+104
; end of __GPIO_Module_SPI2_PB21_23_22
;__Lib_SPI_012.c,248 :: __Lib_SPI_012_baudrateScaler [64]
0x6F44	0x00000002 ;__Lib_SPI_012_baudrateScaler+0
0x6F48	0x00000004 ;__Lib_SPI_012_baudrateScaler+4
0x6F4C	0x00000006 ;__Lib_SPI_012_baudrateScaler+8
0x6F50	0x00000008 ;__Lib_SPI_012_baudrateScaler+12
0x6F54	0x00000010 ;__Lib_SPI_012_baudrateScaler+16
0x6F58	0x00000020 ;__Lib_SPI_012_baudrateScaler+20
0x6F5C	0x00000040 ;__Lib_SPI_012_baudrateScaler+24
0x6F60	0x00000080 ;__Lib_SPI_012_baudrateScaler+28
0x6F64	0x00000100 ;__Lib_SPI_012_baudrateScaler+32
0x6F68	0x00000200 ;__Lib_SPI_012_baudrateScaler+36
0x6F6C	0x00000400 ;__Lib_SPI_012_baudrateScaler+40
0x6F70	0x00000800 ;__Lib_SPI_012_baudrateScaler+44
0x6F74	0x00001000 ;__Lib_SPI_012_baudrateScaler+48
0x6F78	0x00002000 ;__Lib_SPI_012_baudrateScaler+52
0x6F7C	0x00004000 ;__Lib_SPI_012_baudrateScaler+56
0x6F80	0x00008000 ;__Lib_SPI_012_baudrateScaler+60
; end of __Lib_SPI_012_baudrateScaler
;__Lib_CMath.c,329 :: exp_coeff_L0 [40]
0x6F84	0x3F800000 ;exp_coeff_L0+0
0x6F88	0x3F317218 ;exp_coeff_L0+4
0x6F8C	0x3E75FDF0 ;exp_coeff_L0+8
0x6F90	0x3D635847 ;exp_coeff_L0+12
0x6F94	0x3C1D9558 ;exp_coeff_L0+16
0x6F98	0x3AAEC482 ;exp_coeff_L0+20
0x6F9C	0x392178A8 ;exp_coeff_L0+24
0x6FA0	0x378093EF ;exp_coeff_L0+28
0x6FA4	0x35A792A0 ;exp_coeff_L0+32
0x6FA8	0x34155646 ;exp_coeff_L0+36
; end of exp_coeff_L0
;__Lib_CMath.c,367 :: log_coeff_L0 [36]
0x6FAC	0x2EDBE6FF ;log_coeff_L0+0
0x6FB0	0x3F7FFFC4 ;log_coeff_L0+4
0x6FB4	0xBEFFEF80 ;log_coeff_L0+8
0x6FB8	0x3EA9E190 ;log_coeff_L0+12
0x6FBC	0xBE7682EC ;log_coeff_L0+16
0x6FC0	0x3E2BAD82 ;log_coeff_L0+20
0x6FC4	0xBDC33C0E ;log_coeff_L0+24
0x6FC8	0x3D13D187 ;log_coeff_L0+28
0x6FCC	0xBBD37841 ;log_coeff_L0+32
; end of log_coeff_L0
;__Lib_SPI_012.c,247 :: __Lib_SPI_012_baudratePrescaler [16]
0x6FD0	0x00000002 ;__Lib_SPI_012_baudratePrescaler+0
0x6FD4	0x00000003 ;__Lib_SPI_012_baudratePrescaler+4
0x6FD8	0x00000005 ;__Lib_SPI_012_baudratePrescaler+8
0x6FDC	0x00000007 ;__Lib_SPI_012_baudratePrescaler+12
; end of __Lib_SPI_012_baudratePrescaler
;,0 :: _initBlock_9 [6]
; Containing: ?ICSHEXIWEAR_Alcohol_Click_ppmText [5]
;             ?ICSOLED_driver_FontInitialized [1]
0x6FE0	0x3A6D7070 ;_initBlock_9+0 : ?ICSHEXIWEAR_Alcohol_Click_ppmText at 0x6FE0
0x6FE4	0x0000 ;_initBlock_9+4 : ?ICSOLED_driver_FontInitialized at 0x6FE5
; end of _initBlock_9
;HEXIWEAR_Alcohol_Click.c,0 :: ?ICS_adc_rd [2]
0x6FE6	0x03E8 ;?ICS_adc_rd+0
; end of ?ICS_adc_rd
;HEXIWEAR_Alcohol_Click.c,0 :: ?ICS_value_old [4]
0x6FE8	0x00000000 ;?ICS_value_old+0
; end of ?ICS_value_old
;__Lib_ADC_01.c,471 :: _g_adcBase [8]
0x6FEC	0x4003B000 ;_g_adcBase+0
0x6FF0	0x400BB000 ;_g_adcBase+4
; end of _g_adcBase
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0198      [12]    _Get_Fosc_kHz
0x01A4      [44]    __Lib_GPIO_GPIO_HAL_Clk_Enable
0x01D0      [32]    __Lib_UART_012345_UART_Hal_WriteChar
0x01F0      [40]    __Lib_SPI_012_SPI_Hal_WriteBlocking
0x0218     [112]    _SIM_GetClocksFrequency
0x0288      [88]    __Lib_GPIO_GPIO_Config_Pin_Alternate_Function
0x02E0      [28]    _UART4_Write
0x02FC      [32]    _SPI0_Write
0x031C      [42]    __Lib_ADC_01_SIM_HAL_EnableClock
0x0348      [28]    _UART5_Write
0x0364      [14]    __Lib_SPI_012_SPI_Hal_StartTransfer
0x0374      [28]    _UART3_Write
0x0390      [28]    _UART0_Write
0x03AC      [28]    _UART1_Write
0x03C8      [28]    _UART2_Write
0x03E4      [24]    _SPI_Write
0x03FC       [4]    ___GenExcept
0x0410      [32]    _SPI1_Write
0x0430      [32]    _SPI2_Write
0x0450      [68]    __Lib_SPI_012_SPI_Hal_EnableClock
0x0494      [74]    _GPIO_Alternate_Function_Enable
0x04E0     [180]    __Lib_GPIO_GPIO_HAL_Config
0x0594     [104]    __Lib_SPI_012_SPI_Hal_ResetInit
0x05FC     [288]    __Lib_SPI_012_SPI_Hal_SetBaudRate
0x071C     [252]    _ADC16_HAL_ConfigConverter
0x0818      [42]    _frexp
0x0844      [60]    _GPIO_Config
0x0880     [126]    _floor
0x0900      [50]    _ADC16_HAL_Init
0x0934      [64]    __Lib_CMath_eval_poly
0x0974     [128]    _OLED_DrawPixel
0x09F4      [36]    _CLOCK_SYS_EnableAdcClock
0x0A18      [52]    _ADC16_HAL_ConfigChn
0x0A4C      [96]    _ldexp
0x0AAC      [36]    _ADC16_DRV_GetConvValueRAW
0x0AD0     [104]    __Lib_SPI_012_SPI_AssignPtr
0x0B38     [228]    __Lib_SPI_012_SPI_Hal_Init_Advanced
0x0C1C      [56]    _ADC16_DRV_Init
0x0C54      [80]    _ADC16_DRV_StructInitUserConfigDefault
0x0CA4      [38]    _ADC16_DRV_PauseConv
0x0CCC     [112]    _log
0x0D3C     [240]    _exp
0x0E2C      [40]    _ADC16_DRV_ConfigConvChn
0x0E54      [40]    _ADC16_DRV_WaitConvDone
0x0E7C      [20]    _ADC16_DRV_GetConvValueSigned
0x0E90      [16]    _OLED_PowerOn
0x0EA0      [68]    _OLED_SendCmd
0x0EE4      [46]    OLED_driver_OLED_Swap
0x0F14      [24]    _Delay_1ms
0x0F2C      [24]    _GPIO_Digital_Output
0x0F44      [44]    _SPI2_Init_Advanced
0x0F70      [16]    _OLED_PowerOff
0x0F80     [100]    _OLED_SendData
0x0FE4      [20]    OLED_driver_OLED_MoveCursor
0x0FF8     [512]    OLED_driver_OLED_WriteChar
0x11F8     [204]    OLED_driver_SetBorders
0x12C4      [32]    _log10
0x12E4      [32]    _ADC0_Init
0x1304     [700]    _OLED_Init
0x15C0     [166]    _pow
0x1668     [104]    _OLED_SetFont
0x16D0      [70]    _ADC0_Get_Sample
0x1718     [196]    _OLED_DrawImage
0x17DC      [76]    _WordToStr
0x1828      [82]    _OLED_WriteText
0x187C      [16]    ___CC2DW
0x188C     [136]    _DisplayAlcoholValue
0x1914      [54]    ___FillZeros
0x194C     [164]    _CalculatePPM
0x19F0      [52]    _ReadSensor
0x1A24      [88]    _InitModules
0x1A7C      [20]    ___EnableFPU
0x1A90      [16]    __Lib_System_InitialSetUpFosc
0x1AA0      [88]    _main
0x1AF8    [1352]    __Lib_System_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_exp_x
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0004       [4]    FARG_pow_y
0x0004       [4]    FARG_atan2_x
0x1FFF0000       [5]    HEXIWEAR_Alcohol_Click_ppmText
0x1FFF0005       [1]    OLED_driver_FontInitialized
0x1FFF0006       [2]    _adc_rd
0x1FFF0008       [4]    _value_old
0x1FFF000C       [4]    _Vrl
0x1FFF0010       [4]    _SensorRes
0x1FFF0014       [4]    _ratio
0x1FFF0018       [4]    _ppm
0x1FFF001C       [6]    _text
0x1FFF0022   [18432]    OLED_driver_screenBuf
0x1FFF4822       [2]    OLED_driver_x_cord
0x1FFF4824       [2]    OLED_driver_y_cord
0x1FFF4826       [2]    OLED_driver__fontFirstChar
0x1FFF4828       [2]    OLED_driver__fontLastChar
0x1FFF482A       [1]    OLED_driver_FontOrientation
0x1FFF482B       [1]    _ExternalFontSet
0x1FFF482C       [4]    OLED_driver__font
0x1FFF4830       [2]    OLED_driver__fontHeight
0x1FFF4832       [2]    OLED_driver_FontColor
0x1FFF4834      [12]    OLED_driver_oled_text_properties
0x1FFF4840      [11]    _adcUserConfig
0x1FFF484C       [4]    ___System_CLOCK_IN_KHZ
0x1FFF4850       [4]    _SPI_Wr_Ptr
0x1FFF4854       [4]    _SPI_Rd_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0346       [2]    __Lib_ADC_01_adcGateTable
0x2040   [18438]    _alcohol_bmp
0x6846    [1679]    _guiFont_Tahoma_8_Regular
0x6ED8     [108]    __GPIO_Module_SPI2_PB21_23_22
0x6F44      [64]    __Lib_SPI_012_baudrateScaler
0x6F84      [40]    exp_coeff_L0
0x6FAC      [36]    log_coeff_L0
0x6FD0      [16]    __Lib_SPI_012_baudratePrescaler
0x6FE0       [5]    ?ICSHEXIWEAR_Alcohol_Click_ppmText
0x6FE5       [1]    ?ICSOLED_driver_FontInitialized
0x6FE6       [2]    ?ICS_adc_rd
0x6FE8       [4]    ?ICS_value_old
0x6FEC       [8]    _g_adcBase
